iergicxkvcnenavczeigomlghsecditqeqqmwkrc length 5 37037 page 37037 <!DOCTYPE HTML>
<html lang="en">
  <head>
<!-- PDTQ-131 -->
<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-N3RT7TD');</script>
<!-- End Google Tag Manager -->
    
    <meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>Hashicorp Vault Integration - Travis CI</title>
<link rel="stylesheet" href="/assets/stylesheets/main.css">
<link rel="alternate" type="application/rss+xml" title="Travis CI Build Environment Updates" href="https://docs.travis-ci.com/feed.build-env-updates.xml">
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js" defer></script>

<script src="/assets/javascripts/main.js" type="text/javascript" charset="utf-8" defer></script>
<script src="/assets/javascripts/prism.js" type="text/javascript" charset="utf-8" defer></script>
<meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="@travisci" />
<meta name="twitter:creator" content="@travisci" />
<meta property="og:title" content="Travis CI Documentation" />
<meta property="og:type" content="website" />
<meta property="og:url" content=/user/hashicorp-vault-integration/ />
<meta property="og:description" content="Hashicorp Vault Integration" />
<meta property="og:image" content="/images/TravisCI-Full-Color.png" }} />
<meta property="og:image:type" content="image/png" />
<meta property="og:image:width" content="642" />
<meta property="og:image:height" content="201" />
<meta property="og:image:alt" content="Travis CI logo" />


 

  </head>
  <body>
<!-- PDTQ-131 -->
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-N3RT7TD"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

    <div class="wrapper">

      <header class="top">
  <div class="row topbar">
    <h1 id="logo" class="logo">
  <a href="https://travis-ci.com/" title="Travis CI">Travis</a>
</h1>

    <nav>
      <ul id="navigation" class="navigation">
        <li><a href="https://blog.travis-ci.com">Blog</a></li>
        <li><a href="/">Docs</a></li>
        <li class="toggle"><button type="button" id="toggle-menu" class="button--teal">Menu</button></li>
      </ul>
    </nav>
  </div>
</header>


      <div id="content" class="row">

        <div id="sidebar" class="sidebar">
  <div>
    <!-- <h2>Search</h2> -->
    <div class="searchbox">
      <form>
        <input type="text" id="st-search-input" class="searchbox-input" placeholder="Search the docs" />
      </form>
      <script type="text/javascript">
      var Swiftype = window.Swiftype || {};
        (function() {
          Swiftype.key = 'tXvDDzd4fNTBnLvxfEyx';

          Swiftype.searchSearchFields = {
            "page": ["title, body, tags"]
          };
          Swiftype.autocompleteSearchFields = {
            "page": ["title, body, tags"]
          };
          /** DO NOT EDIT BELOW THIS LINE **/
          var script = document.createElement('script'); script.type = 'text/javascript'; script.async = true;
          script.src = "//swiftype.com/embed.js";
          var entry = document.getElementsByTagName('script')[0];
          document.getElementsByTagName('script')[0].parentNode.insertBefore(script, entry);
        }());
      </script>
    </div>
  </div>

  <section class="sidebar-navigation">
    <nav>
      <h3>Getting Started</h3>
      <ul>
        <li><a href="/user/for-beginners/">Core Concepts for Beginners</a></li>
        <li><a href="/user/tutorial/">Travis CI Tutorial</a></li>
        <li><a href="/user/customizing-the-build/">Customizing the Build</a></li>
        <li><a href="/user/speeding-up-the-build/">Speeding up the Build</a></li>
        <li><a href="/user/docker/">Using Docker in your Build</a></li>
        <li><a href="/user/gui-and-headless-browsers/">Headless Testing with Browsers</a></li>
        <li><a href="/user/pull-requests/">Building Pull Requests</a></li>
        <li><a href="/user/cron-jobs/">Cron Jobs</a></li>
        <li><a href="/user/common-build-problems/">Common Build Problems</a></li>
        <li><a href="https://github.com/travis-ci/travis#readme">Command Line Client</a></li>
        <li><a href="/user/build-config-imports/">Build Config Imports</a></li>
        <li><a href="/user/build-config-validation/">Build Config Validation</a></li>
      </ul>

      <h3>Jobs, Builds, Matrices and Stages</h3>
      <ul>
        <li><a href="/user/job-lifecycle/">Job Lifecycle</a></li>
        <li><a href="/user/build-matrix/">Build Matrix</a></li>
        <li><a href="/user/build-stages/">Build Stages</a></li>
        <li><a href="/user/conditional-builds-stages-jobs/">Conditional Builds, Stages, and Jobs</a></li>
      </ul>

      <h3>Installing Dependencies</h3>
      <ul>
        <li><a href="/user/installing-dependencies/">Installing Dependencies</a></li>
        <li><a href="/user/private-dependencies/">Private Dependencies GitHub</a></li>
        <li><a href="/user/private-dependencies-bb/">Private Dependencies Bitbucket</a></li>
        <li><a href="/user/database-setup/">Setting up Services and Databases</a></li>
        <li><a href="/user/caching/">Caching Dependencies</a></li>
        <li><a href="/user/using-workspaces/">Caching Dependencies within a Build (Workspaces)</a></li>
        <li><a href="/user/ssh-known-hosts/">Adding to SSH Known Hosts</a></li>
      </ul>

      <h3>Programming Languages</h3>
      <ul>
      
        <li><a href="/user/languages/android/">Android</a></li>
      
        <li><a href="/user/languages/c/">C</a></li>
      
        <li><a href="/user/languages/csharp/">C#</a></li>
      
        <li><a href="/user/languages/cpp/">C++</a></li>
      
        <li><a href="/user/languages/clojure/">Clojure</a></li>
      
        <li><a href="/user/languages/crystal/">Crystal</a></li>
      
        <li><a href="/user/languages/d/">D</a></li>
      
        <li><a href="/user/languages/dart/">Dart</a></li>
      
        <li><a href="/user/languages/elixir/">Elixir</a></li>
      
        <li><a href="/user/languages/elm/">Elm</a></li>
      
        <li><a href="/user/languages/erlang/">Erlang</a></li>
      
        <li><a href="/user/languages/csharp/">F#</a></li>
      
        <li><a href="/user/languages/minimal-and-generic/">Generic</a></li>
      
        <li><a href="/user/languages/go/">Go</a></li>
      
        <li><a href="/user/languages/groovy/">Groovy</a></li>
      
        <li><a href="/user/languages/haskell/">Haskell</a></li>
      
        <li><a href="/user/languages/haxe/">Haxe</a></li>
      
        <li><a href="/user/languages/java/">Java</a></li>
      
        <li><a href="/user/languages/javascript-with-nodejs/">JavaScript <small>(with Node.js)</small></a></li>
      
        <li><a href="/user/languages/julia/">Julia</a></li>
      
        <li><a href="/user/languages/matlab/">MATLAB</a></li>
      
        <li><a href="/user/languages/minimal-and-generic/">Minimal</a></li>
      
        <li><a href="/user/languages/nix/">Nix</a></li>
      
        <li><a href="/user/languages/objective-c/">Objective-C</a></li>
      
        <li><a href="/user/languages/perl/">Perl</a></li>
      
        <li><a href="/user/languages/perl6/">Perl6</a></li>
      
        <li><a href="/user/languages/php/">PHP</a></li>
      
        <li><a href="/user/languages/python/">Python</a></li>
      
        <li><a href="/user/languages/r/">R</a></li>
      
        <li><a href="/user/languages/ruby/">Ruby</a></li>
      
        <li><a href="/user/languages/rust/">Rust</a></li>
      
        <li><a href="/user/languages/scala/">Scala</a></li>
      
        <li><a href="/user/languages/smalltalk/">Smalltalk</a></li>
      
        <li><a href="/user/languages/objective-c/">Swift</a></li>
      
        <li><a href="/user/languages/csharp/">Visual Basic</a></li>
      
        <li><a href="/user/languages/community-supported-languages/">Adding a language</a></li>
      </ul>

      <h3>Deployments and Uploads</h3>
      <ul>
        
          <li class="is-overview"><a href="/user/deployment/">Overview</a></li>
          
        
        
          <li><a href="/user/deployment/anynines/">anynines</a></li>
        
          <li><a href="/user/deployment/atlas/">Atlas</a></li>
        
          <li><a href="/user/deployment/codedeploy/">AWS CodeDeploy</a></li>
        
          <li><a href="/user/deployment/elasticbeanstalk/">AWS Elastic Beanstalk</a></li>
        
          <li><a href="/user/deployment/lambda/">AWS Lambda</a></li>
        
          <li><a href="/user/deployment/opsworks/">AWS OpsWorks</a></li>
        
          <li><a href="/user/deployment/s3/">AWS S3</a></li>
        
          <li><a href="/user/deployment/azure-web-apps/">Azure Web Apps</a></li>
        
          <li><a href="/user/deployment/bintray/">bintray</a></li>
        
          <li><a href="/user/deployment/bitballoon/">BitBalloon</a></li>
        
          <li><a href="/user/deployment/bluemixcloudfoundry/">Bluemix CloudFoundry</a></li>
        
          <li><a href="/user/deployment/boxfuse/">Boxfuse</a></li>
        
          <li><a href="/user/deployment/catalyze/">Catalyze</a></li>
        
          <li><a href="/user/deployment/chefsupermarket/">Chef Supermarket</a></li>
        
          <li><a href="/user/deployment/cloud66/">Cloud 66</a></li>
        
          <li><a href="/user/deployment/cloudfoundry/">CloudFoundry</a></li>
        
          <li><a href="/user/deployment/cargo/">Cargo</a></li>
        
          <li><a href="/user/deployment/engineyard/">Engine Yard</a></li>
        
          <li><a href="/user/deployment/pages/">GitHub Pages</a></li>
        
          <li><a href="/user/deployment/releases/">GitHub Releases</a></li>
        
          <li><a href="/user/deployment/google-app-engine/">Google App Engine</a></li>
        
          <li><a href="/user/deployment/gcs/">Google Cloud Storage</a></li>
        
          <li><a href="/user/deployment/firebase/">Google Firebase</a></li>
        
          <li><a href="/user/deployment/hackage/">Hackage</a></li>
        
          <li><a href="/user/deployment/hephy/">Hephy</a></li>
        
          <li><a href="/user/deployment/heroku/">Heroku</a></li>
        
          <li><a href="/user/deployment/launchpad/">Launchpad</a></li>
        
          <li><a href="/user/deployment/npm/">npm</a></li>
        
          <li><a href="/user/deployment/openshift/">OpenShift</a></li>
        
          <li><a href="/user/deployment/packagecloud/">packagecloud.io</a></li>
        
          <li><a href="/user/deployment/puppetforge/">Puppet Forge</a></li>
        
          <li><a href="/user/deployment/pypi/">PyPI</a></li>
        
          <li><a href="/user/deployment/cloudfiles/">Rackspace Cloud Files</a></li>
        
          <li><a href="/user/deployment/rubygems/">RubyGems</a></li>
        
          <li><a href="/user/deployment/scalingo/">Scalingo</a></li>
        
          <li><a href="/user/deployment/script/">Script</a></li>
        
          <li><a href="/user/deployment/snaps/">Snap Store</a></li>
        
          <li><a href="/user/deployment/surge/">Surge.sh</a></li>
        
          <li><a href="/user/deployment/testfairy/">TestFairy</a></li>
        
          <li><a href="/user/deployment/transifex/">Transifex</a></li>
        
        <li><a href="/user/uploading-artifacts/">Uploading Build Artifacts</a></li>
      </ul>

      <h3>CI Environment Reference</h3>
      <ul>
        <li class="is-overview"><a href="/user/reference/overview/">Overview</a></li>
        <li><a href="/user/reference/linux/">Ubuntu Linux CI Environment References</a></li>
        <li><a href="/user/reference/osx/">macOS CI Environment Reference</a></li>
        <li><a href="/user/reference/windows/">Windows CI Environment Reference</a></li>
        <li><a href="/user/reference/freebsd/">FreeBSD CI Environment Reference</a></li>
        <li><a href="/user/multi-os/">Building on Multiple Operating Systems</a></li>
        <li><a href="/user/multi-cpu-architectures/">Building on Multiple CPU Architectures</a></li>
        <li><a href="/user/environment-variables/">Environment Variables</a></li>
        <li><a href="/user/build-environment-updates/">Build Environment Updates</a></li>
        <li><a href="/user/ip-addresses/">Build Machines IP Addresses</a></li>
      </ul>

      <h3>Security and Secure Software Supply Chain</h3>
      <ul>
        <li><a href="/user/encryption-keys/">Encrypting Sensitive Data</a></li>
        <li><a href="/user/encrypting-files/">Encrypting Files</a></li>
        <li><a href="/user/github-oauth-scopes/">GitHub Permissions used by Travis CI</a></li>
        <li><a href="/user/bb-oauth-scopes/">Bitbucket Permissions used by Travis CI</a></li>
        <li><a href="/user/assembla-oauth-scopes/">Assembla Permissions used by Travis CI</a></li>
        <li><a href="/user/gl-oauth-scopes/">GitLab Permissions used by Travis CI</a></li>
        <li><a href="/user/disable-job-logs/">Disable Job Logs Availability</a></li>
        <li><a href="/user/best-practices-security/">Best Practices in Securing Your Data</a></li>
        <li><a href="/user/securely-signing-software">Securely Signing Software</a></li>
        <li><a href="/user/sbom">Software Bill of Materials</a></li>
      </ul>

      <h3>Integrations and Notifications</h3>
      <ul>
        <li><a href="/user/notifications/">Configuring Notifications</a></li>
        <li><a href="/user/status-images/">Showing Build Status Images</a></li>
        <li><a href="/user/code-climate/">Code Climate</a></li>
        <li><a href="/user/deepsource/">DeepSource</a></li>
        <li><a href="/user/coveralls/">Coveralls</a></li>
        <li><a href="/user/coverity-scan/">Coverity Scan</a></li>
        <li><a href="/user/browserstack/">BrowserStack</a></li>
        <li><a href="/user/sauce-connect/">Sauce Labs</a></li>
        <li><a href="/user/sonarcloud/">SonarCloud</a></li>
        <li><a href="/user/sourceclear/">SourceClear</a></li>
        <li><a href="/user/build-feeds/">Atom Feeds</a></li>
        <li><a href="/user/cc-menu/">CCMenu / CCTray Feeds</a></li>
        <li><a href="/user/integration/platformio/">Embedded Builds with PlatformIO</a></li>
        <li><a href="/user/hashicorp-vault-integration">Hashicorp Vault</a></li>
        <li><a href="/user/apps/">3rd Party Apps, Clients and Tools</a></li>
      </ul>

      <h3>Developer Program</h3>
      <ul>
        <li class="is-overview"><a href="/user/developer/">Overview</a></li>
        <li><a href="https://developer.travis-ci.com/">API V3</a></li>
        <li><a href="/user/triggering-builds/">Triggering Builds with API V3</a></li>
        <li><a href="https://github.com/travis-ci/travis#ruby-library">The Ruby Library</a></li>
      </ul>
      
      <h3>Hosted Billing</h3>
      <ul>
        <li class="is-overview"><a href="/user/billing-overview/">Overview</a></li>
        <li><a href="/user/billing-autorefill/">Auto-refill</a></li>
        <li><a href="/user/billing-faq/">FAQ</a></li>
      </ul>

      <h3>Travis CI Enterprise</h3>
      <ul>
        <li><a href="/user/enterprise/">Enterprise Docs</a></li>
      </ul>

    </nav>
  </section>

  <section class="sidebar-notice">
    <p>This documentation site is Open Source.
      The <a href="https://github.com/travis-ci/docs-travis-ci-com">README in our Git repository</a> explains how to contribute.</p>
    <p>Travis CI relies on Open Source <a href="/user/open_source_license/">licensing information</a>.</p>
  </section>

</div><!-- /#sidebar -->


        <main id="main" class="main" data-swiftype-index='true'>
          
            <aside class="improve-page" data-swiftype-index='false'><a href="https://github.com/travis-ci/docs-travis-ci-com/edit/master/user/hashicorp-vault-integration.md" target="_blank" title="Edit this page on GitHub" class="button-pen" data-proofer-ignore>Improve this page on GitHub</a></aside>
            <h1 class="title">Hashicorp Vault Integration</h1>
          

          


          
            <div id="toc" class="toc">
              <ul class="list-language">
  <li><a href="#prerequisites">Prerequisites</a></li>
  <li><a href="#how-does-the-integration-work">How does the integration work?</a></li>
  <li><a href="#usage">Usage</a></li>
  <li><a href="#faq">FAQ</a></li>
</ul>

            </div>
          

          <p>Hashicorp Vault is a Key Management System (KMS), which allows to self-manage the set of secrets (credentials), configuration items and access to these.</p>

<p>Travis CI may obtain secrets needed during the build, test, or deployment stages of your Travis CI builds from your Hashicorp Vault instance instead of storing them with Travis CI.</p>

<p>This may be useful if your organization leans towards having complete access control to the secrets or wants to conveniently manage secrets necessary in the CI/CD pipeline in one Key Management System (KMS).</p>

<h2 id="prerequisites">Prerequisites <a href="#prerequisites" class="toc-anchor">#</a></h2>

<p>You will need:</p>

<ul>
  <li>An URL for Hashicorp Vault instance with enabled KV engine and supporting KV2 API (see <a href="https://www.vaultproject.io/api-docs">Hashicorp Vault  documentation</a>).
    <ul>
      <li>The Hashicorp Vault instance API must accept incoming requests from a public network; see our <a href="/user/ip-addresses/">IP Addresses page</a> for information on what exactly must be allowed and a couple of recommendations on configuring the network rules.</li>
    </ul>
  </li>
  <li>A path to the required secrets in Hashicorp Vault.</li>
  <li>A token; <a href="https://www.vaultproject.io/docs/concepts/auth#tokens">obtained after logging into Hashicorp Vault</a> via API/or via Hashicorp Vault CLI (keep it secret!).
    <ul>
      <li>Before trusting Travis CI with the token, we recommend reviewing the Hashicorp Vault account access to the set of secrets; a best practice is to limit it to projects needed for the build/test/deployment tasks you want Travis CI to perform. Please consider a dedicated account in Hashicorp Vault with access to a limited set of  CI/CD related secrets.</li>
    </ul>
  </li>
  <li>Encrypt token with Travis CI for further usage
    <ul>
      <li>Please use travis-cli to <a href="/user/encryption-keys/">encrypt the secret</a> and use the encrypted string in your <code class="highlighter-rouge">.travis.yml</code> file; in the initial release, we have consciously limited this to be the only way to provide an access token to your KMS</li>
    </ul>
  </li>
</ul>

<h2 id="how-does-the-integration-work">How does the integration work? <a href="#how-does-the-integration-work" class="toc-anchor">#</a></h2>

<p>The integration is based on communication with Hashicorp Vault API. The only secret stored in Travis CI will be the access token (in encrypted form).</p>

<blockquote>
  <p>If you are using a dedicated Hashicorp Vault account and a secret is to be shared among multiple repositories, we suggest considering managing the Hashicorp Vault access token by storing it in one repository in your organization and <a href="/user/build-config-imports/">import it to other repositories build configurations</a>. Thus you may manage the Hashicorp Vault access token centrally. However, please mind that imported shared configurations will be available for all jobs in the build matrix.</p>
</blockquote>

<p>First, define a simple set of items in the <code class="highlighter-rouge">.travis.yml</code> for your repository. Then, once Travis CI processes the build request, the following steps occur:</p>
<ul>
  <li>First, the access token is decrypted for the duration of the build.</li>
  <li>At the start of a specific build job, secrets defined in the <code class="highlighter-rouge">.travis.yml</code> are downloaded into the specific build job and are censored for the build job log (in order to not expose these accidentally).
    <ul>
      <li>Secrets will be present for the duration of the specific build job, limiting the time these can be used. Therefore, please consider obtaining secrets from Hashicorp Vault and processing them in as few build jobs in the <a href="/user/build-matrix/#explicitly-including-jobs">job matrix</a> as possible,  on an as-needed basis.</li>
      <li>Secrets are obtained from the ‘secrets’ node in the Hashicorp Vault.</li>
      <li>Only defined secrets are obtained; if no secret paths are defined, nothing is acquired from the Vault instance.</li>
    </ul>
  </li>
  <li>Hashicorp Vault secrets in the KV engine do come as key-value pairs. The secret key is turned into an environmental variable name within the Travis CI build job; the secret value is the value of the environment variable.
    <ul>
      <li>Please note: if duplicate keys are present in the Hashicorp Vault and are obtained via definition in the <code class="highlighter-rouge">.travis.yml</code>, the last obtained value will overwrite the previous ones; the sequence of appearance in <code class="highlighter-rouge">.travis.yml</code> is processed from top to bottom.</li>
      <li>The environment variable consists of the last reference in the path, plus a secret key, e.g., if in the Hashicorp Vault a  /ns1/project_id/secret_key_a secret secret with key ‘message’ is present, the environmental variable name created within Travis CI build job will be:  SECRET_KEY_A_MESSAGE</li>
    </ul>
  </li>
  <li>Once the secrets are obtained, you may use them within your build job; the value of the secrets will be censored in the Travis CI build job log.</li>
</ul>

<h2 id="usage">Usage <a href="#usage" class="toc-anchor">#</a></h2>

<p>Travis Ci introduces a new <code class="highlighter-rouge">vault</code> node to <code class="highlighter-rouge">.travis.yml</code>. It can be used at the root level of the file or as a part of the job matrix.</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># use vault node to configure connection and secrets obtained from the Hashicorp Vault</span>
<span class="na">vault</span><span class="pi">:</span>
  <span class="na">api_url</span><span class="pi">:</span> <span class="s">https://[your hashicorp vault endpoint here]</span>
  <span class="na">token</span><span class="pi">:</span>
    <span class="na">secure</span><span class="pi">:</span> <span class="s2">"</span><span class="s">..."</span> <span class="c1"># encrypted token value, alphanumeric string</span>
  <span class="na">secrets</span><span class="pi">:</span>         <span class="c1"># configure which secrets to obtain</span>
<span class="c1"># either define it via calling out the Hashicorp Vault namespace and providing relative paths to the secrets/namespace</span>
    <span class="na">namespace</span><span class="pi">:</span> <span class="s">ns1</span>
      <span class="s">- project_id/secret_key_a</span>
      <span class="s">- project_id/another_key</span>
<span class="c1"># or define it by providing a list of paths relative to the ‘secrets’ node in the Hashicorp Vault</span>
    <span class="pi">-</span> <span class="s">ns1/project_id/secret_key_a</span>
    <span class="pi">-</span> <span class="s">ns1/project_id/another_key</span>
<span class="c1"># Remember always to obtain only secrets necessary for the specific build job!</span>
</code></pre></div></div>

<p>See usage examples  below:</p>

<h4 id="single-travisyml-file">Single <code class="highlighter-rouge">.travis.yml</code> file <a href="#single-travisyml-file" class="toc-anchor">#</a></h4>

<p><strong>As a data accessible for all jobs in the build definition:</strong></p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">os</span><span class="pi">:</span> <span class="s">linux</span>
<span class="na">dist</span><span class="pi">:</span> <span class="s">focal</span>

<span class="c1"># vault data at the root level of `.travis.yml` makes it available for all jobs in the build</span>
<span class="na">vault</span><span class="pi">:</span>
  <span class="na">token</span><span class="pi">:</span> 
    <span class="na">secure</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Your</span><span class="nv"> </span><span class="s">encrypted</span><span class="nv"> </span><span class="s">token</span><span class="nv"> </span><span class="s">goes</span><span class="nv"> </span><span class="s">here."</span>
  <span class="na">api_url</span><span class="pi">:</span> <span class="s">https://your-vault-api.endpoint</span>
  <span class="na">secrets</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="s">ns1/project_id/secret_key_a</span> 

<span class="na">script</span><span class="pi">:</span>
<span class="c1">#assuming that under /ns1/project_id/secret_key_a a secret with key ‘message’ is present</span>
  <span class="pi">-</span> <span class="s">echo $SECRET_KEY_A_MESSAGE</span> 
</code></pre></div></div>

<p><strong>As a datat accessible only within one of many jobs:</strong></p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">os</span><span class="pi">:</span> <span class="s">linux</span>
<span class="na">dist</span><span class="pi">:</span> <span class="s">focal</span>

<span class="na">jobs</span><span class="pi">:</span>
  <span class="na">include</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">“Vault job”</span> <span class="c1"># make vault secrets and connections only in this job</span>
      <span class="na">vault</span><span class="pi">:</span>
        <span class="na">token</span><span class="pi">:</span> 
          <span class="na">secure</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Your</span><span class="nv"> </span><span class="s">encrypted</span><span class="nv"> </span><span class="s">token</span><span class="nv"> </span><span class="s">goes</span><span class="nv"> </span><span class="s">here.”</span>
        <span class="s">api_url:</span><span class="nv"> </span><span class="s">https://your-vault-api.endpoint</span>
        <span class="s">secrets:</span>
          <span class="s">-</span><span class="nv"> </span><span class="s">ns1/project_id/secret_key_a</span>
      <span class="s">script:</span>
        <span class="s">-</span><span class="nv"> </span><span class="s">echo</span><span class="nv"> </span><span class="s">$SECRET_KEY_A_KEYNAME</span>
    <span class="s">-</span><span class="nv"> </span><span class="s">name:</span><span class="nv"> </span><span class="s">"Another job"</span> <span class="c1"># this env variable contains nothing</span>
      <span class="na">script</span><span class="pi">:</span> 
        <span class="pi">-</span> <span class="s">echo $SECRET_KEY_A_KEYNAME</span>

</code></pre></div></div>

<h4 id="imported-shared-build-configuration">Imported shared build configuration <a href="#imported-shared-build-configuration" class="toc-anchor">#</a></h4>

<div data-file=".vault-secret.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">vault</span><span class="pi">:</span>
  <span class="na">token</span><span class="pi">:</span> 
    <span class="na">secure</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Your</span><span class="nv"> </span><span class="s">encrypted</span><span class="nv"> </span><span class="s">token</span><span class="nv"> </span><span class="s">goes</span><span class="nv"> </span><span class="s">here."</span>
  <span class="na">api_url</span><span class="pi">:</span> <span class="s">https://your-vault-api.endpoint</span>
</code></pre></div></div>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">import</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">source</span><span class="pi">:</span> <span class="s">vault-secrets.yml</span>  
    <span class="na">mode</span><span class="pi">:</span> <span class="s">deep_merge_prepend</span> <span class="c1">#deep_merge for overwriting the values in vault-secrets.yml </span>

<span class="na">os</span><span class="pi">:</span> <span class="s">linux</span>
<span class="na">dist</span><span class="pi">:</span> <span class="s">focal</span>

<span class="na">jobs</span><span class="pi">:</span>
  <span class="na">Include</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Vault</span><span class="nv"> </span><span class="s">job</span><span class="nv"> </span><span class="s">utilizing</span><span class="nv"> </span><span class="s">imported</span><span class="nv"> </span><span class="s">values</span><span class="nv"> </span><span class="s">job"</span> <span class="c1"># vault connection details come from imported vault-secrets.yml</span>
        <span class="na">secrets</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="s">ns1/project_id/secret_key_a</span>
      <span class="na">script</span><span class="pi">:</span> 
        <span class="pi">-</span> <span class="s">echo $SECRET_KEY_A_MESSAGE</span>
    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">“Vault job overwriting imported values.”</span>
      <span class="na">vault</span><span class="pi">:</span>
        <span class="na">token</span><span class="pi">:</span>   
          <span class="na">secure</span><span class="pi">:</span> <span class="s2">"</span><span class="s">another</span><span class="nv"> </span><span class="s">encrypted</span><span class="nv"> </span><span class="s">token</span><span class="nv"> </span><span class="s">goes</span><span class="nv"> </span><span class="s">here.”</span>
        <span class="s">api_url:</span><span class="nv"> </span><span class="s">https://different-vault-api.endpoint</span>
        <span class="s">secrets:</span>
          <span class="s">-</span><span class="nv"> </span><span class="s">ns1/project_id/secret_key_b</span>
      <span class="s">script:</span>
        <span class="s">-</span><span class="nv"> </span><span class="s">echo</span><span class="nv"> </span><span class="s">$SECRET_KEY_B_SOMEKEY</span>
</code></pre></div></div>

<p>Please note: imported content is available for your whole build (<code class="highlighter-rouge">.travis.yml</code>) unless it’s overridden explicitly by some of the jobs in your <code class="highlighter-rouge">travis.yml</code>. The YAML anchors cannot be imported and used in the main <code class="highlighter-rouge">.travis.yml</code> - read more about it on the <a href="/user/build-config-imports/">Importing Shared Build Configuration</a> page.</p>

<h2 id="faq">FAQ <a href="#faq" class="toc-anchor">#</a></h2>

<h3 id="can-i-define-the-hashicorp-vault-token-in-the-ui-as-an-environment-variable">Can I define the Hashicorp Vault token in the UI as an environment variable? <a href="#can-i-define-the-hashicorp-vault-token-in-the-ui-as-an-environment-variable" class="toc-anchor">#</a></h3>

<p>Not at the moment. For now, as a mandatory practice, we keep a restrictive rule of a token to your Hashicorp Vault forcibly provided as a Travis CI <code class="highlighter-rouge">secret</code>. However, we would like to minimize the risk of accidentally leaking your secrets while enforcing the practice of securing particularly vulnerable data such as access tokens to your Key Management System. Thus, if you define the environment variable in the UI, the build job will not connect to the Vault if it doesn’t see a <code class="highlighter-rouge">vault.token.secure</code>. And it will, by default, prevent printing out its decrypted content in the build job log regardless of the option in the UI (Repository Settings).</p>

<p>Since there are always ways to work around security measures, we want to hear from you and see if the constraint of being able to add a Vault token only under <code class="highlighter-rouge">vault.token.secure</code> should be relaxed in the future.</p>

<h3 id="can-i-share-the-hashicorp-vault-token-as-an-encrypted-environment-variable-with-a-forked-repository">Can I share the Hashicorp Vault token as an encrypted environment variable with a forked repository? <a href="#can-i-share-the-hashicorp-vault-token-as-an-encrypted-environment-variable-with-a-forked-repository" class="toc-anchor">#</a></h3>

<p>Not at the moment. In the future, we plan to allow it to be shared with a forked repository (for a collaboration model when Pull Requests are filed from forked repositories to the base repository). However, we intend to watch for your feedback on the matter first for some time.</p>

<h3 id="is-the-kv2-api-only-hashicorp-vault-secret-key-value-api-version-supported">Is the KV2 API only Hashicorp Vault secret key-value API version supported? <a href="#is-the-kv2-api-only-hashicorp-vault-secret-key-value-api-version-supported" class="toc-anchor">#</a></h3>

<p>There’s built-in support for KV API in order to be able to support older installations. However, it has not been extensively tested. Use at your discretion and risk:</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">vault</span><span class="pi">:</span>
  <span class="na">api_url</span><span class="pi">:</span> <span class="s">url</span>
  <span class="na">token</span><span class="pi">:</span>
    <span class="na">secure</span><span class="pi">:</span> <span class="s">secure_token</span>
  <span class="na">secrets</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">kv_api_ver</span><span class="pi">:</span> <span class="s">kv1</span> <span class="c1">#optional, kv1 or kv2, default is kv2, single value</span>
    <span class="pi">-</span> <span class="s">project_id2/secret_key</span>
</code></pre></div></div>


        </main>
      </div><!-- /#content -->

      <footer class="footer">
  <div class="layout-inner">
    <div class="footer-elem">
      <svg width="142px" height="45.381px" viewBox="0 0 142 45.381" enable-background="new 0 0 142 45.381" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink= "http://www.w3.org/1999/xlink">
        <title>Travis CI Mascot</title>
        <image xlink:href="https://styleguide.travis-ci.com/images/logos/travis-footer-logo-new.svg" x="0" y="0" width="142px" height="45.381px" />
      </svg>
    </div>

    <div class="footer-elem"></div>

    <div class="footer-elem">
      <h3 class="footer-title">©Travis CI, GmbH</h3>
      <address>Rigaer Straße 8<br>10247 Berlin, Germany</address>
      <ul>
        <li><a href="https://travisci.workable.com/" title="Jobs at Travis CI">Work with Travis CI</a></li>
      </ul>
    </div>

    <div class="footer-elem">
      <h3 class="footer-title">Help</h3>
      <ul>
        <li><a href="https://docs.travis-ci.com" title="Travis CI Docs">Documentation</a></li>
        <li><a href="https://changelog.travis-ci.com/">Changelog</a></li>
        <li><a href="https://blog.travis-ci.com/" title="Travis CI Blog">Blog</a></li>
        <li><a href="mailto:support@travis-ci.com" title="Email Travis CI support">Email</a></li>
        <li><a href="https://twitter.com/travisci" title="Travis CI on Twitter">Twitter</a></li>
      </ul>
    </div>

    <div class="footer-elem">
      <h3 class="footer-title">Company</h3>
      <ul>
        <li><a href="/imprint.html" title="Imprint">Imprint</a></li>
        <li><a href="https://ideracorp.com/legal/TravisCI">Legal</a></li>
      </ul>
    </div>

    <div class="footer-elem">
      <h3 class="footer-title">Travis CI Status</h3>
      <ul>
        <li><div class="status-circle none">Status:</div>
          <a href="http://www.traviscistatus.com/">Travis CI Status</a>
        </li>
      </ul>
    </div>
  </div>
</footer>

<script>
 fetch('https://pnpcptp8xh9k.statuspage.io/api/v2/status.json').then(function(response) {
   return response.json();
 }).then(function(data) {
   if (data.status && data.status.indicator) {
     document.querySelector('.status-circle').classList.add(data.status.indicator);
   }
 });
</script>

    </div><!-- /.wrapper -->
  </body>
</html>
 contentType 9 text/html url 63 https://docs.travis-ci.com:443/user/hashicorp-vault-integration responseCode 3 200 