psiqfqpglatkdstidarmmiyijszankqockookewa length 5 28857 page 28857  <!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>LUC Cryptography - Crypto++ Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"ZjbxcjPkjIS39pbOFltGowAAAAA","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"LUC_Cryptography","wgTitle":"LUC Cryptography","wgCurRevisionId":28155,"wgRevisionId":28155,"wgArticleId":3657,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Sample","Download","Public Key","Signature"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"LUC_Cryptography","wgRelevantArticleId":3657,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],
"wgMFDisplayWikibaseDescriptions":{"search":false,"nearby":false,"watchlist":false,"tagline":false},"wgVector2022PreviewPages":[],"wgSmjUseCdn":true,"wgSmjUseChem":true,"wgSmjDisplayMath":[],"wgSmjExtraInlineMath":[],"wgSmjScale":1,"wgSmjEnableMenu":true,"wgSmjDisplayAlign":"left","wgRPFooterRatingStars":true,"wgRPRatingAllowedNamespaces":null,"wgRPRatingPageBlacklist":["Main_Page"],"wgRPRatingMin":1,"wgRPRatingMax":5,"wgRPTarget":null};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","skins.vector.styles.legacy":"ready"};RLPAGEMODULES=["ext.SimpleMathJax","site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","ext.ratePage"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="/w/load.php?lang=en&amp;modules=skins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="/w/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="generator" content="MediaWiki 1.39.4"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=1000"/>
<link rel="icon" href="/favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Crypto++ Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="//www.cryptopp.com/w/api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="Crypto++ Wiki Atom feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-LUC_Cryptography rootpage-LUC_Cryptography skin-vector action-view skin-vector-legacy vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-disabled vector-feature-sticky-header-disabled vector-feature-sticky-header-edit-disabled vector-feature-table-of-contents-disabled vector-feature-visual-enhancement-next-disabled"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"></div>
	<div class="mw-indicators">
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading"><span class="mw-page-title-main">LUC Cryptography</span></h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">From Crypto++ Wiki</div>
		<div id="contentSub"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="#searchInput">Jump to search</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><table class="wikitable" style="float: right; text-align: center;">
<caption>LUC Cryptography
</caption>
<tbody><tr>
<td><a class="external text" href="http://www.cryptopp.com/docs/ref/luc_8h_source.html">Documentation</a>
</td></tr>
<tr>
<td><code>#include &lt;cryptopp/luc.h&gt;</code>
</td></tr></tbody></table>
<p><a class="mw-selflink selflink">LUC Cryptography</a> is a public-key cryptosystem designed by P.J. Smith and based on Lucas sequences. It can be used for encryption and signatures.
</p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Background"><span class="tocnumber">1</span> <span class="toctext">Background</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="#Keys"><span class="tocnumber">1.1</span> <span class="toctext">Keys</span></a></li>
<li class="toclevel-2 tocsection-3"><a href="#Encryption_Schemes"><span class="tocnumber">1.2</span> <span class="toctext">Encryption Schemes</span></a></li>
<li class="toclevel-2 tocsection-4"><a href="#Signature_Schemes"><span class="tocnumber">1.3</span> <span class="toctext">Signature Schemes</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-5"><a href="#Sample_Programs"><span class="tocnumber">2</span> <span class="toctext">Sample Programs</span></a>
<ul>
<li class="toclevel-2 tocsection-6"><a href="#Key_Generation"><span class="tocnumber">2.1</span> <span class="toctext">Key Generation</span></a></li>
<li class="toclevel-2 tocsection-7"><a href="#Encryption_Scheme_(OAEP_using_SHA)"><span class="tocnumber">2.2</span> <span class="toctext">Encryption Scheme (OAEP using SHA)</span></a></li>
<li class="toclevel-2 tocsection-8"><a href="#Signature_Scheme_(PKCS_v1.5)"><span class="tocnumber">2.3</span> <span class="toctext">Signature Scheme (PKCS v1.5)</span></a></li>
</ul>
</li>
</ul>
</div>

<h2><span class="mw-headline" id="Background">Background</span></h2>
<p>Crypto++ exposes most LUC encrpytion and signatures operations through <code>luc.h</code>.  There's a <code>LUCES</code> (encryption scheme), <code>LUCSS</code> (signature scheme) and <code>LUC_IES</code> (integrated encryption system, with key agreement and mask function).
</p>
<h3><span class="mw-headline" id="Keys">Keys</span></h3>
<p>Operations on keys, such as generating, validating, loading, saving, importing, exporting, and formats are discussed in detail at <a href="/wiki/Keys_and_Formats" title="Keys and Formats">Keys and Formats</a>.
</p><p>Crypto++ LUC keys are typedef'd in <code>luc.h</code> as follows.
</p>
<pre>struct LUC
{
    static std::string StaticAlgorithmName() {return "LUC";}
    typedef LUCFunction PublicKey;
    typedef InvertibleLUCFunction PrivateKey;
}</pre>
<p>To generate a key pair, <code>InvertibleLUCFunction</code> offers <code>GenerateRandomWithKeySize</code>:
</p>
<pre>GenerateRandomWithKeySize (RandomNumberGenerator &amp;rng, unsigned int keySize)</pre>
<p>The parameters to the function are a <code><a href="/wiki/RandomNumberGenerator" title="RandomNumberGenerator">RandomNumberGenerator</a></code> and the modulus size specified in bits. <code>GenerateRandomWithKeySize</code> calls <code>GenerateRandom</code> with the modulus size encoded as a <code>NameValuePairs</code>.
</p><p>In much of the sample code, <code>InvertibleLUCFunction</code> is used as follows to create a logical separation for demonstration purposes.
</p>
<pre>///////////////////////////////////////
// Generate Parameters
InvertibleLUCFunction params;
params.GenerateRandomWithKeySize(rng, 3072);

///////////////////////////////////////
// Create Keys
LUC::PrivateKey privateKey(params);
LUC::PublicKey publicKey(params);</pre>
<p>In practice, <code>LUC::PrivateKey</code> could be used instead of <code>InvertibleLUCFunction</code> (to improve readability); and <code>LUCES_PKCS1v15_Encryptor</code>, <code>LUCES_OAEP_SHA_Encryptor</code>, and friends should be used. A more detailed treatment of keys, generation, loading, saving, and formats can be found at <a href="/wiki/Keys_and_Formats" title="Keys and Formats">Keys and Formats</a>.
</p>
<pre>///////////////////////////////////////
// Create Keys
LUC::PrivateKey privateKey;
privateKey.GenerateRandomWithKeySize(rng, 3072);

LUC::PublicKey publicKey(privateKey);</pre>
<p>Once the keys are created, they can be passed to Encryptors, Decryptors, Signers, and Verifiers.
</p><p>To persist the keys to disk in the most inter-operable manner, use the <code>Save</code> function. If loading from disk, use the <code>Load</code> function. A more complete treatment of saving and loading keys is covered in <a href="/wiki/Keys_and_Formats" title="Keys and Formats">Keys and Formats</a>.
</p><p>If you need to import the {n,e,d} private key or {n,e} public key into Crypto++, use <code>Initialize</code>. Both <code>LUC::PublicKey</code> and <code>LUC::PrivateKey</code> provide the function overloads.
</p>
<h3><span class="mw-headline" id="Encryption_Schemes">Encryption Schemes</span></h3>
<p>The high level LUC Encryption Scheme are exposed through <code>LUCES</code>, which is defined as follows. The template parameter, <code>STANDARD</code>, simply specifies additional algorithms. For example, when <a href="/wiki/Standards" title="Standards">PKCS</a> processing is required, <code>PKCS1v15</code> is specified as the parameter.
</p>
<pre>template &lt;class STANDARD&gt;
struct LUCES&#160;: public TF_ES&lt;STANDARD, LUC&gt;
{ };</pre>
<p>The <code>TF_ES</code> class exposes the functionality that is often used when working with LUC encryption. <b>TF</b> stands for trapdoor function, and <b>ES</b> stands for encryption scheme. There is some hand waiving here - at least two layers of templates exist before encountering <code>TF_EncryptorBase</code> and <code>TF_DecryptorBase</code> in <code>cryptlib.h</code>. To ease use of the library, a typedef are offered.
</p>
<pre>typedef LUCES&lt;OAEP&lt;SHA&gt; &gt;::Decryptor LUCES_OAEP_SHA_Decryptor;
typedef LUCES&lt;OAEP&lt;SHA&gt; &gt;::Encryptor LUCES_OAEP_SHA_Encryptor;</pre>
<h3><span class="mw-headline" id="Signature_Schemes">Signature Schemes</span></h3>
<p>The high level LUC Signature Schemes are exposed through <code>LUCSS</code>, which is defined as follows.
</p>
<pre>template &lt;class STANDARD, class H&gt;
struct LUCSS&#160;: public TF_SS&lt;STANDARD, H, LUC&gt;
{ };</pre>
<p>As with <code>LUCES</code>, <code>LUCSS</code> needs a <code>STANDARD</code>. <b>TF</b> stands for trapdoor function, and <b>SS</b> stands for signature scheme. In addition to the <code>STANDARD</code> parameter, a one way hash function must be specified through <code>H</code>. The classes of interest for signers and verifiers are <code><a href="/wiki/PK_Signer" title="PK Signer">PK_Signer</a></code> and <code><a href="/wiki/PK_Verifier" title="PK Verifier">PK_Verifier</a></code> from <code>cryptlib.h</code>. The later classes offer familiar functions such as <code>MaxSignatureLength</code>, <code>SignMessage</code>, and <code>VerifyMessage</code>.
</p><p>The Crypto++ LUC implementation of a <a href="/wiki/Digital_Signature" title="Digital Signature">Signature Scheme with Appendix</a> (SSA) is typedef'd as follows.
</p>
<pre>typedef LUCSS&lt;PKCS1v15, SHA&gt;::Signer LUCSSA_PKCS1v15_SHA_Signer;
typedef LUCSS&lt;PKCS1v15, SHA&gt;::Verifier LUCSSA_PKCS1v15_SHA_Verifier;</pre>
<p>The Crypto++ LUC implementation of a <a href="/wiki/Digital_Signature" title="Digital Signature">Signature Scheme with Recovery</a> (PSSR) is similar to SSA. However, there are no typedef's so the objects are declared using template syntax. Below, <code>PSSR</code> (from <code>pssr.h</code>) is specified (the recovery mechanism), and a hash is specified.
</p>
<pre>LUCSS&lt;PSS, SHA1&gt;::Signer signer;
LUCSS&lt;PSS, SHA1&gt;::Verifier verifier;</pre>
<p>If Whirlpool were desired, the following would be performed.
</p>
<pre>LUCSS&lt;PSS, Whirlpool&gt;::Signer signer;
LUCSS&lt;PSS, Whirlpool&gt;::Verifier verifier;</pre>
<p>If you want to use a larger hash (like SHA-256) then the declaration would be:
</p>
<pre>LUCSS&lt;PSS, SHA256&gt;::Signer signer;
LUCSS&lt;PSS, SHA256&gt;::Verifier verifier;</pre>
<p>Regardless of the type of signature (PSSR vs SSA), the signers and verifiers are most easily constructed using the private key or the public key.
</p>
<pre>// Generate or Load keys
LUC::PrivateKey privateKey;
LUC::PublicKey publicKey;
...

LUCSS&lt;PSS, SHA1&gt;::Signer signer(privateKey);
// Create signature
...

LUCSS&lt;PSS, SHA1&gt;::Verifier verifier(publicKey);
// Verify signature on message
...</pre>
<h2><span class="mw-headline" id="Sample_Programs">Sample Programs</span></h2>
<p>Below offers sample code to exercise some of the operations on LUC.
</p>
<h3><span class="mw-headline" id="Key_Generation">Key Generation</span></h3>
<pre>///////////////////////////////////////
// Pseudo Random Number Generator
AutoSeededRandomPool rng;

///////////////////////////////////////
// Generate Parameters
InvertibleLUCFunction params;
params.GenerateRandomWithKeySize(rng, 3072);

///////////////////////////////////////
// Generated Parameters
const Integer&amp; n = params.GetModulus();
const Integer&amp; p = params.GetPrime1();
const Integer&amp; q = params.GetPrime2();
const Integer&amp; e = params.GetPublicExponent();
const Integer&amp; u = params.GetMultiplicativeInverseOfPrime2ModPrime1();

///////////////////////////////////////
// Dump
cout &lt;&lt; "LUC Parameters:" &lt;&lt; endl;
cout &lt;&lt; " n: " &lt;&lt; n &lt;&lt; endl;
cout &lt;&lt; " p: " &lt;&lt; p &lt;&lt; endl;
cout &lt;&lt; " q: " &lt;&lt; q &lt;&lt; endl;
cout &lt;&lt; " e: " &lt;&lt; e &lt;&lt; endl;
cout &lt;&lt; " u: " &lt;&lt; u &lt;&lt; endl;
cout &lt;&lt; endl;

///////////////////////////////////////
// Create Keys
LUC::PrivateKey privateKey(params);
LUC::PublicKey publicKey(params);

///////////////////////////////////////
// Save Keys
FileSink fs1("lucs-private.der", true);
privateKey.DEREncode(fs1);
        
FileSink fs2("lucs-public.der", true);
publicKey.DEREncode(fs2);</pre>
<p>And:
</p>
<pre>///////////////////////////////////////
// Pseudo Random Number Generator
AutoSeededRandomPool rng;

///////////////////////////////////////
// Generate Parameters
InvertibleLUCFunction params;
params.GenerateRandomWithKeySize(rng, 3072);

///////////////////////////////////////
// Create Signer and Verifier
LUCSS&lt;PSS, SHA256&gt;::Signer signer(params);
LUCSS&lt;PSS, SHA256&gt;::Verifier verifier(params);

///////////////////////////////////////
// Save Keys
FileSink fs1("lucs-private.der", true);
signer.AccessKey().DEREncode(fs1);
        
FileSink fs2("lucs-public.der", true);
verifier.AccessKey().DEREncode(fs2);</pre>
<h3><span id="Encryption_Scheme_.28OAEP_using_SHA.29"></span><span class="mw-headline" id="Encryption_Scheme_(OAEP_using_SHA)">Encryption Scheme (OAEP using SHA)</span></h3>
<p>The following code demonstrates LUC encryption using OAEP.
</p>
<pre>////////////////////////////////////////////////
// Generate keys
AutoSeededRandomPool rng;

InvertibleLUCFunction params;
params.GenerateRandomWithKeySize(rng, 3072);

LUC::PrivateKey privateKey(params);
LUC::PublicKey publicKey(params);

string plain="LUC Encryption", cipher, recovered;

////////////////////////////////////////////////
// Encryption
LUCES_OAEP_SHA_Encryptor e(publicKey);

StringSource ss1(plain, true,
    new PK_EncryptorFilter(rng, e,
        new StringSink(cipher)
   ) // PK_EncryptorFilter
); // StringSource

////////////////////////////////////////////////
// Decryption
LUCES_OAEP_SHA_Decryptor d(privateKey);

StringSource ss2(cipher, true,
    new PK_DecryptorFilter(rng, d,
        new StringSink(recovered)
   ) // PK_DecryptorFilter
); // StringSource

cout &lt;&lt; "Recovered plain text" &lt;&lt; endl;</pre>
<h3><span id="Signature_Scheme_.28PKCS_v1.5.29"></span><span class="mw-headline" id="Signature_Scheme_(PKCS_v1.5)">Signature Scheme (PKCS v1.5)</span></h3>
<p>Though similar to LUC-SSA, <code>LUCSSA_PKCS1v15_SHA_Signer</code> and <code>LUCSSA_PKCS1v15_SHA_Verifier</code> use PKCS v1.5 padding.
</p>
<pre>// Generate or Load keys
LUC::PrivateKey privateKey = ...;
LUC::PublicKey publicKey = ...;

// Message
string message = "LUC Signature", signature;

////////////////////////////////////////////////
// Sign and Encode
LUCSSA_PKCS1v15_SHA_Signer signer(privateKey);

StringSource ss1(message, true, 
    new SignerFilter(rng, signer,
        new StringSink(signature)
   ) // SignerFilter
); // StringSource

////////////////////////////////////////////////
// Verify and Recover
LUCSSA_PKCS1v15_SHA_Verifier verifier(publicKey);

StringSource ss2(message+signature, true,
    new SignatureVerificationFilter(
        verifier, NULL,
        SignatureVerificationFilter::THROW_EXCEPTION
   ) // SignatureVerificationFilter
); // StringSource

cout &lt;&lt; "Verified signature on message" &lt;&lt; endl;</pre>
<!-- 
NewPP limit report
Cached time: 20240505010501
Cache expiry: 86400
Reduced expiry: false
Complications: [show‐toc]
CPU time usage: 0.010 seconds
Real time usage: 0.011 seconds
Preprocessor visited node count: 124/1000000
Post‐expand include size: 198/2097152 bytes
Template argument size: 72/2097152 bytes
Highest expansion depth: 3/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 5298/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    1.595      1 Template:Class
100.00%    1.595      1 -total
-->

<!-- Saved in parser cache with key my_wiki-wikicryptopp_:pcache:idhash:3657-0!canonical!groups=* and timestamp 20240505010501 and revision id 28155.
 -->
</div>
<div class="printfooter" data-nosnippet="">Retrieved from "<a dir="ltr" href="https://www.cryptopp.com/w/index.php?title=LUC_Cryptography&amp;oldid=28155">https://www.cryptopp.com/w/index.php?title=LUC_Cryptography&amp;oldid=28155</a>"</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="/wiki/Category:Sample" title="Category:Sample">Sample</a></li><li><a href="/wiki/Category:Download" title="Category:Download">Download</a></li><li><a href="/wiki/Category:Public_Key" title="Category:Public Key">Public Key</a></li><li><a href="/wiki/Category:Signature" title="Category:Signature">Signature</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="vector-menu mw-portlet mw-portlet-personal vector-user-menu-legacy" aria-labelledby="p-personal-label" role="navigation"  >
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Personal tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-login" class="mw-list-item"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=LUC+Cryptography" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o"><span>Log in</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="vector-menu mw-portlet mw-portlet-namespaces vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"  >
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Namespaces</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="/wiki/LUC_Cryptography" title="View the content page [c]" accesskey="c"><span>Page</span></a></li><li id="ca-talk" class="new mw-list-item"><a href="/w/index.php?title=Talk:LUC_Cryptography&amp;action=edit&amp;redlink=1" rel="discussion" title="Discussion about the content page (page does not exist) [t]" accesskey="t"><span>Discussion</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="vector-menu mw-portlet mw-portlet-variants emptyPortlet vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"  >
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="Change language variant"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">English</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="vector-menu mw-portlet mw-portlet-views vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"  >
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Views</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="/wiki/LUC_Cryptography"><span>Read</span></a></li><li id="ca-viewsource" class="mw-list-item"><a href="/w/index.php?title=LUC_Cryptography&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e"><span>View source</span></a></li><li id="ca-history" class="mw-list-item"><a href="/w/index.php?title=LUC_Cryptography&amp;action=history" title="Past revisions of this page [h]" accesskey="h"><span>View history</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="vector-menu mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="More options" >
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">More</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3 >
				<label for="searchInput">Search</label>
			</h3>
		<form action="/w/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="Search Crypto++ Wiki" aria-label="Search Crypto++ Wiki" autocapitalize="sentences" title="Search Crypto++ Wiki [f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:Search">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="Search the pages for this text" value="Search">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="Go to a page with this exact name if it exists" value="Go">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="/wiki/Main_Page"
			title="Visit the main page"></a>
	</div>
	

<nav id="p-navigation" class="vector-menu mw-portlet mw-portlet-navigation vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"  >
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Navigation</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage-description" class="mw-list-item"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z"><span>Main page</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="/wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r"><span>Recent changes</span></a></li><li id="n-randompage" class="mw-list-item"><a href="/wiki/Special:Random" title="Load a random page [x]" accesskey="x"><span>Random page</span></a></li><li id="n-help-mediawiki" class="mw-list-item"><a href="https://www.mediawiki.org/wiki/Special:MyLanguage/Help:Contents"><span>Help about MediaWiki</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-ratePage-vote-title" class="vector-menu mw-portlet mw-portlet-ratePage-vote-title emptyPortlet vector-menu-portal portal" aria-labelledby="p-ratePage-vote-title-label" role="navigation"  >
	<h3
		id="p-ratePage-vote-title-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Rate article</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>


<nav id="p-tb" class="vector-menu mw-portlet mw-portlet-tb vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"  >
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">Tools</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="/wiki/Special:WhatLinksHere/LUC_Cryptography" title="A list of all wiki pages that link here [j]" accesskey="j"><span>What links here</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="/wiki/Special:RecentChangesLinked/LUC_Cryptography" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k"><span>Related changes</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="/wiki/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q"><span>Special pages</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p"><span>Printable version</span></a></li><li id="t-permalink" class="mw-list-item"><a href="/w/index.php?title=LUC_Cryptography&amp;oldid=28155" title="Permanent link to this revision of this page"><span>Permanent link</span></a></li><li id="t-info" class="mw-list-item"><a href="/w/index.php?title=LUC_Cryptography&amp;action=info" title="More information about this page"><span>Page information</span></a></li></ul>
		
	</div>
</nav>

	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info">
	<li id="footer-info-lastmod"> This page was last edited on 10 April 2021, at 19:15.</li>
	<li id="footer-info-0">This page has been accessed 6,700 times.</li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="/wiki/Crypto%2B%2B_Wiki:Privacy_policy">Privacy policy</a></li>
	<li id="footer-places-about"><a href="/wiki/Crypto%2B%2B_Wiki:About">About Crypto++ Wiki</a></li>
	<li id="footer-places-disclaimer"><a href="/wiki/Crypto%2B%2B_Wiki:General_disclaimer">Disclaimers</a></li>
	<li id="footer-places-mobileview"><a href="//www.cryptopp.com/w/index.php?title=LUC_Cryptography&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="/w/resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="/w/resources/assets/poweredby_mediawiki_132x47.png 1.5x, /w/resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.010","walltime":"0.011","ppvisitednodes":{"value":124,"limit":1000000},"postexpandincludesize":{"value":198,"limit":2097152},"templateargumentsize":{"value":72,"limit":2097152},"expansiondepth":{"value":3,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":5298,"limit":5000000},"timingprofile":["100.00%    1.595      1 Template:Class","100.00%    1.595      1 -total"]},"cachereport":{"timestamp":"20240505010501","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":100});});</script>
</body>
</html> contentType 9 text/html url 50 https://www.cryptopp.com:443/wiki/LUC_Cryptography responseCode 3 200 