libgzissfkjggkisbsbkoqksrcbokcygtalkdigq length 5 33067 page 33067 <!DOCTYPE HTML>
<html lang="en">
  <head>
<!-- PDTQ-131 -->
<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-N3RT7TD');</script>
<!-- End Google Tag Manager -->
    
    <meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>Speeding up the build - Travis CI</title>
<link rel="stylesheet" href="/assets/stylesheets/main.css">
<link rel="alternate" type="application/rss+xml" title="Travis CI Build Environment Updates" href="https://docs.travis-ci.com/feed.build-env-updates.xml">
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js" defer></script>

<script src="/assets/javascripts/main.js" type="text/javascript" charset="utf-8" defer></script>
<script src="/assets/javascripts/prism.js" type="text/javascript" charset="utf-8" defer></script>
<meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="@travisci" />
<meta name="twitter:creator" content="@travisci" />
<meta property="og:title" content="Travis CI Documentation" />
<meta property="og:type" content="website" />
<meta property="og:url" content=/user/speeding-up-the-build/ />
<meta property="og:description" content="Speeding up the build" />
<meta property="og:image" content="/images/TravisCI-Full-Color.png" }} />
<meta property="og:image:type" content="image/png" />
<meta property="og:image:width" content="642" />
<meta property="og:image:height" content="201" />
<meta property="og:image:alt" content="Travis CI logo" />


 

  </head>
  <body>
<!-- PDTQ-131 -->
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-N3RT7TD"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

    <div class="wrapper">

      <header class="top">
  <div class="row topbar">
    <h1 id="logo" class="logo">
  <a href="https://travis-ci.com/" title="Travis CI">Travis</a>
</h1>

    <nav>
      <ul id="navigation" class="navigation">
        <li><a href="https://blog.travis-ci.com">Blog</a></li>
        <li><a href="/">Docs</a></li>
        <li class="toggle"><button type="button" id="toggle-menu" class="button--teal">Menu</button></li>
      </ul>
    </nav>
  </div>
</header>


      <div id="content" class="row">

        <div id="sidebar" class="sidebar">
  <div>
    <!-- <h2>Search</h2> -->
    <div class="searchbox">
      <form>
        <input type="text" id="st-search-input" class="searchbox-input" placeholder="Search the docs" />
      </form>
      <script type="text/javascript">
      var Swiftype = window.Swiftype || {};
        (function() {
          Swiftype.key = 'tXvDDzd4fNTBnLvxfEyx';

          Swiftype.searchSearchFields = {
            "page": ["title, body, tags"]
          };
          Swiftype.autocompleteSearchFields = {
            "page": ["title, body, tags"]
          };
          /** DO NOT EDIT BELOW THIS LINE **/
          var script = document.createElement('script'); script.type = 'text/javascript'; script.async = true;
          script.src = "//swiftype.com/embed.js";
          var entry = document.getElementsByTagName('script')[0];
          document.getElementsByTagName('script')[0].parentNode.insertBefore(script, entry);
        }());
      </script>
    </div>
  </div>

  <section class="sidebar-navigation">
    <nav>
      <h3>Getting Started</h3>
      <ul>
        <li><a href="/user/for-beginners/">Core Concepts for Beginners</a></li>
        <li><a href="/user/tutorial/">Travis CI Tutorial</a></li>
        <li><a href="/user/customizing-the-build/">Customizing the Build</a></li>
        <li><a href="/user/speeding-up-the-build/">Speeding up the Build</a></li>
        <li><a href="/user/docker/">Using Docker in your Build</a></li>
        <li><a href="/user/gui-and-headless-browsers/">Headless Testing with Browsers</a></li>
        <li><a href="/user/pull-requests/">Building Pull Requests</a></li>
        <li><a href="/user/cron-jobs/">Cron Jobs</a></li>
        <li><a href="/user/common-build-problems/">Common Build Problems</a></li>
        <li><a href="https://github.com/travis-ci/travis#readme">Command Line Client</a></li>
        <li><a href="/user/build-config-imports/">Build Config Imports</a></li>
        <li><a href="/user/build-config-validation/">Build Config Validation</a></li>
      </ul>

      <h3>Jobs, Builds, Matrices and Stages</h3>
      <ul>
        <li><a href="/user/job-lifecycle/">Job Lifecycle</a></li>
        <li><a href="/user/build-matrix/">Build Matrix</a></li>
        <li><a href="/user/build-stages/">Build Stages</a></li>
        <li><a href="/user/conditional-builds-stages-jobs/">Conditional Builds, Stages, and Jobs</a></li>
      </ul>

      <h3>Installing Dependencies</h3>
      <ul>
        <li><a href="/user/installing-dependencies/">Installing Dependencies</a></li>
        <li><a href="/user/private-dependencies/">Private Dependencies GitHub</a></li>
        <li><a href="/user/private-dependencies-bb/">Private Dependencies Bitbucket</a></li>
        <li><a href="/user/database-setup/">Setting up Services and Databases</a></li>
        <li><a href="/user/caching/">Caching Dependencies</a></li>
        <li><a href="/user/using-workspaces/">Caching Dependencies within a Build (Workspaces)</a></li>
        <li><a href="/user/ssh-known-hosts/">Adding to SSH Known Hosts</a></li>
      </ul>

      <h3>Programming Languages</h3>
      <ul>
      
        <li><a href="/user/languages/android/">Android</a></li>
      
        <li><a href="/user/languages/c/">C</a></li>
      
        <li><a href="/user/languages/csharp/">C#</a></li>
      
        <li><a href="/user/languages/cpp/">C++</a></li>
      
        <li><a href="/user/languages/clojure/">Clojure</a></li>
      
        <li><a href="/user/languages/crystal/">Crystal</a></li>
      
        <li><a href="/user/languages/d/">D</a></li>
      
        <li><a href="/user/languages/dart/">Dart</a></li>
      
        <li><a href="/user/languages/elixir/">Elixir</a></li>
      
        <li><a href="/user/languages/elm/">Elm</a></li>
      
        <li><a href="/user/languages/erlang/">Erlang</a></li>
      
        <li><a href="/user/languages/csharp/">F#</a></li>
      
        <li><a href="/user/languages/minimal-and-generic/">Generic</a></li>
      
        <li><a href="/user/languages/go/">Go</a></li>
      
        <li><a href="/user/languages/groovy/">Groovy</a></li>
      
        <li><a href="/user/languages/haskell/">Haskell</a></li>
      
        <li><a href="/user/languages/haxe/">Haxe</a></li>
      
        <li><a href="/user/languages/java/">Java</a></li>
      
        <li><a href="/user/languages/javascript-with-nodejs/">JavaScript <small>(with Node.js)</small></a></li>
      
        <li><a href="/user/languages/julia/">Julia</a></li>
      
        <li><a href="/user/languages/matlab/">MATLAB</a></li>
      
        <li><a href="/user/languages/minimal-and-generic/">Minimal</a></li>
      
        <li><a href="/user/languages/nix/">Nix</a></li>
      
        <li><a href="/user/languages/objective-c/">Objective-C</a></li>
      
        <li><a href="/user/languages/perl/">Perl</a></li>
      
        <li><a href="/user/languages/perl6/">Perl6</a></li>
      
        <li><a href="/user/languages/php/">PHP</a></li>
      
        <li><a href="/user/languages/python/">Python</a></li>
      
        <li><a href="/user/languages/r/">R</a></li>
      
        <li><a href="/user/languages/ruby/">Ruby</a></li>
      
        <li><a href="/user/languages/rust/">Rust</a></li>
      
        <li><a href="/user/languages/scala/">Scala</a></li>
      
        <li><a href="/user/languages/smalltalk/">Smalltalk</a></li>
      
        <li><a href="/user/languages/objective-c/">Swift</a></li>
      
        <li><a href="/user/languages/csharp/">Visual Basic</a></li>
      
        <li><a href="/user/languages/community-supported-languages/">Adding a language</a></li>
      </ul>

      <h3>Deployments and Uploads</h3>
      <ul>
        
          <li class="is-overview"><a href="/user/deployment/">Overview</a></li>
          
        
        
          <li><a href="/user/deployment/anynines/">anynines</a></li>
        
          <li><a href="/user/deployment/atlas/">Atlas</a></li>
        
          <li><a href="/user/deployment/codedeploy/">AWS CodeDeploy</a></li>
        
          <li><a href="/user/deployment/elasticbeanstalk/">AWS Elastic Beanstalk</a></li>
        
          <li><a href="/user/deployment/lambda/">AWS Lambda</a></li>
        
          <li><a href="/user/deployment/opsworks/">AWS OpsWorks</a></li>
        
          <li><a href="/user/deployment/s3/">AWS S3</a></li>
        
          <li><a href="/user/deployment/azure-web-apps/">Azure Web Apps</a></li>
        
          <li><a href="/user/deployment/bintray/">bintray</a></li>
        
          <li><a href="/user/deployment/bitballoon/">BitBalloon</a></li>
        
          <li><a href="/user/deployment/bluemixcloudfoundry/">Bluemix CloudFoundry</a></li>
        
          <li><a href="/user/deployment/boxfuse/">Boxfuse</a></li>
        
          <li><a href="/user/deployment/catalyze/">Catalyze</a></li>
        
          <li><a href="/user/deployment/chefsupermarket/">Chef Supermarket</a></li>
        
          <li><a href="/user/deployment/cloud66/">Cloud 66</a></li>
        
          <li><a href="/user/deployment/cloudfoundry/">CloudFoundry</a></li>
        
          <li><a href="/user/deployment/cargo/">Cargo</a></li>
        
          <li><a href="/user/deployment/engineyard/">Engine Yard</a></li>
        
          <li><a href="/user/deployment/pages/">GitHub Pages</a></li>
        
          <li><a href="/user/deployment/releases/">GitHub Releases</a></li>
        
          <li><a href="/user/deployment/google-app-engine/">Google App Engine</a></li>
        
          <li><a href="/user/deployment/gcs/">Google Cloud Storage</a></li>
        
          <li><a href="/user/deployment/firebase/">Google Firebase</a></li>
        
          <li><a href="/user/deployment/hackage/">Hackage</a></li>
        
          <li><a href="/user/deployment/hephy/">Hephy</a></li>
        
          <li><a href="/user/deployment/heroku/">Heroku</a></li>
        
          <li><a href="/user/deployment/launchpad/">Launchpad</a></li>
        
          <li><a href="/user/deployment/npm/">npm</a></li>
        
          <li><a href="/user/deployment/openshift/">OpenShift</a></li>
        
          <li><a href="/user/deployment/packagecloud/">packagecloud.io</a></li>
        
          <li><a href="/user/deployment/puppetforge/">Puppet Forge</a></li>
        
          <li><a href="/user/deployment/pypi/">PyPI</a></li>
        
          <li><a href="/user/deployment/cloudfiles/">Rackspace Cloud Files</a></li>
        
          <li><a href="/user/deployment/rubygems/">RubyGems</a></li>
        
          <li><a href="/user/deployment/scalingo/">Scalingo</a></li>
        
          <li><a href="/user/deployment/script/">Script</a></li>
        
          <li><a href="/user/deployment/snaps/">Snap Store</a></li>
        
          <li><a href="/user/deployment/surge/">Surge.sh</a></li>
        
          <li><a href="/user/deployment/testfairy/">TestFairy</a></li>
        
          <li><a href="/user/deployment/transifex/">Transifex</a></li>
        
        <li><a href="/user/uploading-artifacts/">Uploading Build Artifacts</a></li>
      </ul>

      <h3>CI Environment Reference</h3>
      <ul>
        <li class="is-overview"><a href="/user/reference/overview/">Overview</a></li>
        <li><a href="/user/reference/linux/">Ubuntu Linux CI Environment References</a></li>
        <li><a href="/user/reference/osx/">macOS CI Environment Reference</a></li>
        <li><a href="/user/reference/windows/">Windows CI Environment Reference</a></li>
        <li><a href="/user/reference/freebsd/">FreeBSD CI Environment Reference</a></li>
        <li><a href="/user/multi-os/">Building on Multiple Operating Systems</a></li>
        <li><a href="/user/multi-cpu-architectures/">Building on Multiple CPU Architectures</a></li>
        <li><a href="/user/environment-variables/">Environment Variables</a></li>
        <li><a href="/user/build-environment-updates/">Build Environment Updates</a></li>
        <li><a href="/user/ip-addresses/">Build Machines IP Addresses</a></li>
      </ul>

      <h3>Security and Secure Software Supply Chain</h3>
      <ul>
        <li><a href="/user/encryption-keys/">Encrypting Sensitive Data</a></li>
        <li><a href="/user/encrypting-files/">Encrypting Files</a></li>
        <li><a href="/user/github-oauth-scopes/">GitHub Permissions used by Travis CI</a></li>
        <li><a href="/user/bb-oauth-scopes/">Bitbucket Permissions used by Travis CI</a></li>
        <li><a href="/user/assembla-oauth-scopes/">Assembla Permissions used by Travis CI</a></li>
        <li><a href="/user/gl-oauth-scopes/">GitLab Permissions used by Travis CI</a></li>
        <li><a href="/user/disable-job-logs/">Disable Job Logs Availability</a></li>
        <li><a href="/user/best-practices-security/">Best Practices in Securing Your Data</a></li>
        <li><a href="/user/securely-signing-software">Securely Signing Software</a></li>
        <li><a href="/user/sbom">Software Bill of Materials</a></li>
      </ul>

      <h3>Integrations and Notifications</h3>
      <ul>
        <li><a href="/user/notifications/">Configuring Notifications</a></li>
        <li><a href="/user/status-images/">Showing Build Status Images</a></li>
        <li><a href="/user/code-climate/">Code Climate</a></li>
        <li><a href="/user/deepsource/">DeepSource</a></li>
        <li><a href="/user/coveralls/">Coveralls</a></li>
        <li><a href="/user/coverity-scan/">Coverity Scan</a></li>
        <li><a href="/user/browserstack/">BrowserStack</a></li>
        <li><a href="/user/sauce-connect/">Sauce Labs</a></li>
        <li><a href="/user/sonarcloud/">SonarCloud</a></li>
        <li><a href="/user/sourceclear/">SourceClear</a></li>
        <li><a href="/user/build-feeds/">Atom Feeds</a></li>
        <li><a href="/user/cc-menu/">CCMenu / CCTray Feeds</a></li>
        <li><a href="/user/integration/platformio/">Embedded Builds with PlatformIO</a></li>
        <li><a href="/user/hashicorp-vault-integration">Hashicorp Vault</a></li>
        <li><a href="/user/apps/">3rd Party Apps, Clients and Tools</a></li>
      </ul>

      <h3>Developer Program</h3>
      <ul>
        <li class="is-overview"><a href="/user/developer/">Overview</a></li>
        <li><a href="https://developer.travis-ci.com/">API V3</a></li>
        <li><a href="/user/triggering-builds/">Triggering Builds with API V3</a></li>
        <li><a href="https://github.com/travis-ci/travis#ruby-library">The Ruby Library</a></li>
      </ul>
      
      <h3>Hosted Billing</h3>
      <ul>
        <li class="is-overview"><a href="/user/billing-overview/">Overview</a></li>
        <li><a href="/user/billing-autorefill/">Auto-refill</a></li>
        <li><a href="/user/billing-faq/">FAQ</a></li>
      </ul>

      <h3>Travis CI Enterprise</h3>
      <ul>
        <li><a href="/user/enterprise/">Enterprise Docs</a></li>
      </ul>

    </nav>
  </section>

  <section class="sidebar-notice">
    <p>This documentation site is Open Source.
      The <a href="https://github.com/travis-ci/docs-travis-ci-com">README in our Git repository</a> explains how to contribute.</p>
    <p>Travis CI relies on Open Source <a href="/user/open_source_license/">licensing information</a>.</p>
  </section>

</div><!-- /#sidebar -->


        <main id="main" class="main" data-swiftype-index='true'>
          
            <aside class="improve-page" data-swiftype-index='false'><a href="https://github.com/travis-ci/docs-travis-ci-com/edit/master/user/speeding-up-the-build.md" target="_blank" title="Edit this page on GitHub" class="button-pen" data-proofer-ignore>Improve this page on GitHub</a></aside>
            <h1 class="title">Speeding up the build</h1>
          

          


          
            <div id="toc" class="toc">
              <ul class="list-language">
  <li><a href="#parallelizing-your-builds-across-virtual-machines">Parallelizing your Builds across Virtual Machines</a></li>
  <li><a href="#parallelizing-your-build-on-one-virtual-machine">Parallelizing your Build on One Virtual Machine</a></li>
  <li><a href="#parallelizing-rspec-cucumber-and-minitest-on-multiple-vms">Parallelizing RSpec, Cucumber and Minitest on Multiple VMs</a></li>
  <li><a href="#caching-the-dependencies">Caching the Dependencies</a></li>
  <li><a href="#environment-specific-ways-to-speed-up-your-build">Environment-Specific Ways to Speed up your Build</a></li>
</ul>

            </div>
          

          <p>Travis CI implements a few optimizations which help to speed up your build,
like in memory filesystem for DB’s files, but there is a range of things
that can be done to improve build times even more.</p>

<h2 id="parallelizing-your-builds-across-virtual-machines">Parallelizing your Builds across Virtual Machines <a href="#parallelizing-your-builds-across-virtual-machines" class="toc-anchor">#</a></h2>

<p>To speed up a test suite, you can break it up into several parts using
Travis CI’s <a href="/user/customizing-the-build/#build-matrix">build
matrix</a>
feature.</p>

<p>Say you want to split up your unit tests and your integration tests into two
different build jobs. They’ll run in parallel and fully utilize the available
build capacity for your account.</p>

<p>Here’s an example on how to utilize this feature in your <code class="highlighter-rouge">.travis.yml</code>:</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">env</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">TEST_SUITE=units</span>
  <span class="pi">-</span> <span class="s">TEST_SUITE=integration</span>
</code></pre></div></div>

<p>Then you change your script command to use the new environment variable to
determine the script to run.</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">script</span><span class="pi">:</span> <span class="s2">"</span><span class="s">bundle</span><span class="nv"> </span><span class="s">exec</span><span class="nv"> </span><span class="s">rake</span><span class="nv"> </span><span class="s">test:$TEST_SUITE"</span>
</code></pre></div></div>

<p>Travis CI will determine the build matrix based on the environment variables and
schedule two builds to run.</p>

<p>The neat part about this setup is that the unit test suite is usually going to
be done before the integration test suite, giving you a faster visual feedback
on the basic test coverage.</p>

<p>Depending on the size and complexity of your test suite, you can split it up even
further. You could separate different concerns for integration tests into
different subfolders and run them in separate stages of a build matrix.</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">env</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">TESTFOLDER=integration/user</span>
  <span class="pi">-</span> <span class="s">TESTFOLDER=integration/shopping_cart</span>
  <span class="pi">-</span> <span class="s">TESTFOLDER=integration/payments</span>
  <span class="pi">-</span> <span class="s">TESTFOLDER=units</span>
</code></pre></div></div>

<p>Then you can adjust your script command to run rspec for every subfolder:</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">script</span><span class="pi">:</span> <span class="s2">"</span><span class="s">bundle</span><span class="nv"> </span><span class="s">exec</span><span class="nv"> </span><span class="s">rspec</span><span class="nv"> </span><span class="s">$TESTFOLDER"</span>
</code></pre></div></div>

<p>For instance, the Rails project uses the build matrix feature to create separate
jobs for every database to test against and also to split up the tests by
concern. One set runs tests only for the railties, another one for actionpack,
actionmailer, activesupport and a whole bunch of sets run the activerecord
tests against multiple databases. See their <a href="https://github.com/rails/rails/blob/master/.travis.yml">.travis.yml
file</a> for more examples.</p>

<h2 id="parallelizing-your-build-on-one-virtual-machine">Parallelizing your Build on One Virtual Machine <a href="#parallelizing-your-build-on-one-virtual-machine" class="toc-anchor">#</a></h2>

<p>Parallelizing the test suite on one virtual machine depends on the language and test runner:</p>

<ul>
  <li>For Ruby and RSpec use the <a href="https://github.com/grosser/parallel_tests">parallel_tests</a> gem.</li>
  <li>For Java, use the built-in feature <a href="http://incodewetrustinc.blogspot.com/2009/07/run-your-junit-tests-in-parallel-with.html">to run tests in parallel
using JUnit</a>.</li>
</ul>

<p>To give you an idea of the speedup we are talking about, I’ve tried to run tests in parallel on <code class="highlighter-rouge">travis-core</code> and I was able to see a drop from about 26 minutes to about 19 minutes across 4 jobs.</p>

<h2 id="parallelizing-rspec-cucumber-and-minitest-on-multiple-vms">Parallelizing RSpec, Cucumber and Minitest on Multiple VMs <a href="#parallelizing-rspec-cucumber-and-minitest-on-multiple-vms" class="toc-anchor">#</a></h2>

<p>If you want to parallel tests for RSpec, Cucumber or Minitest on multiple VMs to get faster feedback from CI, you can try <a href="https://github.com/ArturT/knapsack">knapsack</a> gem. It will split tests across virtual machines and make sure that tests will run a comparable time on each VM (each job will take similar time). You can use our matrix feature to set up knapsack.</p>

<h3 id="rspec-parallelization-example">RSpec Parallelization example <a href="#rspec-parallelization-example" class="toc-anchor">#</a></h3>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">script</span><span class="pi">:</span> <span class="s2">"</span><span class="s">bundle</span><span class="nv"> </span><span class="s">exec</span><span class="nv"> </span><span class="s">rake</span><span class="nv"> </span><span class="s">knapsack:rspec"</span>
<span class="na">env</span><span class="pi">:</span>
  <span class="na">global</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="s">MY_GLOBAL_VAR=123</span>
    <span class="pi">-</span> <span class="s">CI_NODE_TOTAL=2</span>
  <span class="na">jobs</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="s">CI_NODE_INDEX=0</span>
    <span class="pi">-</span> <span class="s">CI_NODE_INDEX=1</span>
</code></pre></div></div>

<p>Such configuration will generate a matrix with the 2 following ENV rows:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>MY_GLOBAL_VAR=123 CI_NODE_TOTAL=2 CI_NODE_INDEX=0
MY_GLOBAL_VAR=123 CI_NODE_TOTAL=2 CI_NODE_INDEX=1
</code></pre></div></div>

<h3 id="cucumber-parallelization-example">Cucumber Parallelization example <a href="#cucumber-parallelization-example" class="toc-anchor">#</a></h3>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">script</span><span class="pi">:</span> <span class="s2">"</span><span class="s">bundle</span><span class="nv"> </span><span class="s">exec</span><span class="nv"> </span><span class="s">rake</span><span class="nv"> </span><span class="s">knapsack:cucumber"</span>
<span class="na">env</span><span class="pi">:</span>
  <span class="na">global</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="s">CI_NODE_TOTAL=2</span>
  <span class="na">jobs</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="s">CI_NODE_INDEX=0</span>
    <span class="pi">-</span> <span class="s">CI_NODE_INDEX=1</span>
</code></pre></div></div>

<h3 id="minitest-parallelization-example">Minitest Parallelization example <a href="#minitest-parallelization-example" class="toc-anchor">#</a></h3>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">script</span><span class="pi">:</span> <span class="s2">"</span><span class="s">bundle</span><span class="nv"> </span><span class="s">exec</span><span class="nv"> </span><span class="s">rake</span><span class="nv"> </span><span class="s">knapsack:minitest"</span>
<span class="na">env</span><span class="pi">:</span>
  <span class="na">global</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="s">CI_NODE_TOTAL=2</span>
  <span class="na">jobs</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="s">CI_NODE_INDEX=0</span>
    <span class="pi">-</span> <span class="s">CI_NODE_INDEX=1</span>
</code></pre></div></div>

<h3 id="rspec-cucumber-and-minitest-parallelization-example">RSpec, Cucumber and Minitest Parallelization example <a href="#rspec-cucumber-and-minitest-parallelization-example" class="toc-anchor">#</a></h3>

<p>If you want to parallelize a test suite for RSpec, Cucumber and Minitest at the same time, define script in <code class="highlighter-rouge">.travis.yml</code> as follows:</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">script</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">bundle</span><span class="nv"> </span><span class="s">exec</span><span class="nv"> </span><span class="s">rake</span><span class="nv"> </span><span class="s">knapsack:rspec"</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">bundle</span><span class="nv"> </span><span class="s">exec</span><span class="nv"> </span><span class="s">rake</span><span class="nv"> </span><span class="s">knapsack:cucumber"</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">bundle</span><span class="nv"> </span><span class="s">exec</span><span class="nv"> </span><span class="s">rake</span><span class="nv"> </span><span class="s">knapsack:minitest"</span>
</code></pre></div></div>

<p>You can find more examples in <a href="https://github.com/ArturT/knapsack#info-for-travis-users">knapsack docs</a>.</p>

<h2 id="caching-the-dependencies">Caching the Dependencies <a href="#caching-the-dependencies" class="toc-anchor">#</a></h2>

<p>Installing the dependencies for a project can take quite some time for bigger projects. In
order to make it faster, you may try caching the dependencies.</p>

<p>You can either use our <a href="/user/caching/">built-in caching</a> or roll your own on S3. If you
want to roll your own and you use Ruby with Bundler, check out <a href="https://github.com/Fingertips/WAD">the great WAD project</a>.
For other languages, you can use s3 tools directly to upload and download the dependencies.</p>

<h2 id="environment-specific-ways-to-speed-up-your-build">Environment-Specific Ways to Speed up your Build <a href="#environment-specific-ways-to-speed-up-your-build" class="toc-anchor">#</a></h2>

<p>In addition to the optimizations implemented by Travis, there are also
several environment-specific ways you may consider to increase the speed of
your tests.</p>

<h3 id="php-optimizations">PHP optimizations <a href="#php-optimizations" class="toc-anchor">#</a></h3>

<p>PHP VM images on Travis CI provide several PHP versions which include
XDebug. The XDebug extension is useful, if you wish to generate code coverage
reports in your Travis builds, but it has been shown to have a negative effect
upon performance.</p>

<p>You may wish to consider
<a href="/user/languages/php#disabling-preinstalled-php-extensions">disabling the PHP XDebug extension</a> for your
builds if:</p>

<ul>
  <li>you are not generating code coverage reports in your Travis tests; or</li>
  <li>you are testing on PHP 7.0 or above and are able to use the <a href="https://github.com/krakjoe/phpdbg">PHP Debugger (phpdbg)</a>
which may be faster.</li>
</ul>

<h4 id="using-phpdbg-example">Using phpdbg example <a href="#using-phpdbg-example" class="toc-anchor">#</a></h4>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">before_script</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">phpenv config-rm xdebug.ini</span>
  <span class="pi">-</span> <span class="s">composer install</span>

<span class="na">script</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">phpdbg -qrr phpunit</span>
</code></pre></div></div>

<h3 id="makefile-optimization">Makefile optimization <a href="#makefile-optimization" class="toc-anchor">#</a></h3>

<p>If your makefile build consists of independent parts that can be safely
parallelized, you can <a href="https://www.gnu.org/software/make/manual/html_node/Parallel.html">run multiple recipes
simultaneously</a>.
See <a href="/user/reference/overview/#virtualization-environments">Virtualization
environments</a> to determine
how many CPUs an environment normally has and set the <code class="highlighter-rouge">make</code> job parameter to a
similar number (or slightly higher if your build frequently waits on disk I/O).</p>

<blockquote>
  <p>Note that doing this will cause concurrent recipe output to become interleaved.</p>
</blockquote>

<h4 id="makefile-parallelization-example">Makefile parallelization example <a href="#makefile-parallelization-example" class="toc-anchor">#</a></h4>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">env</span><span class="pi">:</span>
  <span class="na">global</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="s">MAKEFLAGS="-j 2"</span>
</code></pre></div></div>


        </main>
      </div><!-- /#content -->

      <footer class="footer">
  <div class="layout-inner">
    <div class="footer-elem">
      <svg width="142px" height="45.381px" viewBox="0 0 142 45.381" enable-background="new 0 0 142 45.381" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink= "http://www.w3.org/1999/xlink">
        <title>Travis CI Mascot</title>
        <image xlink:href="https://styleguide.travis-ci.com/images/logos/travis-footer-logo-new.svg" x="0" y="0" width="142px" height="45.381px" />
      </svg>
    </div>

    <div class="footer-elem"></div>

    <div class="footer-elem">
      <h3 class="footer-title">©Travis CI, GmbH</h3>
      <address>Rigaer Straße 8<br>10247 Berlin, Germany</address>
      <ul>
        <li><a href="https://travisci.workable.com/" title="Jobs at Travis CI">Work with Travis CI</a></li>
      </ul>
    </div>

    <div class="footer-elem">
      <h3 class="footer-title">Help</h3>
      <ul>
        <li><a href="https://docs.travis-ci.com" title="Travis CI Docs">Documentation</a></li>
        <li><a href="https://changelog.travis-ci.com/">Changelog</a></li>
        <li><a href="https://blog.travis-ci.com/" title="Travis CI Blog">Blog</a></li>
        <li><a href="mailto:support@travis-ci.com" title="Email Travis CI support">Email</a></li>
        <li><a href="https://twitter.com/travisci" title="Travis CI on Twitter">Twitter</a></li>
      </ul>
    </div>

    <div class="footer-elem">
      <h3 class="footer-title">Company</h3>
      <ul>
        <li><a href="/imprint.html" title="Imprint">Imprint</a></li>
        <li><a href="https://ideracorp.com/legal/TravisCI">Legal</a></li>
      </ul>
    </div>

    <div class="footer-elem">
      <h3 class="footer-title">Travis CI Status</h3>
      <ul>
        <li><div class="status-circle none">Status:</div>
          <a href="http://www.traviscistatus.com/">Travis CI Status</a>
        </li>
      </ul>
    </div>
  </div>
</footer>

<script>
 fetch('https://pnpcptp8xh9k.statuspage.io/api/v2/status.json').then(function(response) {
   return response.json();
 }).then(function(data) {
   if (data.status && data.status.indicator) {
     document.querySelector('.status-circle').classList.add(data.status.indicator);
   }
 });
</script>

    </div><!-- /.wrapper -->
  </body>
</html>
 contentType 9 text/html url 58 https://docs.travis-ci.com:443/user/speeding-up-the-build/ responseCode 3 200 