bkkqmgqcjsfmmkfmssispsgcsssmnsaeeimarklo length 5 36724 page 36724 <!DOCTYPE HTML>
<html lang="en">
  <head>
<!-- PDTQ-131 -->
<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-N3RT7TD');</script>
<!-- End Google Tag Manager -->
    
    <meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>Building on Multiple CPU Architectures - Travis CI</title>
<link rel="stylesheet" href="/assets/stylesheets/main.css">
<link rel="alternate" type="application/rss+xml" title="Travis CI Build Environment Updates" href="https://docs.travis-ci.com/feed.build-env-updates.xml">
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js" defer></script>

<script src="/assets/javascripts/main.js" type="text/javascript" charset="utf-8" defer></script>
<script src="/assets/javascripts/prism.js" type="text/javascript" charset="utf-8" defer></script>
<meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="@travisci" />
<meta name="twitter:creator" content="@travisci" />
<meta property="og:title" content="Travis CI Documentation" />
<meta property="og:type" content="website" />
<meta property="og:url" content=/user/multi-cpu-architectures/ />
<meta property="og:description" content="Building on Multiple CPU Architectures" />
<meta property="og:image" content="/images/TravisCI-Full-Color.png" }} />
<meta property="og:image:type" content="image/png" />
<meta property="og:image:width" content="642" />
<meta property="og:image:height" content="201" />
<meta property="og:image:alt" content="Travis CI logo" />


 

  </head>
  <body>
<!-- PDTQ-131 -->
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-N3RT7TD"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

    <div class="wrapper">

      <header class="top">
  <div class="row topbar">
    <h1 id="logo" class="logo">
  <a href="https://travis-ci.com/" title="Travis CI">Travis</a>
</h1>

    <nav>
      <ul id="navigation" class="navigation">
        <li><a href="https://blog.travis-ci.com">Blog</a></li>
        <li><a href="/">Docs</a></li>
        <li class="toggle"><button type="button" id="toggle-menu" class="button--teal">Menu</button></li>
      </ul>
    </nav>
  </div>
</header>


      <div id="content" class="row">

        <div id="sidebar" class="sidebar">
  <div>
    <!-- <h2>Search</h2> -->
    <div class="searchbox">
      <form>
        <input type="text" id="st-search-input" class="searchbox-input" placeholder="Search the docs" />
      </form>
      <script type="text/javascript">
      var Swiftype = window.Swiftype || {};
        (function() {
          Swiftype.key = 'tXvDDzd4fNTBnLvxfEyx';

          Swiftype.searchSearchFields = {
            "page": ["title, body, tags"]
          };
          Swiftype.autocompleteSearchFields = {
            "page": ["title, body, tags"]
          };
          /** DO NOT EDIT BELOW THIS LINE **/
          var script = document.createElement('script'); script.type = 'text/javascript'; script.async = true;
          script.src = "//swiftype.com/embed.js";
          var entry = document.getElementsByTagName('script')[0];
          document.getElementsByTagName('script')[0].parentNode.insertBefore(script, entry);
        }());
      </script>
    </div>
  </div>

  <section class="sidebar-navigation">
    <nav>
      <h3>Getting Started</h3>
      <ul>
        <li><a href="/user/for-beginners/">Core Concepts for Beginners</a></li>
        <li><a href="/user/tutorial/">Travis CI Tutorial</a></li>
        <li><a href="/user/customizing-the-build/">Customizing the Build</a></li>
        <li><a href="/user/speeding-up-the-build/">Speeding up the Build</a></li>
        <li><a href="/user/docker/">Using Docker in your Build</a></li>
        <li><a href="/user/gui-and-headless-browsers/">Headless Testing with Browsers</a></li>
        <li><a href="/user/pull-requests/">Building Pull Requests</a></li>
        <li><a href="/user/cron-jobs/">Cron Jobs</a></li>
        <li><a href="/user/common-build-problems/">Common Build Problems</a></li>
        <li><a href="https://github.com/travis-ci/travis#readme">Command Line Client</a></li>
        <li><a href="/user/build-config-imports/">Build Config Imports</a></li>
        <li><a href="/user/build-config-validation/">Build Config Validation</a></li>
      </ul>

      <h3>Jobs, Builds, Matrices and Stages</h3>
      <ul>
        <li><a href="/user/job-lifecycle/">Job Lifecycle</a></li>
        <li><a href="/user/build-matrix/">Build Matrix</a></li>
        <li><a href="/user/build-stages/">Build Stages</a></li>
        <li><a href="/user/conditional-builds-stages-jobs/">Conditional Builds, Stages, and Jobs</a></li>
      </ul>

      <h3>Installing Dependencies</h3>
      <ul>
        <li><a href="/user/installing-dependencies/">Installing Dependencies</a></li>
        <li><a href="/user/private-dependencies/">Private Dependencies GitHub</a></li>
        <li><a href="/user/private-dependencies-bb/">Private Dependencies Bitbucket</a></li>
        <li><a href="/user/database-setup/">Setting up Services and Databases</a></li>
        <li><a href="/user/caching/">Caching Dependencies</a></li>
        <li><a href="/user/using-workspaces/">Caching Dependencies within a Build (Workspaces)</a></li>
        <li><a href="/user/ssh-known-hosts/">Adding to SSH Known Hosts</a></li>
      </ul>

      <h3>Programming Languages</h3>
      <ul>
      
        <li><a href="/user/languages/android/">Android</a></li>
      
        <li><a href="/user/languages/c/">C</a></li>
      
        <li><a href="/user/languages/csharp/">C#</a></li>
      
        <li><a href="/user/languages/cpp/">C++</a></li>
      
        <li><a href="/user/languages/clojure/">Clojure</a></li>
      
        <li><a href="/user/languages/crystal/">Crystal</a></li>
      
        <li><a href="/user/languages/d/">D</a></li>
      
        <li><a href="/user/languages/dart/">Dart</a></li>
      
        <li><a href="/user/languages/elixir/">Elixir</a></li>
      
        <li><a href="/user/languages/elm/">Elm</a></li>
      
        <li><a href="/user/languages/erlang/">Erlang</a></li>
      
        <li><a href="/user/languages/csharp/">F#</a></li>
      
        <li><a href="/user/languages/minimal-and-generic/">Generic</a></li>
      
        <li><a href="/user/languages/go/">Go</a></li>
      
        <li><a href="/user/languages/groovy/">Groovy</a></li>
      
        <li><a href="/user/languages/haskell/">Haskell</a></li>
      
        <li><a href="/user/languages/haxe/">Haxe</a></li>
      
        <li><a href="/user/languages/java/">Java</a></li>
      
        <li><a href="/user/languages/javascript-with-nodejs/">JavaScript <small>(with Node.js)</small></a></li>
      
        <li><a href="/user/languages/julia/">Julia</a></li>
      
        <li><a href="/user/languages/matlab/">MATLAB</a></li>
      
        <li><a href="/user/languages/minimal-and-generic/">Minimal</a></li>
      
        <li><a href="/user/languages/nix/">Nix</a></li>
      
        <li><a href="/user/languages/objective-c/">Objective-C</a></li>
      
        <li><a href="/user/languages/perl/">Perl</a></li>
      
        <li><a href="/user/languages/perl6/">Perl6</a></li>
      
        <li><a href="/user/languages/php/">PHP</a></li>
      
        <li><a href="/user/languages/python/">Python</a></li>
      
        <li><a href="/user/languages/r/">R</a></li>
      
        <li><a href="/user/languages/ruby/">Ruby</a></li>
      
        <li><a href="/user/languages/rust/">Rust</a></li>
      
        <li><a href="/user/languages/scala/">Scala</a></li>
      
        <li><a href="/user/languages/smalltalk/">Smalltalk</a></li>
      
        <li><a href="/user/languages/objective-c/">Swift</a></li>
      
        <li><a href="/user/languages/csharp/">Visual Basic</a></li>
      
        <li><a href="/user/languages/community-supported-languages/">Adding a language</a></li>
      </ul>

      <h3>Deployments and Uploads</h3>
      <ul>
        
          <li class="is-overview"><a href="/user/deployment/">Overview</a></li>
          
        
        
          <li><a href="/user/deployment/anynines/">anynines</a></li>
        
          <li><a href="/user/deployment/atlas/">Atlas</a></li>
        
          <li><a href="/user/deployment/codedeploy/">AWS CodeDeploy</a></li>
        
          <li><a href="/user/deployment/elasticbeanstalk/">AWS Elastic Beanstalk</a></li>
        
          <li><a href="/user/deployment/lambda/">AWS Lambda</a></li>
        
          <li><a href="/user/deployment/opsworks/">AWS OpsWorks</a></li>
        
          <li><a href="/user/deployment/s3/">AWS S3</a></li>
        
          <li><a href="/user/deployment/azure-web-apps/">Azure Web Apps</a></li>
        
          <li><a href="/user/deployment/bintray/">bintray</a></li>
        
          <li><a href="/user/deployment/bitballoon/">BitBalloon</a></li>
        
          <li><a href="/user/deployment/bluemixcloudfoundry/">Bluemix CloudFoundry</a></li>
        
          <li><a href="/user/deployment/boxfuse/">Boxfuse</a></li>
        
          <li><a href="/user/deployment/catalyze/">Catalyze</a></li>
        
          <li><a href="/user/deployment/chefsupermarket/">Chef Supermarket</a></li>
        
          <li><a href="/user/deployment/cloud66/">Cloud 66</a></li>
        
          <li><a href="/user/deployment/cloudfoundry/">CloudFoundry</a></li>
        
          <li><a href="/user/deployment/cargo/">Cargo</a></li>
        
          <li><a href="/user/deployment/engineyard/">Engine Yard</a></li>
        
          <li><a href="/user/deployment/pages/">GitHub Pages</a></li>
        
          <li><a href="/user/deployment/releases/">GitHub Releases</a></li>
        
          <li><a href="/user/deployment/google-app-engine/">Google App Engine</a></li>
        
          <li><a href="/user/deployment/gcs/">Google Cloud Storage</a></li>
        
          <li><a href="/user/deployment/firebase/">Google Firebase</a></li>
        
          <li><a href="/user/deployment/hackage/">Hackage</a></li>
        
          <li><a href="/user/deployment/hephy/">Hephy</a></li>
        
          <li><a href="/user/deployment/heroku/">Heroku</a></li>
        
          <li><a href="/user/deployment/launchpad/">Launchpad</a></li>
        
          <li><a href="/user/deployment/npm/">npm</a></li>
        
          <li><a href="/user/deployment/openshift/">OpenShift</a></li>
        
          <li><a href="/user/deployment/packagecloud/">packagecloud.io</a></li>
        
          <li><a href="/user/deployment/puppetforge/">Puppet Forge</a></li>
        
          <li><a href="/user/deployment/pypi/">PyPI</a></li>
        
          <li><a href="/user/deployment/cloudfiles/">Rackspace Cloud Files</a></li>
        
          <li><a href="/user/deployment/rubygems/">RubyGems</a></li>
        
          <li><a href="/user/deployment/scalingo/">Scalingo</a></li>
        
          <li><a href="/user/deployment/script/">Script</a></li>
        
          <li><a href="/user/deployment/snaps/">Snap Store</a></li>
        
          <li><a href="/user/deployment/surge/">Surge.sh</a></li>
        
          <li><a href="/user/deployment/testfairy/">TestFairy</a></li>
        
          <li><a href="/user/deployment/transifex/">Transifex</a></li>
        
        <li><a href="/user/uploading-artifacts/">Uploading Build Artifacts</a></li>
      </ul>

      <h3>CI Environment Reference</h3>
      <ul>
        <li class="is-overview"><a href="/user/reference/overview/">Overview</a></li>
        <li><a href="/user/reference/linux/">Ubuntu Linux CI Environment References</a></li>
        <li><a href="/user/reference/osx/">macOS CI Environment Reference</a></li>
        <li><a href="/user/reference/windows/">Windows CI Environment Reference</a></li>
        <li><a href="/user/reference/freebsd/">FreeBSD CI Environment Reference</a></li>
        <li><a href="/user/multi-os/">Building on Multiple Operating Systems</a></li>
        <li><a href="/user/multi-cpu-architectures/">Building on Multiple CPU Architectures</a></li>
        <li><a href="/user/environment-variables/">Environment Variables</a></li>
        <li><a href="/user/build-environment-updates/">Build Environment Updates</a></li>
        <li><a href="/user/ip-addresses/">Build Machines IP Addresses</a></li>
      </ul>

      <h3>Security and Secure Software Supply Chain</h3>
      <ul>
        <li><a href="/user/encryption-keys/">Encrypting Sensitive Data</a></li>
        <li><a href="/user/encrypting-files/">Encrypting Files</a></li>
        <li><a href="/user/github-oauth-scopes/">GitHub Permissions used by Travis CI</a></li>
        <li><a href="/user/bb-oauth-scopes/">Bitbucket Permissions used by Travis CI</a></li>
        <li><a href="/user/assembla-oauth-scopes/">Assembla Permissions used by Travis CI</a></li>
        <li><a href="/user/gl-oauth-scopes/">GitLab Permissions used by Travis CI</a></li>
        <li><a href="/user/disable-job-logs/">Disable Job Logs Availability</a></li>
        <li><a href="/user/best-practices-security/">Best Practices in Securing Your Data</a></li>
        <li><a href="/user/securely-signing-software">Securely Signing Software</a></li>
        <li><a href="/user/sbom">Software Bill of Materials</a></li>
      </ul>

      <h3>Integrations and Notifications</h3>
      <ul>
        <li><a href="/user/notifications/">Configuring Notifications</a></li>
        <li><a href="/user/status-images/">Showing Build Status Images</a></li>
        <li><a href="/user/code-climate/">Code Climate</a></li>
        <li><a href="/user/deepsource/">DeepSource</a></li>
        <li><a href="/user/coveralls/">Coveralls</a></li>
        <li><a href="/user/coverity-scan/">Coverity Scan</a></li>
        <li><a href="/user/browserstack/">BrowserStack</a></li>
        <li><a href="/user/sauce-connect/">Sauce Labs</a></li>
        <li><a href="/user/sonarcloud/">SonarCloud</a></li>
        <li><a href="/user/sourceclear/">SourceClear</a></li>
        <li><a href="/user/build-feeds/">Atom Feeds</a></li>
        <li><a href="/user/cc-menu/">CCMenu / CCTray Feeds</a></li>
        <li><a href="/user/integration/platformio/">Embedded Builds with PlatformIO</a></li>
        <li><a href="/user/hashicorp-vault-integration">Hashicorp Vault</a></li>
        <li><a href="/user/apps/">3rd Party Apps, Clients and Tools</a></li>
      </ul>

      <h3>Developer Program</h3>
      <ul>
        <li class="is-overview"><a href="/user/developer/">Overview</a></li>
        <li><a href="https://developer.travis-ci.com/">API V3</a></li>
        <li><a href="/user/triggering-builds/">Triggering Builds with API V3</a></li>
        <li><a href="https://github.com/travis-ci/travis#ruby-library">The Ruby Library</a></li>
      </ul>
      
      <h3>Hosted Billing</h3>
      <ul>
        <li class="is-overview"><a href="/user/billing-overview/">Overview</a></li>
        <li><a href="/user/billing-autorefill/">Auto-refill</a></li>
        <li><a href="/user/billing-faq/">FAQ</a></li>
      </ul>

      <h3>Travis CI Enterprise</h3>
      <ul>
        <li><a href="/user/enterprise/">Enterprise Docs</a></li>
      </ul>

    </nav>
  </section>

  <section class="sidebar-notice">
    <p>This documentation site is Open Source.
      The <a href="https://github.com/travis-ci/docs-travis-ci-com">README in our Git repository</a> explains how to contribute.</p>
    <p>Travis CI relies on Open Source <a href="/user/open_source_license/">licensing information</a>.</p>
  </section>

</div><!-- /#sidebar -->


        <main id="main" class="main" data-swiftype-index='true'>
          
            <aside class="improve-page" data-swiftype-index='false'><a href="https://github.com/travis-ci/docs-travis-ci-com/edit/master/user/multi-cpu-architectures.md" target="_blank" title="Edit this page on GitHub" class="button-pen" data-proofer-ignore>Improve this page on GitHub</a></aside>
            <h1 class="title">Building on Multiple CPU Architectures</h1>
          

          


          
            <div id="toc" class="toc">
              <ul class="list-language">
  <li><a href="#multi-cpu-availability">Multi CPU availability</a></li>
  <li><a href="#default-cpu-architecture">Default CPU Architecture</a></li>
  <li><a href="#identifying-cpu-architecture-of-build-jobs">Identifying CPU Architecture of Build Jobs</a></li>
  <li><a href="#testing-on-multiple-cpu-architectures">Testing on Multiple CPU Architectures</a></li>
  <li><a href="#example-multi-architecture-build-matrix">Example Multi Architecture Build Matrix</a></li>
  <li><a href="#using-docker-in-multiple-cpu-architecture-based-builds-within-lxd-containers">Using Docker in Multiple CPU Architecture-Based Builds within LXD Containers</a></li>
  <li><a href="#lxd-related-limitations">LXD related limitations</a></li>
  <li><a href="#partner-queue-solution">Partner Queue Solution</a></li>
</ul>

            </div>
          

          <blockquote class="beta">
  <p>This is a beta stage of this feature and we are <a href="https://travis-ci.community/c/environments/multi-cpu-arch">eager to hear back from you</a>, both for <code class="highlighter-rouge">Arm</code>-based and <code class="highlighter-rouge">IBM</code>-based feedback. The definition keys used in the <code class="highlighter-rouge">.travis.yml</code> file may be further adapted on short notice.</p>
</blockquote>

<blockquote>
  <p><code class="highlighter-rouge">IBM Power</code> and <code class="highlighter-rouge">IBM Z</code>-based building is available for Open Source repositories (at travis-ci.com). While available to all Open Source repositories, the concurrency available for multiple CPU arch-based jobs is limited during the beta period.</p>

  <p>An attempt to run <code class="highlighter-rouge">IBM Power</code> and <code class="highlighter-rouge">IBM Z</code>-based builds for a private repository will result in</p>
  <ul>
    <li>a build run on standard, <code class="highlighter-rouge">AMD</code>-based infrastructure for <code class="highlighter-rouge">IBM-Z</code></li>
    <li>a build run on <code class="highlighter-rouge">PPC64LE</code> infrastructure, but under normal system conditions (incl. any charges if applicable) for <code class="highlighter-rouge">IBM Power</code></li>
  </ul>

  <p>For any commercial queries with regards to multi-arch builds before they are available, please <a href="mailto:support@travis-ci.com">contact us</a>.</p>

  <p><code class="highlighter-rouge">Arm</code>-based building on <code class="highlighter-rouge">Arm64</code> CPU  is only available for Open Source repositories (at travis-ci.com). While available to all Open Source repositories, the concurrency available for multiple CPU arch-based jobs is limited during the beta period.</p>

  <p><code class="highlighter-rouge">Arm</code>-based building on <code class="highlighter-rouge">Arm64 Graviton2</code> CPU now supports both Open Source and commercial projects. The total concurrency capacity is limited, but may adjusted based on the demand.</p>
</blockquote>

<h2 id="multi-cpu-availability">Multi CPU availability <a href="#multi-cpu-availability" class="toc-anchor">#</a></h2>

<p>If your code is used on multiple CPU architectures it probably should be tested on multiple CPU architectures. Travis CI can test on</p>

<ul>
  <li><code class="highlighter-rouge">amd64</code>,</li>
  <li><code class="highlighter-rouge">ppc64le</code> (IBM Power CPUs),</li>
  <li><code class="highlighter-rouge">s390x</code> (IBM Z CPUs),</li>
  <li><code class="highlighter-rouge">arm64</code> (run on ARMv8 compliant CPUs)</li>
  <li><code class="highlighter-rouge">arm64-graviton2</code> (new gen of ARMv8 compliant CPUs on AWS, available only on <a href="https://travis-ci.com">travis-ci.com</a>)</li>
</ul>

<p>if the operating system is Linux. The table below gives a brief perspective about the CPU and project type combinations:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Architecture</th>
      <th style="text-align: left">Open Source</th>
      <th style="text-align: left">Commercial</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left"><code class="highlighter-rouge">amd64</code></td>
      <td style="text-align: left">Yes</td>
      <td style="text-align: left">Yes</td>
    </tr>
    <tr>
      <td style="text-align: left"><code class="highlighter-rouge">ppc64le</code>.</td>
      <td style="text-align: left">Yes</td>
      <td style="text-align: left">No</td>
    </tr>
    <tr>
      <td style="text-align: left"><code class="highlighter-rouge">s390x</code></td>
      <td style="text-align: left">Yes</td>
      <td style="text-align: left">No</td>
    </tr>
    <tr>
      <td style="text-align: left"><code class="highlighter-rouge">arm64</code> (v8)</td>
      <td style="text-align: left">Yes</td>
      <td style="text-align: left">No</td>
    </tr>
    <tr>
      <td style="text-align: left"><code class="highlighter-rouge">arm64-graviton2</code> (v8)</td>
      <td style="text-align: left">Yes</td>
      <td style="text-align: left">Yes</td>
    </tr>
  </tbody>
</table>

<p>The two <code class="highlighter-rouge">arm64</code> tags are used right now to distinguish between OSS-support only (<code class="highlighter-rouge">arch: arm64</code>) and available both for OSS &amp; commercial (<code class="highlighter-rouge">arch: arm64-graviton2</code>).</p>

<h2 id="default-cpu-architecture">Default CPU Architecture <a href="#default-cpu-architecture" class="toc-anchor">#</a></h2>

<p>The default CPU architecture used in Travis CI builds is <code class="highlighter-rouge">amd64</code>. It is used when no <code class="highlighter-rouge">arch</code> key is present.</p>

<h2 id="identifying-cpu-architecture-of-build-jobs">Identifying CPU Architecture of Build Jobs <a href="#identifying-cpu-architecture-of-build-jobs" class="toc-anchor">#</a></h2>

<p>You can identify for which CPU architecture a build job is run via</p>

<ul>
  <li>GUI
    <ul>
      <li>in the build job list, there’s a specific label and architecture name based on <code class="highlighter-rouge">arch</code> tag value</li>
      <li>in the build job view, the same specific label is displayed near the operating system identifier</li>
    </ul>
  </li>
  <li>A default environmental variable printed out during your build job: <code class="highlighter-rouge">$TRAVIS_CPU_ARCH</code> (for a complete list of available default environmental variables please see our <a href="https://docs.travis-ci.com/user/environment-variables/#default-environment-variables">Environment Variables - Default Environment Variables</a> documentation.</li>
</ul>

<h2 id="testing-on-multiple-cpu-architectures">Testing on Multiple CPU Architectures <a href="#testing-on-multiple-cpu-architectures" class="toc-anchor">#</a></h2>

<p>To enable testing on multiple CPU architectures add the <code class="highlighter-rouge">arch</code> key to your <code class="highlighter-rouge">.travis.yml</code>:</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">arch</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">amd64</span>
  <span class="pi">-</span> <span class="s">ppc64le</span>
  <span class="pi">-</span> <span class="s">s390x</span>
  <span class="pi">-</span> <span class="s">arm64</span>  <span class="c1"># please note arm64-graviton2 requires explicit virt: [lxd|vm] tag so it's recommended for jobs.include, see below</span>
<span class="na">os</span><span class="pi">:</span> <span class="s">linux</span>  <span class="c1"># different CPU architectures are only supported on Linux</span>
</code></pre></div></div>

<p>If you are already using a <a href="/user/customizing-the-build/#build-matrix">build matrix</a> to test multiple versions, the <code class="highlighter-rouge">arch</code> key also multiplies the matrix.</p>

<ul>
  <li>The <code class="highlighter-rouge">ppc64le</code> (IBM Power) and <code class="highlighter-rouge">s390x</code> (IBM Z) build jobs are run in an LXD compliant Linux OS image.</li>
  <li>The <code class="highlighter-rouge">arm64</code> CPU architecture build job is run in an LXD compliant Linux OS image.</li>
  <li>The <code class="highlighter-rouge">arm64-graviton2</code> architecture builds can be run on both LXD and regular ‘full VM’ environments. You <strong>need</strong> to explicitly set the target environment by using <code class="highlighter-rouge">virt</code> key. A <code class="highlighter-rouge">virt: vm</code> routes build jobs to a full virtual machine setup while <code class="highlighter-rouge">virt: lxd</code> routes build jobs to an LXD container setup.</li>
  <li>The default LXD image supported by Travis CI is Ubuntu Xenial 16.04 and by using <code class="highlighter-rouge">dist</code> you can select different supported LXD images. Also see our <a href="https://docs.travis-ci.com/user/reference/overview/#virtualisation-environment-vs-operating-system">CI Environment Overview - Virtualisation Environment vs Operating System</a> documentation. The LXD host, on which LXD-based builds are run, is on Ubuntu 18.04.</li>
  <li>The amd64 CPU architecture build job currently runs as a regular ‘full VM’ and will be transitioned to an LXD compliant Linux OS image usage over time.</li>
</ul>

<h2 id="example-multi-architecture-build-matrix">Example Multi Architecture Build Matrix <a href="#example-multi-architecture-build-matrix" class="toc-anchor">#</a></h2>

<p>Here’s an example of a <code class="highlighter-rouge">.travis.yml</code> file using the <code class="highlighter-rouge">arch</code> key to compile against <code class="highlighter-rouge">amd64</code>, <code class="highlighter-rouge">arm64</code>, <code class="highlighter-rouge">arm64-graviton2</code>, <code class="highlighter-rouge">ppc64le</code> (IBM Power) and <code class="highlighter-rouge">s390x</code> (IBM Z) under Linux and using C as the programming language.</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">language</span><span class="pi">:</span> <span class="s">c</span>

<span class="na">arch</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">amd64</span>
  <span class="pi">-</span> <span class="s">arm64</span>  <span class="c1"># please note arm64-graviton2 requires explicit virt: [lxd|vm] tag so it's recommended for jobs.include, see below</span>
  <span class="pi">-</span> <span class="s">ppc64le</span>
  <span class="pi">-</span> <span class="s">s390x</span>

<span class="na">compiler</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">gcc</span>
  <span class="pi">-</span> <span class="s">clang</span>

<span class="na">install</span><span class="pi">:</span> <span class="s">skip</span>

<span class="na">script</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">cd src</span>
  <span class="pi">-</span> <span class="s">make all</span>
</code></pre></div></div>

<p>The <code class="highlighter-rouge">.travis.yml</code> file above creates a 2x4 <a href="/user/customizing-the-build/#build-matrix">build matrix</a>: compilers x each architecture.</p>

<p>There are many options available and using the <code class="highlighter-rouge">matrix.include</code> key is essential to include any specific entries. For example, this matrix would route builds to the arm64 and amd64 architecture environments:</p>

<blockquote>
  <p>Note that <code class="highlighter-rouge">group: edge</code> is required for <code class="highlighter-rouge">arm64-graviton2</code> architectures.</p>
</blockquote>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">jobs</span><span class="pi">:</span>
  <span class="na">include</span><span class="pi">:</span>
   <span class="pi">-</span> <span class="na">os</span><span class="pi">:</span> <span class="s">linux</span>
     <span class="na">arch</span><span class="pi">:</span> <span class="s">amd64</span>
   <span class="pi">-</span> <span class="na">os</span><span class="pi">:</span> <span class="s">linux</span>
     <span class="na">arch</span><span class="pi">:</span> <span class="s">arm64</span>
   <span class="pi">-</span> <span class="na">os</span><span class="pi">:</span> <span class="s">linux</span>
     <span class="na">arch</span><span class="pi">:</span> <span class="s">arm64-graviton2</span>
     <span class="na">virt</span><span class="pi">:</span> <span class="s">lxd</span>
     <span class="na">group</span><span class="pi">:</span> <span class="s">edge</span>
</code></pre></div></div>

<p>Similarly, this matrix would route builds to the <code class="highlighter-rouge">ppc64le</code> (IBM Power) and <code class="highlighter-rouge">s390x</code> (IBM Z) architecture environments:</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">jobs</span><span class="pi">:</span>
  <span class="na">include</span><span class="pi">:</span>
   <span class="pi">-</span> <span class="na">os</span><span class="pi">:</span> <span class="s">linux</span>
     <span class="na">arch</span><span class="pi">:</span> <span class="s">ppc64le</span>
   <span class="pi">-</span> <span class="na">os</span><span class="pi">:</span> <span class="s">linux</span>
     <span class="na">arch</span><span class="pi">:</span> <span class="s">s390x</span>
</code></pre></div></div>

<p>Please note, that explicitly included builds inherit the first value in an array:</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">arch</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">amd64</span>
  <span class="pi">-</span> <span class="s">arm64</span>
  <span class="pi">-</span> <span class="s">ppc64le</span>
  <span class="pi">-</span> <span class="s">s390x</span>
<span class="na">jobs</span><span class="pi">:</span>
  <span class="na">include</span><span class="pi">:</span>
   <span class="pi">-</span> <span class="na">os</span><span class="pi">:</span> <span class="s">linux</span>
     <span class="na">env</span><span class="pi">:</span> <span class="s">LIB_PATH="/usr/bin/shared/x86_64/v1"</span>
   <span class="pi">-</span> <span class="na">os</span><span class="pi">:</span> <span class="s">linux</span>
     <span class="na">env</span><span class="pi">:</span> <span class="s">LIB_PATH="/usr/bin/shared/x86_64/v2"</span>
</code></pre></div></div>

<p>For example, the above <code class="highlighter-rouge">.travis.yml</code>, would result in running both jobs with the environmental variable LIB_PATH assigned different values being run only on <code class="highlighter-rouge">amd64</code> architecture.</p>

<h2 id="using-docker-in-multiple-cpu-architecture-based-builds-within-lxd-containers">Using Docker in Multiple CPU Architecture-Based Builds within LXD Containers <a href="#using-docker-in-multiple-cpu-architecture-based-builds-within-lxd-containers" class="toc-anchor">#</a></h2>

<p>It is possible to use Docker in multiple CPU architecture-based builds within an LXD container. You may need a specific CPU architecture compliant docker image as a base or ensure relevant libraries required by your build are added to your Dockerfile.</p>

<p>An example of building a docker image from a Dockerfile adjusted to arm64:</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">arch</span><span class="pi">:</span> <span class="s">arm64</span>
<span class="na">language</span><span class="pi">:</span> <span class="s">c</span>
<span class="na">compiler</span><span class="pi">:</span> <span class="s">gcc</span>
<span class="na">services</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">docker</span>
<span class="na">script</span><span class="pi">:</span> <span class="s">docker build -t my/test -f Dockerfile.arm64 .</span>
</code></pre></div></div>

<p>An example of running docker image:</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">arch</span><span class="pi">:</span> <span class="s">arm64</span>
<span class="na">services</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">docker</span>
<span class="na">script</span><span class="pi">:</span> <span class="s">docker run my/test</span> <span class="c1">#assuming docker image my/test is arm64v8 ready</span>
</code></pre></div></div>

<p>You can try it out also for <code class="highlighter-rouge">ppc64le</code> (IBM Power) and <code class="highlighter-rouge">s390x</code> (IBM Z) based docker builds, assuming all dependencies and/or a CPU architecture compliant base docker image are used.</p>

<p>You can also have a look at <a href="/user/docker/">Using Docker in Builds</a>.</p>

<h2 id="lxd-related-limitations">LXD related limitations <a href="#lxd-related-limitations" class="toc-anchor">#</a></h2>

<p>For more details see <a href="/user/reference/overview/#linux-security-and-lxd-container">Build Environment Overview</a>.</p>

<h2 id="partner-queue-solution">Partner Queue Solution <a href="#partner-queue-solution" class="toc-anchor">#</a></h2>

<p>With the introduction of a new billing system in Travis CI, the IBM and part of the ARM64 infrastructures are kept available free of charge for OSS as a part of the Partner Queue Solution. For more details see <a href="/user/billing-overview/#usage---credits">Billing Overview - Usage based Plans - Credits</a>.</p>


        </main>
      </div><!-- /#content -->

      <footer class="footer">
  <div class="layout-inner">
    <div class="footer-elem">
      <svg width="142px" height="45.381px" viewBox="0 0 142 45.381" enable-background="new 0 0 142 45.381" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink= "http://www.w3.org/1999/xlink">
        <title>Travis CI Mascot</title>
        <image xlink:href="https://styleguide.travis-ci.com/images/logos/travis-footer-logo-new.svg" x="0" y="0" width="142px" height="45.381px" />
      </svg>
    </div>

    <div class="footer-elem"></div>

    <div class="footer-elem">
      <h3 class="footer-title">©Travis CI, GmbH</h3>
      <address>Rigaer Straße 8<br>10247 Berlin, Germany</address>
      <ul>
        <li><a href="https://travisci.workable.com/" title="Jobs at Travis CI">Work with Travis CI</a></li>
      </ul>
    </div>

    <div class="footer-elem">
      <h3 class="footer-title">Help</h3>
      <ul>
        <li><a href="https://docs.travis-ci.com" title="Travis CI Docs">Documentation</a></li>
        <li><a href="https://changelog.travis-ci.com/">Changelog</a></li>
        <li><a href="https://blog.travis-ci.com/" title="Travis CI Blog">Blog</a></li>
        <li><a href="mailto:support@travis-ci.com" title="Email Travis CI support">Email</a></li>
        <li><a href="https://twitter.com/travisci" title="Travis CI on Twitter">Twitter</a></li>
      </ul>
    </div>

    <div class="footer-elem">
      <h3 class="footer-title">Company</h3>
      <ul>
        <li><a href="/imprint.html" title="Imprint">Imprint</a></li>
        <li><a href="https://ideracorp.com/legal/TravisCI">Legal</a></li>
      </ul>
    </div>

    <div class="footer-elem">
      <h3 class="footer-title">Travis CI Status</h3>
      <ul>
        <li><div class="status-circle none">Status:</div>
          <a href="http://www.traviscistatus.com/">Travis CI Status</a>
        </li>
      </ul>
    </div>
  </div>
</footer>

<script>
 fetch('https://pnpcptp8xh9k.statuspage.io/api/v2/status.json').then(function(response) {
   return response.json();
 }).then(function(data) {
   if (data.status && data.status.indicator) {
     document.querySelector('.status-circle').classList.add(data.status.indicator);
   }
 });
</script>

    </div><!-- /.wrapper -->
  </body>
</html>
 contentType 9 text/html url 60 https://docs.travis-ci.com:443/user/multi-cpu-architectures/ responseCode 3 200 