vijkhocejejcrmhkxizemgasroimdamemipkoefk length 5 37472 page 37472 <!DOCTYPE HTML>
<html lang="en">
  <head>
<!-- PDTQ-131 -->
<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-N3RT7TD');</script>
<!-- End Google Tag Manager -->
    
    <meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>Importing Shared Build Configuration - Travis CI</title>
<link rel="stylesheet" href="/assets/stylesheets/main.css">
<link rel="alternate" type="application/rss+xml" title="Travis CI Build Environment Updates" href="https://docs.travis-ci.com/feed.build-env-updates.xml">
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js" defer></script>

<script src="/assets/javascripts/main.js" type="text/javascript" charset="utf-8" defer></script>
<script src="/assets/javascripts/prism.js" type="text/javascript" charset="utf-8" defer></script>
<meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="@travisci" />
<meta name="twitter:creator" content="@travisci" />
<meta property="og:title" content="Travis CI Documentation" />
<meta property="og:type" content="website" />
<meta property="og:url" content=/user/build-config-imports/ />
<meta property="og:description" content="Importing Shared Build Configuration" />
<meta property="og:image" content="/images/TravisCI-Full-Color.png" }} />
<meta property="og:image:type" content="image/png" />
<meta property="og:image:width" content="642" />
<meta property="og:image:height" content="201" />
<meta property="og:image:alt" content="Travis CI logo" />


 

  </head>
  <body>
<!-- PDTQ-131 -->
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-N3RT7TD"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

    <div class="wrapper">

      <header class="top">
  <div class="row topbar">
    <h1 id="logo" class="logo">
  <a href="https://travis-ci.com/" title="Travis CI">Travis</a>
</h1>

    <nav>
      <ul id="navigation" class="navigation">
        <li><a href="https://blog.travis-ci.com">Blog</a></li>
        <li><a href="/">Docs</a></li>
        <li class="toggle"><button type="button" id="toggle-menu" class="button--teal">Menu</button></li>
      </ul>
    </nav>
  </div>
</header>


      <div id="content" class="row">

        <div id="sidebar" class="sidebar">
  <div>
    <!-- <h2>Search</h2> -->
    <div class="searchbox">
      <form>
        <input type="text" id="st-search-input" class="searchbox-input" placeholder="Search the docs" />
      </form>
      <script type="text/javascript">
      var Swiftype = window.Swiftype || {};
        (function() {
          Swiftype.key = 'tXvDDzd4fNTBnLvxfEyx';

          Swiftype.searchSearchFields = {
            "page": ["title, body, tags"]
          };
          Swiftype.autocompleteSearchFields = {
            "page": ["title, body, tags"]
          };
          /** DO NOT EDIT BELOW THIS LINE **/
          var script = document.createElement('script'); script.type = 'text/javascript'; script.async = true;
          script.src = "//swiftype.com/embed.js";
          var entry = document.getElementsByTagName('script')[0];
          document.getElementsByTagName('script')[0].parentNode.insertBefore(script, entry);
        }());
      </script>
    </div>
  </div>

  <section class="sidebar-navigation">
    <nav>
      <h3>Getting Started</h3>
      <ul>
        <li><a href="/user/for-beginners/">Core Concepts for Beginners</a></li>
        <li><a href="/user/tutorial/">Travis CI Tutorial</a></li>
        <li><a href="/user/customizing-the-build/">Customizing the Build</a></li>
        <li><a href="/user/speeding-up-the-build/">Speeding up the Build</a></li>
        <li><a href="/user/docker/">Using Docker in your Build</a></li>
        <li><a href="/user/gui-and-headless-browsers/">Headless Testing with Browsers</a></li>
        <li><a href="/user/pull-requests/">Building Pull Requests</a></li>
        <li><a href="/user/cron-jobs/">Cron Jobs</a></li>
        <li><a href="/user/common-build-problems/">Common Build Problems</a></li>
        <li><a href="https://github.com/travis-ci/travis#readme">Command Line Client</a></li>
        <li><a href="/user/build-config-imports/">Build Config Imports</a></li>
        <li><a href="/user/build-config-validation/">Build Config Validation</a></li>
      </ul>

      <h3>Jobs, Builds, Matrices and Stages</h3>
      <ul>
        <li><a href="/user/job-lifecycle/">Job Lifecycle</a></li>
        <li><a href="/user/build-matrix/">Build Matrix</a></li>
        <li><a href="/user/build-stages/">Build Stages</a></li>
        <li><a href="/user/conditional-builds-stages-jobs/">Conditional Builds, Stages, and Jobs</a></li>
      </ul>

      <h3>Installing Dependencies</h3>
      <ul>
        <li><a href="/user/installing-dependencies/">Installing Dependencies</a></li>
        <li><a href="/user/private-dependencies/">Private Dependencies GitHub</a></li>
        <li><a href="/user/private-dependencies-bb/">Private Dependencies Bitbucket</a></li>
        <li><a href="/user/database-setup/">Setting up Services and Databases</a></li>
        <li><a href="/user/caching/">Caching Dependencies</a></li>
        <li><a href="/user/using-workspaces/">Caching Dependencies within a Build (Workspaces)</a></li>
        <li><a href="/user/ssh-known-hosts/">Adding to SSH Known Hosts</a></li>
      </ul>

      <h3>Programming Languages</h3>
      <ul>
      
        <li><a href="/user/languages/android/">Android</a></li>
      
        <li><a href="/user/languages/c/">C</a></li>
      
        <li><a href="/user/languages/csharp/">C#</a></li>
      
        <li><a href="/user/languages/cpp/">C++</a></li>
      
        <li><a href="/user/languages/clojure/">Clojure</a></li>
      
        <li><a href="/user/languages/crystal/">Crystal</a></li>
      
        <li><a href="/user/languages/d/">D</a></li>
      
        <li><a href="/user/languages/dart/">Dart</a></li>
      
        <li><a href="/user/languages/elixir/">Elixir</a></li>
      
        <li><a href="/user/languages/elm/">Elm</a></li>
      
        <li><a href="/user/languages/erlang/">Erlang</a></li>
      
        <li><a href="/user/languages/csharp/">F#</a></li>
      
        <li><a href="/user/languages/minimal-and-generic/">Generic</a></li>
      
        <li><a href="/user/languages/go/">Go</a></li>
      
        <li><a href="/user/languages/groovy/">Groovy</a></li>
      
        <li><a href="/user/languages/haskell/">Haskell</a></li>
      
        <li><a href="/user/languages/haxe/">Haxe</a></li>
      
        <li><a href="/user/languages/java/">Java</a></li>
      
        <li><a href="/user/languages/javascript-with-nodejs/">JavaScript <small>(with Node.js)</small></a></li>
      
        <li><a href="/user/languages/julia/">Julia</a></li>
      
        <li><a href="/user/languages/matlab/">MATLAB</a></li>
      
        <li><a href="/user/languages/minimal-and-generic/">Minimal</a></li>
      
        <li><a href="/user/languages/nix/">Nix</a></li>
      
        <li><a href="/user/languages/objective-c/">Objective-C</a></li>
      
        <li><a href="/user/languages/perl/">Perl</a></li>
      
        <li><a href="/user/languages/perl6/">Perl6</a></li>
      
        <li><a href="/user/languages/php/">PHP</a></li>
      
        <li><a href="/user/languages/python/">Python</a></li>
      
        <li><a href="/user/languages/r/">R</a></li>
      
        <li><a href="/user/languages/ruby/">Ruby</a></li>
      
        <li><a href="/user/languages/rust/">Rust</a></li>
      
        <li><a href="/user/languages/scala/">Scala</a></li>
      
        <li><a href="/user/languages/smalltalk/">Smalltalk</a></li>
      
        <li><a href="/user/languages/objective-c/">Swift</a></li>
      
        <li><a href="/user/languages/csharp/">Visual Basic</a></li>
      
        <li><a href="/user/languages/community-supported-languages/">Adding a language</a></li>
      </ul>

      <h3>Deployments and Uploads</h3>
      <ul>
        
          <li class="is-overview"><a href="/user/deployment/">Overview</a></li>
          
        
        
          <li><a href="/user/deployment/anynines/">anynines</a></li>
        
          <li><a href="/user/deployment/atlas/">Atlas</a></li>
        
          <li><a href="/user/deployment/codedeploy/">AWS CodeDeploy</a></li>
        
          <li><a href="/user/deployment/elasticbeanstalk/">AWS Elastic Beanstalk</a></li>
        
          <li><a href="/user/deployment/lambda/">AWS Lambda</a></li>
        
          <li><a href="/user/deployment/opsworks/">AWS OpsWorks</a></li>
        
          <li><a href="/user/deployment/s3/">AWS S3</a></li>
        
          <li><a href="/user/deployment/azure-web-apps/">Azure Web Apps</a></li>
        
          <li><a href="/user/deployment/bintray/">bintray</a></li>
        
          <li><a href="/user/deployment/bitballoon/">BitBalloon</a></li>
        
          <li><a href="/user/deployment/bluemixcloudfoundry/">Bluemix CloudFoundry</a></li>
        
          <li><a href="/user/deployment/boxfuse/">Boxfuse</a></li>
        
          <li><a href="/user/deployment/catalyze/">Catalyze</a></li>
        
          <li><a href="/user/deployment/chefsupermarket/">Chef Supermarket</a></li>
        
          <li><a href="/user/deployment/cloud66/">Cloud 66</a></li>
        
          <li><a href="/user/deployment/cloudfoundry/">CloudFoundry</a></li>
        
          <li><a href="/user/deployment/cargo/">Cargo</a></li>
        
          <li><a href="/user/deployment/engineyard/">Engine Yard</a></li>
        
          <li><a href="/user/deployment/pages/">GitHub Pages</a></li>
        
          <li><a href="/user/deployment/releases/">GitHub Releases</a></li>
        
          <li><a href="/user/deployment/google-app-engine/">Google App Engine</a></li>
        
          <li><a href="/user/deployment/gcs/">Google Cloud Storage</a></li>
        
          <li><a href="/user/deployment/firebase/">Google Firebase</a></li>
        
          <li><a href="/user/deployment/hackage/">Hackage</a></li>
        
          <li><a href="/user/deployment/hephy/">Hephy</a></li>
        
          <li><a href="/user/deployment/heroku/">Heroku</a></li>
        
          <li><a href="/user/deployment/launchpad/">Launchpad</a></li>
        
          <li><a href="/user/deployment/npm/">npm</a></li>
        
          <li><a href="/user/deployment/openshift/">OpenShift</a></li>
        
          <li><a href="/user/deployment/packagecloud/">packagecloud.io</a></li>
        
          <li><a href="/user/deployment/puppetforge/">Puppet Forge</a></li>
        
          <li><a href="/user/deployment/pypi/">PyPI</a></li>
        
          <li><a href="/user/deployment/cloudfiles/">Rackspace Cloud Files</a></li>
        
          <li><a href="/user/deployment/rubygems/">RubyGems</a></li>
        
          <li><a href="/user/deployment/scalingo/">Scalingo</a></li>
        
          <li><a href="/user/deployment/script/">Script</a></li>
        
          <li><a href="/user/deployment/snaps/">Snap Store</a></li>
        
          <li><a href="/user/deployment/surge/">Surge.sh</a></li>
        
          <li><a href="/user/deployment/testfairy/">TestFairy</a></li>
        
          <li><a href="/user/deployment/transifex/">Transifex</a></li>
        
        <li><a href="/user/uploading-artifacts/">Uploading Build Artifacts</a></li>
      </ul>

      <h3>CI Environment Reference</h3>
      <ul>
        <li class="is-overview"><a href="/user/reference/overview/">Overview</a></li>
        <li><a href="/user/reference/linux/">Ubuntu Linux CI Environment References</a></li>
        <li><a href="/user/reference/osx/">macOS CI Environment Reference</a></li>
        <li><a href="/user/reference/windows/">Windows CI Environment Reference</a></li>
        <li><a href="/user/reference/freebsd/">FreeBSD CI Environment Reference</a></li>
        <li><a href="/user/multi-os/">Building on Multiple Operating Systems</a></li>
        <li><a href="/user/multi-cpu-architectures/">Building on Multiple CPU Architectures</a></li>
        <li><a href="/user/environment-variables/">Environment Variables</a></li>
        <li><a href="/user/build-environment-updates/">Build Environment Updates</a></li>
        <li><a href="/user/ip-addresses/">Build Machines IP Addresses</a></li>
      </ul>

      <h3>Security and Secure Software Supply Chain</h3>
      <ul>
        <li><a href="/user/encryption-keys/">Encrypting Sensitive Data</a></li>
        <li><a href="/user/encrypting-files/">Encrypting Files</a></li>
        <li><a href="/user/github-oauth-scopes/">GitHub Permissions used by Travis CI</a></li>
        <li><a href="/user/bb-oauth-scopes/">Bitbucket Permissions used by Travis CI</a></li>
        <li><a href="/user/assembla-oauth-scopes/">Assembla Permissions used by Travis CI</a></li>
        <li><a href="/user/gl-oauth-scopes/">GitLab Permissions used by Travis CI</a></li>
        <li><a href="/user/disable-job-logs/">Disable Job Logs Availability</a></li>
        <li><a href="/user/best-practices-security/">Best Practices in Securing Your Data</a></li>
        <li><a href="/user/securely-signing-software">Securely Signing Software</a></li>
        <li><a href="/user/sbom">Software Bill of Materials</a></li>
      </ul>

      <h3>Integrations and Notifications</h3>
      <ul>
        <li><a href="/user/notifications/">Configuring Notifications</a></li>
        <li><a href="/user/status-images/">Showing Build Status Images</a></li>
        <li><a href="/user/code-climate/">Code Climate</a></li>
        <li><a href="/user/deepsource/">DeepSource</a></li>
        <li><a href="/user/coveralls/">Coveralls</a></li>
        <li><a href="/user/coverity-scan/">Coverity Scan</a></li>
        <li><a href="/user/browserstack/">BrowserStack</a></li>
        <li><a href="/user/sauce-connect/">Sauce Labs</a></li>
        <li><a href="/user/sonarcloud/">SonarCloud</a></li>
        <li><a href="/user/sourceclear/">SourceClear</a></li>
        <li><a href="/user/build-feeds/">Atom Feeds</a></li>
        <li><a href="/user/cc-menu/">CCMenu / CCTray Feeds</a></li>
        <li><a href="/user/integration/platformio/">Embedded Builds with PlatformIO</a></li>
        <li><a href="/user/hashicorp-vault-integration">Hashicorp Vault</a></li>
        <li><a href="/user/apps/">3rd Party Apps, Clients and Tools</a></li>
      </ul>

      <h3>Developer Program</h3>
      <ul>
        <li class="is-overview"><a href="/user/developer/">Overview</a></li>
        <li><a href="https://developer.travis-ci.com/">API V3</a></li>
        <li><a href="/user/triggering-builds/">Triggering Builds with API V3</a></li>
        <li><a href="https://github.com/travis-ci/travis#ruby-library">The Ruby Library</a></li>
      </ul>
      
      <h3>Hosted Billing</h3>
      <ul>
        <li class="is-overview"><a href="/user/billing-overview/">Overview</a></li>
        <li><a href="/user/billing-autorefill/">Auto-refill</a></li>
        <li><a href="/user/billing-faq/">FAQ</a></li>
      </ul>

      <h3>Travis CI Enterprise</h3>
      <ul>
        <li><a href="/user/enterprise/">Enterprise Docs</a></li>
      </ul>

    </nav>
  </section>

  <section class="sidebar-notice">
    <p>This documentation site is Open Source.
      The <a href="https://github.com/travis-ci/docs-travis-ci-com">README in our Git repository</a> explains how to contribute.</p>
    <p>Travis CI relies on Open Source <a href="/user/open_source_license/">licensing information</a>.</p>
  </section>

</div><!-- /#sidebar -->


        <main id="main" class="main" data-swiftype-index='true'>
          
            <aside class="improve-page" data-swiftype-index='false'><a href="https://github.com/travis-ci/docs-travis-ci-com/edit/master/user/build-config-imports.md" target="_blank" title="Edit this page on GitHub" class="button-pen" data-proofer-ignore>Improve this page on GitHub</a></aside>
            <h1 class="title">Importing Shared Build Configuration</h1>
          

          


          
            <div id="toc" class="toc">
              <ul class="list-language">
  <li><a href="#opt-in">Opt-in</a></li>
  <li><a href="#example">Example</a></li>
  <li><a href="#import-sources">Import sources</a></li>
  <li><a href="#importing-configs-from-the-same-repository">Importing configs from the same repository</a></li>
  <li><a href="#importing-specific-versions-of-configs">Importing specific versions of configs</a></li>
  <li><a href="#importing-configs-from-private-repositories">Importing configs from private repositories</a></li>
  <li><a href="#sharing-encrypted-secrets">Sharing encrypted secrets</a></li>
  <li><a href="#conditional-imports">Conditional imports</a></li>
  <li><a href="#merge-modes">Merge modes</a></li>
  <li><a href="#import-precedence">Import precedence</a></li>
  <li><a href="#faq">FAQ</a></li>
</ul>

            </div>
          

          <p>The main source of configuration for your build is the <code class="highlighter-rouge">.travis.yml</code> file
stored in your repository. You can import shared configuration snippets into
your <code class="highlighter-rouge">.travis.yml</code> or <a href="https://docs.travis-ci.com/user/triggering-builds/">API build request payload</a>,
to update your build configuration in multiple repositories making only one
change.</p>

<p>Imported configs can themselves include other configs, making this feature very
composable (cyclic imports will be skipped). You can import up to 25 build
configuration snippets in total.</p>

<blockquote class="beta">
  <p>BETA The feature Build Config Imports is currently in beta. Please leave feedback on the <a href="https://travis-ci.community/c/early-releases">Community forum</a>.</p>
</blockquote>

<h2 id="opt-in">Opt-in <a href="#opt-in" class="toc-anchor">#</a></h2>

<p>In order for this feature to be active you have to enable the feature
<a href="/user/build-config-validation">Build Config Validation</a> which will be rolled
out to all users in the near future.</p>

<p>You can enable Build Config Validation in your repository’s settings, or by
adding <code class="highlighter-rouge">version: ~&gt; 1.0</code> to your <code class="highlighter-rouge">.travis.yml</code> file.</p>

<h2 id="example">Example <a href="#example" class="toc-anchor">#</a></h2>

<p>Instead of specifying which versions of Ruby to test against in multiple files
across many repositories, you can define them in a shared snippet:</p>

<div data-file="rubies.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">rvm</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="m">2.5</span>
  <span class="pi">-</span> <span class="m">2.6</span>
</code></pre></div></div>

<p>You can then <code class="highlighter-rouge">import</code> that snippet into your <code class="highlighter-rouge">.travis.yml</code>. The following
configuration imports the file <code class="highlighter-rouge">rubies.yml</code> from the <code class="highlighter-rouge">main</code> branch of the
<code class="highlighter-rouge">shared-configs</code> repository of the <code class="highlighter-rouge">travis-ci</code> account:</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">import</span><span class="pi">:</span> <span class="s">travis-ci/shared-configs:rubies.yml@main</span>
<span class="na">script</span><span class="pi">:</span> <span class="s">bundle exec rake</span>
</code></pre></div></div>

<p>Resulting in the following configuration:</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">rvm</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="m">2.5</span>
  <span class="pi">-</span> <span class="m">2.6</span>
<span class="na">script</span><span class="pi">:</span> <span class="s">bundle exec rake</span>
</code></pre></div></div>

<h2 id="import-sources">Import sources <a href="#import-sources" class="toc-anchor">#</a></h2>

<p>The format of the <code class="highlighter-rouge">import</code> source is <code class="highlighter-rouge">&lt;account&gt;/&lt;repository&gt;:&lt;path&gt;@&lt;ref&gt;</code> in
which <code class="highlighter-rouge">&lt;ref&gt;</code> can be any valid Git reference, such as a commit sha, branch name,
or tag name.</p>

<blockquote>
  <p>Public repositories can import sources from public repositories, but not
private repositories. Private repositories can import sources from both
public and private repositories. See <a href="#importing-configs-from-private-repositories">private repositories</a>
for more information.</p>
</blockquote>

<p>Import a single source:</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">import</span><span class="pi">:</span> <span class="s">travis-ci/build-configs:rubies.yml@main</span>

<span class="c1"># or</span>

<span class="na">import</span><span class="pi">:</span>
  <span class="na">source</span><span class="pi">:</span> <span class="s">travis-ci/build-configs:rubies.yml@main</span>
</code></pre></div></div>

<p>Import multiple sources:</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">import</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">travis-ci/build-configs:rubies.yml@adf1235</span>
  <span class="pi">-</span> <span class="s">travis-ci/build-configs:other.yml@v1</span>

<span class="c1"># or</span>

<span class="na">import</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">source</span><span class="pi">:</span> <span class="s">travis-ci/build-configs:rubies.yml@adf1235</span>
  <span class="pi">-</span> <span class="na">source</span><span class="pi">:</span> <span class="s">travis-ci/build-configs:other.yml@v1</span>
</code></pre></div></div>

<p>By default, the merge mode <code class="highlighter-rouge">deep_merge_append</code> is used to combine keys that are
present in the importing and an imported config, or in multiple imported configs.
You can customize this by specifying the merge mode used for each import.
See below for more information on <a href="#merge-modes">merge modes</a>.</p>

<h2 id="importing-configs-from-the-same-repository">Importing configs from the same repository <a href="#importing-configs-from-the-same-repository" class="toc-anchor">#</a></h2>

<p>When importing configurations stored in the same repository as your
<code class="highlighter-rouge">travis.yml</code>, you can omit the <code class="highlighter-rouge">&lt;account&gt;/&lt;repository&gt;</code> part:</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># local imports fetch the same git commit ref</span>
<span class="na">import</span><span class="pi">:</span>
<span class="pi">-</span> <span class="s">one.yml</span>
<span class="pi">-</span> <span class="s">path/to/other.yml</span>
</code></pre></div></div>

<p>The path is relative to the repository’s root.</p>

<h2 id="importing-specific-versions-of-configs">Importing specific versions of configs <a href="#importing-specific-versions-of-configs" class="toc-anchor">#</a></h2>

<p>For configurations imported from a different repository the latest version of
the default branch in the repository will be used by default.</p>

<p>For configurations imported from the same repository the commit you are
currently building will be used by default. This is intended to help while you
are creating and testing the shared configurations.</p>

<p>You can specify the exact version of a config snippet by using any valid Git
reference:</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">import</span><span class="pi">:</span>
<span class="pi">-</span> <span class="s">one.yml@production</span>
<span class="pi">-</span> <span class="s">travis-ci/build-configs/other.yml@v1.0.0</span>
</code></pre></div></div>

<h2 id="importing-configs-from-private-repositories">Importing configs from private repositories <a href="#importing-configs-from-private-repositories" class="toc-anchor">#</a></h2>

<p>In order to share configurations <strong>from</strong> a private repository this needs to
be allowed on that repository, by enabling the <em>Allow importing config files from this repository</em>
setting in <code class="highlighter-rouge">More options &gt; Settings &gt; Config Import</code>.</p>

<blockquote>
  <p>Only private repositories owned by the same organization or user account will
be able to import configuration snippets from private repositories. Configs
from private repositories cannot be imported to configs from public
repositories.</p>
</blockquote>

<h2 id="sharing-encrypted-secrets">Sharing encrypted secrets <a href="#sharing-encrypted-secrets" class="toc-anchor">#</a></h2>

<p>Encrypted secrets contained in imported config snippets can be shared and
decrypted with repositories owned by the same organization or user account.</p>

<p>Configs from public repositories can be imported to configs from other
public repositories owned by a different organization or user account, but
encrypted secrets contained in those imported configs won’t be accessible.</p>

<h2 id="conditional-imports">Conditional imports <a href="#conditional-imports" class="toc-anchor">#</a></h2>

<p>Config imports can carry a condition that specifies under which circumstances
the imported config is supposed to be included.</p>

<p>For example, with this config the local file <code class="highlighter-rouge">.travis/master.yml</code> will be
imported for builds on the <code class="highlighter-rouge">master</code> branch, while <code class="highlighter-rouge">.travis/other.yml</code> will be
imported for all other builds.</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">import</span><span class="pi">:</span>
<span class="pi">-</span> <span class="na">source</span><span class="pi">:</span> <span class="s">.travis/master.yml</span>
  <span class="na">if</span><span class="pi">:</span> <span class="s">branch = master</span>
<span class="pi">-</span> <span class="na">source</span><span class="pi">:</span> <span class="s">.travis/other.yml</span>
  <span class="na">if</span><span class="pi">:</span> <span class="s">branch != master</span>
</code></pre></div></div>

<p>Please see <a href="/user/conditions-v1">Conditions</a> for a full specification of the
conditions syntax.</p>

<h2 id="merge-modes">Merge modes <a href="#merge-modes" class="toc-anchor">#</a></h2>

<p>The merge mode controls how imported configs are being merged (combined) into
the importing config. A different merge mode can be specified for each imported
config source.</p>

<p>There are these merge modes:</p>

<ul>
  <li><code class="highlighter-rouge">deep_merge_append</code> (default)</li>
  <li><code class="highlighter-rouge">deep_merge_prepend</code></li>
  <li><code class="highlighter-rouge">deep_merge</code></li>
  <li><code class="highlighter-rouge">merge</code></li>
</ul>

<p>The default merge mode is <code class="highlighter-rouge">deep_merge_append</code>.</p>

<h3 id="deep-merge-appendprepend">Deep merge append/prepend <a href="#deep-merge-appendprepend" class="toc-anchor">#</a></h3>

<p>The merge modes <code class="highlighter-rouge">deep_merge_append</code> and <code class="highlighter-rouge">deep_merge_prepend</code> recursively merge
sections (keys) that hold maps (hashes), and concatenates sequences (arrays) by
either appending or prepending to the sequence in the importing config.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">import</span><span class="pi">:</span>
<span class="pi">-</span> <span class="na">source</span><span class="pi">:</span> <span class="s">one.yml</span>
  <span class="na">mode</span><span class="pi">:</span> <span class="s">deep_merge_append</span>
<span class="pi">-</span> <span class="na">source</span><span class="pi">:</span> <span class="s">other.yml</span>
  <span class="na">mode</span><span class="pi">:</span> <span class="s">deep_merge_prepend</span>
</code></pre></div></div>

<h3 id="deep-merge">Deep merge <a href="#deep-merge" class="toc-anchor">#</a></h3>

<p>The merge mode <code class="highlighter-rouge">deep_merge</code> recursively merges sections (keys) that hold maps (hashes),
but overwrites sequences (arrays).</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">import</span><span class="pi">:</span>
<span class="pi">-</span> <span class="na">source</span><span class="pi">:</span> <span class="s">one.yml</span>
  <span class="na">mode</span><span class="pi">:</span> <span class="s">deep_merge</span> <span class="c1"># deep merge</span>
</code></pre></div></div>

<p>This mode first merges your <code class="highlighter-rouge">.travis.yml</code> contents into the <code class="highlighter-rouge">one.yml</code> file (i.e., items in the .travis.yml file “win”, if the merge mode deep_merge would be used and will overwrite keys on respective levels in <code class="highlighter-rouge">one.yml</code>).</p>

<p>Respectively:</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">import</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">source</span><span class="pi">:</span> <span class="s">one.yml</span>
  <span class="na">mode</span><span class="pi">:</span> <span class="s">deep_merge</span> <span class="c1"># deep merge</span>
  <span class="pi">-</span> <span class="na">source</span><span class="pi">:</span> <span class="s">two.yml</span>
  <span class="na">mode</span><span class="pi">:</span> <span class="s">deep_merge</span> <span class="c1"># deep merge</span>
</code></pre></div></div>

<p>This mode first merges your <code class="highlighter-rouge">.travis.yml</code> contents into the <code class="highlighter-rouge">one.yml</code> file (overwriting, 
if required, sections in <code class="highlighter-rouge">one.yml</code> with content from <code class="highlighter-rouge">.travis.yml</code>). The results are 
merged into the <code class="highlighter-rouge">two.yml</code> file (again, items in the result of the previous merge win 
over what’s in this one, as the <code class="highlighter-rouge">deep_merge</code> mode is specified here).</p>

<p>The reasoning behind this is that in many cases when you import something to your 
<code class="highlighter-rouge">.travis.yml</code> file, you want to be able to overwrite or customize that imported 
configuration with config in your <code class="highlighter-rouge">.travis.yml</code> file.</p>

<h3 id="merge">Merge <a href="#merge" class="toc-anchor">#</a></h3>

<p>The merge mode <code class="highlighter-rouge">merge</code> performs a shallow merge.</p>

<p>This means that root level sections (keys) defined in your <code class="highlighter-rouge">.travis.yml</code> will
overwrite root level sections (keys) that are also present in the imported
file.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">import</span><span class="pi">:</span>
<span class="pi">-</span> <span class="na">source</span><span class="pi">:</span> <span class="s">one.yml</span>
  <span class="na">mode</span><span class="pi">:</span> <span class="s">merge</span> <span class="c1"># shallow merge</span>
</code></pre></div></div>

<h2 id="import-precedence">Import precedence <a href="#import-precedence" class="toc-anchor">#</a></h2>

<p>When triggering a build through the Travis API or the web UI, the order of ascending precedence is:</p>

<ul>
  <li>Config from the API build request payload, if given</li>
  <li>Imported configs from the API build request payload, if given, in the order listed (following a depth-first search pattern in case those imported configs import other configs)</li>
  <li>Config from <code class="highlighter-rouge">.travis.yml</code></li>
  <li>Imported configs from <code class="highlighter-rouge">.travis.yml</code>, in the order listed (following a depth-first search pattern in case those imported configs import other configs).</li>
</ul>

<h2 id="faq">FAQ <a href="#faq" class="toc-anchor">#</a></h2>

<h3 id="can-i-import-a-shared-build-config-at-a-specific-job-level">Can I import a shared build config at a specific job level? <a href="#can-i-import-a-shared-build-config-at-a-specific-job-level" class="toc-anchor">#</a></h3>

<p>No. The parsed YAML trees must be merged. Thus, the <code class="highlighter-rouge">import</code> keyword is accepted only at the root level. If it suits your scenario, you can specify your job template in, e.g., <code class="highlighter-rouge">job.yml</code> and import it into your <code class="highlighter-rouge">.travis.yml</code> with the <code class="highlighter-rouge">mode: deep_merge</code>, adding in the <code class="highlighter-rouge">.travis,yml</code> specifics to be overridden in the imported template.</p>

<h3 id="is-it-possible-to-create-and-use-anchors-via-the-shared-configs-mechanism">Is it possible to create and use anchors via the shared configs mechanism? <a href="#is-it-possible-to-create-and-use-anchors-via-the-shared-configs-mechanism" class="toc-anchor">#</a></h3>

<p>Unfortunately, it’s not supported. 
As much as we encourage <a href="/user/build-config-yaml">using YAML as a build configuration language</a>, anchors and aliases, referring to these anchors must be defined and used within a single <code class="highlighter-rouge">.yml</code> file and will be expanded before any <em>import</em> action (merging parse trees) occurs. For the same reason, attempts to assign an anchor within <code class="highlighter-rouge">.travis.yml</code> to an <em>imported</em> key will not work — both <code class="highlighter-rouge">.travis.yml</code> and <code class="highlighter-rouge">imported.yml</code> must be parsed before the merge action can occur.</p>

<p>See also  <em>native-api</em> concise <a href="https://travis-ci.community/t/imported-anchors-not-working/10035/2">explanation in the Community Forum</a></p>


        </main>
      </div><!-- /#content -->

      <footer class="footer">
  <div class="layout-inner">
    <div class="footer-elem">
      <svg width="142px" height="45.381px" viewBox="0 0 142 45.381" enable-background="new 0 0 142 45.381" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink= "http://www.w3.org/1999/xlink">
        <title>Travis CI Mascot</title>
        <image xlink:href="https://styleguide.travis-ci.com/images/logos/travis-footer-logo-new.svg" x="0" y="0" width="142px" height="45.381px" />
      </svg>
    </div>

    <div class="footer-elem"></div>

    <div class="footer-elem">
      <h3 class="footer-title">©Travis CI, GmbH</h3>
      <address>Rigaer Straße 8<br>10247 Berlin, Germany</address>
      <ul>
        <li><a href="https://travisci.workable.com/" title="Jobs at Travis CI">Work with Travis CI</a></li>
      </ul>
    </div>

    <div class="footer-elem">
      <h3 class="footer-title">Help</h3>
      <ul>
        <li><a href="https://docs.travis-ci.com" title="Travis CI Docs">Documentation</a></li>
        <li><a href="https://changelog.travis-ci.com/">Changelog</a></li>
        <li><a href="https://blog.travis-ci.com/" title="Travis CI Blog">Blog</a></li>
        <li><a href="mailto:support@travis-ci.com" title="Email Travis CI support">Email</a></li>
        <li><a href="https://twitter.com/travisci" title="Travis CI on Twitter">Twitter</a></li>
      </ul>
    </div>

    <div class="footer-elem">
      <h3 class="footer-title">Company</h3>
      <ul>
        <li><a href="/imprint.html" title="Imprint">Imprint</a></li>
        <li><a href="https://ideracorp.com/legal/TravisCI">Legal</a></li>
      </ul>
    </div>

    <div class="footer-elem">
      <h3 class="footer-title">Travis CI Status</h3>
      <ul>
        <li><div class="status-circle none">Status:</div>
          <a href="http://www.traviscistatus.com/">Travis CI Status</a>
        </li>
      </ul>
    </div>
  </div>
</footer>

<script>
 fetch('https://pnpcptp8xh9k.statuspage.io/api/v2/status.json').then(function(response) {
   return response.json();
 }).then(function(data) {
   if (data.status && data.status.indicator) {
     document.querySelector('.status-circle').classList.add(data.status.indicator);
   }
 });
</script>

    </div><!-- /.wrapper -->
  </body>
</html>
 contentType 9 text/html url 57 https://docs.travis-ci.com:443/user/build-config-imports/ responseCode 3 200 