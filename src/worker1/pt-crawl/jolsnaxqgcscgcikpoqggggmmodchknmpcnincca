jolsnaxqgcscgcikpoqggggmmodchknmpcnincca length 5 44987 page 44987 <!DOCTYPE HTML>
<html lang="en">
  <head>
<!-- PDTQ-131 -->
<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-N3RT7TD');</script>
<!-- End Google Tag Manager -->
    
    <meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>GUI and Headless Browser Testing - Travis CI</title>
<link rel="stylesheet" href="/assets/stylesheets/main.css">
<link rel="alternate" type="application/rss+xml" title="Travis CI Build Environment Updates" href="https://docs.travis-ci.com/feed.build-env-updates.xml">
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js" defer></script>

<script src="/assets/javascripts/main.js" type="text/javascript" charset="utf-8" defer></script>
<script src="/assets/javascripts/prism.js" type="text/javascript" charset="utf-8" defer></script>
<meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="@travisci" />
<meta name="twitter:creator" content="@travisci" />
<meta property="og:title" content="Travis CI Documentation" />
<meta property="og:type" content="website" />
<meta property="og:url" content=/user/gui-and-headless-browsers/ />
<meta property="og:description" content="GUI and Headless Browser Testing" />
<meta property="og:image" content="/images/TravisCI-Full-Color.png" }} />
<meta property="og:image:type" content="image/png" />
<meta property="og:image:width" content="642" />
<meta property="og:image:height" content="201" />
<meta property="og:image:alt" content="Travis CI logo" />


 

  </head>
  <body>
<!-- PDTQ-131 -->
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-N3RT7TD"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

    <div class="wrapper">

      <header class="top">
  <div class="row topbar">
    <h1 id="logo" class="logo">
  <a href="https://travis-ci.com/" title="Travis CI">Travis</a>
</h1>

    <nav>
      <ul id="navigation" class="navigation">
        <li><a href="https://blog.travis-ci.com">Blog</a></li>
        <li><a href="/">Docs</a></li>
        <li class="toggle"><button type="button" id="toggle-menu" class="button--teal">Menu</button></li>
      </ul>
    </nav>
  </div>
</header>


      <div id="content" class="row">

        <div id="sidebar" class="sidebar">
  <div>
    <!-- <h2>Search</h2> -->
    <div class="searchbox">
      <form>
        <input type="text" id="st-search-input" class="searchbox-input" placeholder="Search the docs" />
      </form>
      <script type="text/javascript">
      var Swiftype = window.Swiftype || {};
        (function() {
          Swiftype.key = 'tXvDDzd4fNTBnLvxfEyx';

          Swiftype.searchSearchFields = {
            "page": ["title, body, tags"]
          };
          Swiftype.autocompleteSearchFields = {
            "page": ["title, body, tags"]
          };
          /** DO NOT EDIT BELOW THIS LINE **/
          var script = document.createElement('script'); script.type = 'text/javascript'; script.async = true;
          script.src = "//swiftype.com/embed.js";
          var entry = document.getElementsByTagName('script')[0];
          document.getElementsByTagName('script')[0].parentNode.insertBefore(script, entry);
        }());
      </script>
    </div>
  </div>

  <section class="sidebar-navigation">
    <nav>
      <h3>Getting Started</h3>
      <ul>
        <li><a href="/user/for-beginners/">Core Concepts for Beginners</a></li>
        <li><a href="/user/tutorial/">Travis CI Tutorial</a></li>
        <li><a href="/user/customizing-the-build/">Customizing the Build</a></li>
        <li><a href="/user/speeding-up-the-build/">Speeding up the Build</a></li>
        <li><a href="/user/docker/">Using Docker in your Build</a></li>
        <li><a href="/user/gui-and-headless-browsers/">Headless Testing with Browsers</a></li>
        <li><a href="/user/pull-requests/">Building Pull Requests</a></li>
        <li><a href="/user/cron-jobs/">Cron Jobs</a></li>
        <li><a href="/user/common-build-problems/">Common Build Problems</a></li>
        <li><a href="https://github.com/travis-ci/travis#readme">Command Line Client</a></li>
        <li><a href="/user/build-config-imports/">Build Config Imports</a></li>
        <li><a href="/user/build-config-validation/">Build Config Validation</a></li>
      </ul>

      <h3>Jobs, Builds, Matrices and Stages</h3>
      <ul>
        <li><a href="/user/job-lifecycle/">Job Lifecycle</a></li>
        <li><a href="/user/build-matrix/">Build Matrix</a></li>
        <li><a href="/user/build-stages/">Build Stages</a></li>
        <li><a href="/user/conditional-builds-stages-jobs/">Conditional Builds, Stages, and Jobs</a></li>
      </ul>

      <h3>Installing Dependencies</h3>
      <ul>
        <li><a href="/user/installing-dependencies/">Installing Dependencies</a></li>
        <li><a href="/user/private-dependencies/">Private Dependencies GitHub</a></li>
        <li><a href="/user/private-dependencies-bb/">Private Dependencies Bitbucket</a></li>
        <li><a href="/user/database-setup/">Setting up Services and Databases</a></li>
        <li><a href="/user/caching/">Caching Dependencies</a></li>
        <li><a href="/user/using-workspaces/">Caching Dependencies within a Build (Workspaces)</a></li>
        <li><a href="/user/ssh-known-hosts/">Adding to SSH Known Hosts</a></li>
      </ul>

      <h3>Programming Languages</h3>
      <ul>
      
        <li><a href="/user/languages/android/">Android</a></li>
      
        <li><a href="/user/languages/c/">C</a></li>
      
        <li><a href="/user/languages/csharp/">C#</a></li>
      
        <li><a href="/user/languages/cpp/">C++</a></li>
      
        <li><a href="/user/languages/clojure/">Clojure</a></li>
      
        <li><a href="/user/languages/crystal/">Crystal</a></li>
      
        <li><a href="/user/languages/d/">D</a></li>
      
        <li><a href="/user/languages/dart/">Dart</a></li>
      
        <li><a href="/user/languages/elixir/">Elixir</a></li>
      
        <li><a href="/user/languages/elm/">Elm</a></li>
      
        <li><a href="/user/languages/erlang/">Erlang</a></li>
      
        <li><a href="/user/languages/csharp/">F#</a></li>
      
        <li><a href="/user/languages/minimal-and-generic/">Generic</a></li>
      
        <li><a href="/user/languages/go/">Go</a></li>
      
        <li><a href="/user/languages/groovy/">Groovy</a></li>
      
        <li><a href="/user/languages/haskell/">Haskell</a></li>
      
        <li><a href="/user/languages/haxe/">Haxe</a></li>
      
        <li><a href="/user/languages/java/">Java</a></li>
      
        <li><a href="/user/languages/javascript-with-nodejs/">JavaScript <small>(with Node.js)</small></a></li>
      
        <li><a href="/user/languages/julia/">Julia</a></li>
      
        <li><a href="/user/languages/matlab/">MATLAB</a></li>
      
        <li><a href="/user/languages/minimal-and-generic/">Minimal</a></li>
      
        <li><a href="/user/languages/nix/">Nix</a></li>
      
        <li><a href="/user/languages/objective-c/">Objective-C</a></li>
      
        <li><a href="/user/languages/perl/">Perl</a></li>
      
        <li><a href="/user/languages/perl6/">Perl6</a></li>
      
        <li><a href="/user/languages/php/">PHP</a></li>
      
        <li><a href="/user/languages/python/">Python</a></li>
      
        <li><a href="/user/languages/r/">R</a></li>
      
        <li><a href="/user/languages/ruby/">Ruby</a></li>
      
        <li><a href="/user/languages/rust/">Rust</a></li>
      
        <li><a href="/user/languages/scala/">Scala</a></li>
      
        <li><a href="/user/languages/smalltalk/">Smalltalk</a></li>
      
        <li><a href="/user/languages/objective-c/">Swift</a></li>
      
        <li><a href="/user/languages/csharp/">Visual Basic</a></li>
      
        <li><a href="/user/languages/community-supported-languages/">Adding a language</a></li>
      </ul>

      <h3>Deployments and Uploads</h3>
      <ul>
        
          <li class="is-overview"><a href="/user/deployment/">Overview</a></li>
          
        
        
          <li><a href="/user/deployment/anynines/">anynines</a></li>
        
          <li><a href="/user/deployment/atlas/">Atlas</a></li>
        
          <li><a href="/user/deployment/codedeploy/">AWS CodeDeploy</a></li>
        
          <li><a href="/user/deployment/elasticbeanstalk/">AWS Elastic Beanstalk</a></li>
        
          <li><a href="/user/deployment/lambda/">AWS Lambda</a></li>
        
          <li><a href="/user/deployment/opsworks/">AWS OpsWorks</a></li>
        
          <li><a href="/user/deployment/s3/">AWS S3</a></li>
        
          <li><a href="/user/deployment/azure-web-apps/">Azure Web Apps</a></li>
        
          <li><a href="/user/deployment/bintray/">bintray</a></li>
        
          <li><a href="/user/deployment/bitballoon/">BitBalloon</a></li>
        
          <li><a href="/user/deployment/bluemixcloudfoundry/">Bluemix CloudFoundry</a></li>
        
          <li><a href="/user/deployment/boxfuse/">Boxfuse</a></li>
        
          <li><a href="/user/deployment/catalyze/">Catalyze</a></li>
        
          <li><a href="/user/deployment/chefsupermarket/">Chef Supermarket</a></li>
        
          <li><a href="/user/deployment/cloud66/">Cloud 66</a></li>
        
          <li><a href="/user/deployment/cloudfoundry/">CloudFoundry</a></li>
        
          <li><a href="/user/deployment/cargo/">Cargo</a></li>
        
          <li><a href="/user/deployment/engineyard/">Engine Yard</a></li>
        
          <li><a href="/user/deployment/pages/">GitHub Pages</a></li>
        
          <li><a href="/user/deployment/releases/">GitHub Releases</a></li>
        
          <li><a href="/user/deployment/google-app-engine/">Google App Engine</a></li>
        
          <li><a href="/user/deployment/gcs/">Google Cloud Storage</a></li>
        
          <li><a href="/user/deployment/firebase/">Google Firebase</a></li>
        
          <li><a href="/user/deployment/hackage/">Hackage</a></li>
        
          <li><a href="/user/deployment/hephy/">Hephy</a></li>
        
          <li><a href="/user/deployment/heroku/">Heroku</a></li>
        
          <li><a href="/user/deployment/launchpad/">Launchpad</a></li>
        
          <li><a href="/user/deployment/npm/">npm</a></li>
        
          <li><a href="/user/deployment/openshift/">OpenShift</a></li>
        
          <li><a href="/user/deployment/packagecloud/">packagecloud.io</a></li>
        
          <li><a href="/user/deployment/puppetforge/">Puppet Forge</a></li>
        
          <li><a href="/user/deployment/pypi/">PyPI</a></li>
        
          <li><a href="/user/deployment/cloudfiles/">Rackspace Cloud Files</a></li>
        
          <li><a href="/user/deployment/rubygems/">RubyGems</a></li>
        
          <li><a href="/user/deployment/scalingo/">Scalingo</a></li>
        
          <li><a href="/user/deployment/script/">Script</a></li>
        
          <li><a href="/user/deployment/snaps/">Snap Store</a></li>
        
          <li><a href="/user/deployment/surge/">Surge.sh</a></li>
        
          <li><a href="/user/deployment/testfairy/">TestFairy</a></li>
        
          <li><a href="/user/deployment/transifex/">Transifex</a></li>
        
        <li><a href="/user/uploading-artifacts/">Uploading Build Artifacts</a></li>
      </ul>

      <h3>CI Environment Reference</h3>
      <ul>
        <li class="is-overview"><a href="/user/reference/overview/">Overview</a></li>
        <li><a href="/user/reference/linux/">Ubuntu Linux CI Environment References</a></li>
        <li><a href="/user/reference/osx/">macOS CI Environment Reference</a></li>
        <li><a href="/user/reference/windows/">Windows CI Environment Reference</a></li>
        <li><a href="/user/reference/freebsd/">FreeBSD CI Environment Reference</a></li>
        <li><a href="/user/multi-os/">Building on Multiple Operating Systems</a></li>
        <li><a href="/user/multi-cpu-architectures/">Building on Multiple CPU Architectures</a></li>
        <li><a href="/user/environment-variables/">Environment Variables</a></li>
        <li><a href="/user/build-environment-updates/">Build Environment Updates</a></li>
        <li><a href="/user/ip-addresses/">Build Machines IP Addresses</a></li>
      </ul>

      <h3>Security and Secure Software Supply Chain</h3>
      <ul>
        <li><a href="/user/encryption-keys/">Encrypting Sensitive Data</a></li>
        <li><a href="/user/encrypting-files/">Encrypting Files</a></li>
        <li><a href="/user/github-oauth-scopes/">GitHub Permissions used by Travis CI</a></li>
        <li><a href="/user/bb-oauth-scopes/">Bitbucket Permissions used by Travis CI</a></li>
        <li><a href="/user/assembla-oauth-scopes/">Assembla Permissions used by Travis CI</a></li>
        <li><a href="/user/gl-oauth-scopes/">GitLab Permissions used by Travis CI</a></li>
        <li><a href="/user/disable-job-logs/">Disable Job Logs Availability</a></li>
        <li><a href="/user/best-practices-security/">Best Practices in Securing Your Data</a></li>
        <li><a href="/user/securely-signing-software">Securely Signing Software</a></li>
        <li><a href="/user/sbom">Software Bill of Materials</a></li>
      </ul>

      <h3>Integrations and Notifications</h3>
      <ul>
        <li><a href="/user/notifications/">Configuring Notifications</a></li>
        <li><a href="/user/status-images/">Showing Build Status Images</a></li>
        <li><a href="/user/code-climate/">Code Climate</a></li>
        <li><a href="/user/deepsource/">DeepSource</a></li>
        <li><a href="/user/coveralls/">Coveralls</a></li>
        <li><a href="/user/coverity-scan/">Coverity Scan</a></li>
        <li><a href="/user/browserstack/">BrowserStack</a></li>
        <li><a href="/user/sauce-connect/">Sauce Labs</a></li>
        <li><a href="/user/sonarcloud/">SonarCloud</a></li>
        <li><a href="/user/sourceclear/">SourceClear</a></li>
        <li><a href="/user/build-feeds/">Atom Feeds</a></li>
        <li><a href="/user/cc-menu/">CCMenu / CCTray Feeds</a></li>
        <li><a href="/user/integration/platformio/">Embedded Builds with PlatformIO</a></li>
        <li><a href="/user/hashicorp-vault-integration">Hashicorp Vault</a></li>
        <li><a href="/user/apps/">3rd Party Apps, Clients and Tools</a></li>
      </ul>

      <h3>Developer Program</h3>
      <ul>
        <li class="is-overview"><a href="/user/developer/">Overview</a></li>
        <li><a href="https://developer.travis-ci.com/">API V3</a></li>
        <li><a href="/user/triggering-builds/">Triggering Builds with API V3</a></li>
        <li><a href="https://github.com/travis-ci/travis#ruby-library">The Ruby Library</a></li>
      </ul>
      
      <h3>Hosted Billing</h3>
      <ul>
        <li class="is-overview"><a href="/user/billing-overview/">Overview</a></li>
        <li><a href="/user/billing-autorefill/">Auto-refill</a></li>
        <li><a href="/user/billing-faq/">FAQ</a></li>
      </ul>

      <h3>Travis CI Enterprise</h3>
      <ul>
        <li><a href="/user/enterprise/">Enterprise Docs</a></li>
      </ul>

    </nav>
  </section>

  <section class="sidebar-notice">
    <p>This documentation site is Open Source.
      The <a href="https://github.com/travis-ci/docs-travis-ci-com">README in our Git repository</a> explains how to contribute.</p>
    <p>Travis CI relies on Open Source <a href="/user/open_source_license/">licensing information</a>.</p>
  </section>

</div><!-- /#sidebar -->


        <main id="main" class="main" data-swiftype-index='true'>
          
            <aside class="improve-page" data-swiftype-index='false'><a href="https://github.com/travis-ci/docs-travis-ci-com/edit/master/user/gui-and-headless-browsers.md" target="_blank" title="Edit this page on GitHub" class="button-pen" data-proofer-ignore>Improve this page on GitHub</a></aside>
            <h1 class="title">GUI and Headless Browser Testing</h1>
          

          


          
            <div id="toc" class="toc">
              <ul class="list-language">
  <li><a href="#what-this-guide-covers">What This Guide Covers</a></li>
  <li><a href="#using-sauce-labs">Using Sauce Labs</a></li>
  <li><a href="#using-xvfb-to-run-tests-that-require-a-gui">Using xvfb to Run Tests That Require a GUI</a></li>
  <li><a href="#using-the-chrome-addon-in-the-headless-mode">Using the <a href="/user/chrome">Chrome addon</a> in the headless mode</a></li>
  <li><a href="#using-the-firefox-addon-in-headless-mode">Using the <a href="/user/firefox">Firefox addon</a> in headless mode</a></li>
  <li><a href="#using-phantomjs">Using PhantomJS</a></li>
  <li><a href="#examples">Examples</a></li>
  <li><a href="#troubleshooting">Troubleshooting</a></li>
</ul>

            </div>
          

          <h2 id="what-this-guide-covers">What This Guide Covers <a href="#what-this-guide-covers" class="toc-anchor">#</a></h2>

<p>This guide covers headless GUI &amp; browser testing using tools provided by the Travis <a href="/user/reference/precise/">CI environment</a>. Most of the content is technology-neutral and does not cover all the details of specific testing tools (like Poltergeist or Capybara). We recommend you start with the <a href="/user/tutorial/">Tutorial</a> and <a href="/user/customizing-the-build/">Build Configuration</a> guides before reading this one.</p>

<h2 id="using-sauce-labs">Using Sauce Labs <a href="#using-sauce-labs" class="toc-anchor">#</a></h2>

<p><a href="https://saucelabs.com">Sauce Labs</a> provides a Selenium cloud with access to more than 170 different device/OS/browser combinations. If you have browser tests that use Selenium, using Sauce Labs to run the tests is very easy. First, you need to sign up for their service (it’s free for open source projects).</p>

<p>Once you’ve signed up, set up a tunnel using Sauce Connect so Sauce Labs can connect to your web server. Our <a href="/user/sauce-connect/">Sauce Connect addon</a> makes this easy, just add this to your .travis.yml:</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">addons</span><span class="pi">:</span>
  <span class="na">sauce_connect</span><span class="pi">:</span>
    <span class="na">username</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Your</span><span class="nv"> </span><span class="s">Sauce</span><span class="nv"> </span><span class="s">Labs</span><span class="nv"> </span><span class="s">username"</span>
    <span class="na">access_key</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Your</span><span class="nv"> </span><span class="s">Sauce</span><span class="nv"> </span><span class="s">Labs</span><span class="nv"> </span><span class="s">access</span><span class="nv"> </span><span class="s">key"</span>
</code></pre></div></div>

<p>You can <a href="/user/encryption-keys/">encrypt your access key</a>, if you want to.</p>

<p>Now Sauce Labs has a way of reaching your web server, but you still need to start it up. See <a href="#starting-a-web-server">Starting a Web Server</a> below for more information on how to do that.</p>

<p>Finally, you need to configure your Selenium tests to run on Sauce Labs instead of locally. This is done using a <a href="https://code.google.com/p/selenium/wiki/RemoteWebDriver">Remote WebDriver</a>. The exact code depends on what tool/platform you’re using, but for Python it would look like this:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>username <span class="o">=</span> os.environ[<span class="s2">"SAUCE_USERNAME"</span><span class="o">]</span>
access_key <span class="o">=</span> os.environ[<span class="s2">"SAUCE_ACCESS_KEY"</span><span class="o">]</span>
capabilities[<span class="s2">"tunnel-identifier"</span><span class="o">]</span> <span class="o">=</span> os.environ[<span class="s2">"TRAVIS_JOB_NUMBER"</span><span class="o">]</span>
hub_url <span class="o">=</span> <span class="s2">"%s:%s@localhost:4445"</span> % <span class="o">(</span>username, access_key<span class="o">)</span>
driver <span class="o">=</span> webdriver.Remote<span class="o">(</span><span class="nv">desired_capabilities</span><span class="o">=</span>capabilities, <span class="nv">command_executor</span><span class="o">=</span><span class="s2">"http://%s/wd/hub"</span> % hub_url<span class="o">)</span>
</code></pre></div></div>

<p>The Sauce Connect addon exports the <code class="highlighter-rouge">SAUCE_USERNAME</code> and <code class="highlighter-rouge">SAUCE_ACCESS_KEY</code> environment variables, and relays connections to the hub URL back to Sauce Labs.</p>

<p>This is all you need to get your Selenium tests running on Sauce Labs. However, you may want to only use Sauce Labs for Travis CI builds, and not for local builds. To do this, you can use the <code class="highlighter-rouge">CI</code> or <code class="highlighter-rouge">TRAVIS</code> environment variables to conditionally change what driver you’re using (see <a href="/user/reference/precise/#environment-variables">our list of available environment variables</a> for more ways to detect if you’re running on Travis CI).</p>

<p>To make the test results on Sauce Labs a little more easy to navigate, you may wish to provide some more metadata to send with the build. You can do this by passing in more desired capabilities:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>capabilities[<span class="s2">"build"</span><span class="o">]</span> <span class="o">=</span> os.environ[<span class="s2">"TRAVIS_BUILD_NUMBER"</span><span class="o">]</span>
capabilities[<span class="s2">"tags"</span><span class="o">]</span> <span class="o">=</span> <span class="o">[</span>os.environ[<span class="s2">"TRAVIS_PYTHON_VERSION"</span><span class="o">]</span>, <span class="s2">"CI"</span><span class="o">]</span>
</code></pre></div></div>

<p>For travis-web, our very own website, we use Sauce Labs to run browser tests on multiple browsers. We use environment variables in our <a href="https://github.com/travis-ci/travis-web/blob/15dc5ff92184db7044f0ce3aa451e57aea58ee19/.travis.yml#L14-15">.travis.yml</a> to split up the build into multiple jobs, and then pass the desired browser into Sauce Labs using <a href="https://github.com/travis-ci/travis-web/blob/15dc5ff92184db7044f0ce3aa451e57aea58ee19/script/saucelabs.rb#L9-13">desired capabilities</a>. On the Travis CI side, it ends up looking like <a href="https://travis-ci.org/travis-ci/travis-web/builds/12857641">this</a>.</p>

<h2 id="using-xvfb-to-run-tests-that-require-a-gui">Using xvfb to Run Tests That Require a GUI <a href="#using-xvfb-to-run-tests-that-require-a-gui" class="toc-anchor">#</a></h2>

<p>To run tests requiring a graphical user interface on Travis CI, use <code class="highlighter-rouge">xvfb</code> (X
Virtual Framebuffer) to imitate a display. If you need a browser, you can use
Firefox (either with the pre-installed version, or the <a href="/user/firefox">addon</a>)
or Google Chrome (with the <a href="/user/chrome">addon</a>, on Linux Trusty or macOS).</p>

<h3 id="using-services">Using <code class="highlighter-rouge">services:</code> <a href="#using-services" class="toc-anchor">#</a></h3>

<blockquote>
  <p>This only works on Ubuntu 16.04 (Xenial) and later on releases i.e. with <code class="highlighter-rouge">dist: xenial</code> or <code class="highlighter-rouge">dist: bionic</code></p>
</blockquote>

<p>The following will start xvfb and set the right values for the <code class="highlighter-rouge">DISPLAY</code>
environment variable:</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">dist</span><span class="pi">:</span> <span class="s">xenial</span>
<span class="na">services</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">xvfb</span>
</code></pre></div></div>

<h3 id="using-the-xvfb-run-wrapper">Using the xvfb-run wrapper <a href="#using-the-xvfb-run-wrapper" class="toc-anchor">#</a></h3>

<p><code class="highlighter-rouge">xvfb-run</code> is a wrapper for invoking <code class="highlighter-rouge">xvfb</code> so that <code class="highlighter-rouge">xvfb</code> can be used with
less fuss:</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">script</span><span class="pi">:</span> <span class="s">xvfb-run make test</span>
</code></pre></div></div>

<p>To set the screen resolution:</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">script</span><span class="pi">:</span> <span class="s">xvfb-run --server-args="-screen 0 1024x768x24" make test</span>
</code></pre></div></div>

<h3 id="using-xvfb-directly">Using xvfb directly <a href="#using-xvfb-directly" class="toc-anchor">#</a></h3>

<blockquote>
  <p>This is recommended on Ubuntu 14.04 (Trusty) i.e. with <code class="highlighter-rouge">dist: trusty</code>. For <code class="highlighter-rouge">dist: xenial</code>, use the <code class="highlighter-rouge">services</code> keyword described <a href="/user/gui-and-headless-browsers/#using-services">above</a>.</p>
</blockquote>

<p>To use <code class="highlighter-rouge">xvfb</code> itself, start it in the <code class="highlighter-rouge">before_script</code> section of your
<code class="highlighter-rouge">.travis.yml</code>:</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">before_script</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">export</span><span class="nv"> </span><span class="s">DISPLAY=:99.0"</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">sh</span><span class="nv"> </span><span class="s">-e</span><span class="nv"> </span><span class="s">/etc/init.d/xvfb</span><span class="nv"> </span><span class="s">start"</span>
  <span class="pi">-</span> <span class="s">sleep </span><span class="m">3</span> <span class="c1"># give xvfb some time to start</span>
</code></pre></div></div>

<p>Note: Don’t run <code class="highlighter-rouge">xvfb</code> directly, as it does not handle multiple concurrent
instances that way.</p>

<p>If you need to set the screen size and pixel depth, you need to start <code class="highlighter-rouge">xvfb</code>
with the <code class="highlighter-rouge">start-stop-daemon</code> utility and not with the init script in the
previous example.</p>

<p>For example, to set the screen resolution to <code class="highlighter-rouge">1280x1024x16</code>:</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">before_install</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">/sbin/start-stop-daemon</span><span class="nv"> </span><span class="s">--start</span><span class="nv"> </span><span class="s">--quiet</span><span class="nv"> </span><span class="s">--pidfile</span><span class="nv"> </span><span class="s">/tmp/custom_xvfb_99.pid</span><span class="nv"> </span><span class="s">--make-pidfile</span><span class="nv"> </span><span class="s">--background</span><span class="nv"> </span><span class="s">--exec</span><span class="nv"> </span><span class="s">/usr/bin/Xvfb</span><span class="nv"> </span><span class="s">--</span><span class="nv"> </span><span class="s">:99</span><span class="nv"> </span><span class="s">-ac</span><span class="nv"> </span><span class="s">-screen</span><span class="nv"> </span><span class="s">0</span><span class="nv"> </span><span class="s">1280x1024x16"</span>
</code></pre></div></div>

<p>See <a href="http://www.xfree86.org/4.0.1/Xvfb.1.html">xvfb manual page</a> for more information.</p>

<h3 id="starting-a-web-server">Starting a Web Server <a href="#starting-a-web-server" class="toc-anchor">#</a></h3>

<!-- FIXME: write this paragraph -->

<p>If your project requires a web application running to be tested, you need to start one before running tests. It is common to use Ruby, Node.js and JVM-based web servers
that serve HTML pages used to run test suites. Because every build environment provides at least one version of Ruby, Node.js and OpenJDK, you can rely on one of those
three options.</p>

<p>Add a <code class="highlighter-rouge">before_script</code> to start a server, for example:</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">before_script</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">export</span><span class="nv"> </span><span class="s">DISPLAY=:99.0"</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">sh</span><span class="nv"> </span><span class="s">-e</span><span class="nv"> </span><span class="s">/etc/init.d/xvfb</span><span class="nv"> </span><span class="s">start"</span>
  <span class="pi">-</span> <span class="s">sleep </span><span class="m">3</span> <span class="c1"># give xvfb some time to start</span>
  <span class="pi">-</span> <span class="s">rackup</span>  <span class="c1"># start a Web server</span>
  <span class="pi">-</span> <span class="s">sleep </span><span class="m">3</span> <span class="c1"># give Web server some time to bind to sockets, etc</span>
</code></pre></div></div>

<p>If you need web server to be listening on port 80, remember to use <code class="highlighter-rouge">sudo</code> (Linux will not allow non-privileged process to bind to port 80). For ports greater than 1024, using <code class="highlighter-rouge">sudo</code> is not necessary (and not recommended).</p>

<div class="note-box">
Note that <code>sudo</code> is not available for builds that are running on the <a href="/user/workers/container-based-infrastructure">container-based workers</a>.
</div>

<h2 id="using-the-chrome-addon-in-the-headless-mode">Using the <a href="/user/chrome">Chrome addon</a> in the headless mode <a href="#using-the-chrome-addon-in-the-headless-mode" class="toc-anchor">#</a></h2>

<p>Starting with version 57 for Linux Trusty and version 59 on macOS, Google Chrome can be used in “headless”
mode, which is suitable for driving browser-based tests using Selenium and other tools.</p>

<blockquote>
  <p>As of 2017-05-02, this means <code class="highlighter-rouge">stable</code> or <code class="highlighter-rouge">beta</code> on Linux builds, and <code class="highlighter-rouge">beta</code> on macOS builds.</p>
</blockquote>

<p>For example, on Linux</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">dist</span><span class="pi">:</span> <span class="s">xenial</span>
<span class="na">addons</span><span class="pi">:</span>
  <span class="na">chrome</span><span class="pi">:</span> <span class="s">stable</span>
<span class="na">before_install</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="c1"># start your web application and listen on `localhost`</span>
  <span class="pi">-</span> <span class="s">google-chrome-stable --headless --disable-gpu --remote-debugging-port=9222 http://localhost &amp;</span>
  <span class="s">⋮</span>
</code></pre></div></div>

<p>On macOS:</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">language</span><span class="pi">:</span> <span class="s">objective-c</span>
<span class="na">addons</span><span class="pi">:</span>
  <span class="na">chrome</span><span class="pi">:</span> <span class="s">beta</span>
<span class="na">before_install</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="c1"># start your web application and listen on `localhost`</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">/Applications/Google</span><span class="se">\\</span><span class="nv"> </span><span class="s">Chrome.app/Contents/MacOS/Google</span><span class="se">\\</span><span class="nv"> </span><span class="s">Chrome</span><span class="nv"> </span><span class="s">--headless</span><span class="nv"> </span><span class="s">--disable-gpu</span><span class="nv"> </span><span class="s">--remote-debugging-port=9222</span><span class="nv"> </span><span class="s">http://localhost</span><span class="nv"> </span><span class="s">&amp;"</span>
  <span class="s">⋮</span>
</code></pre></div></div>

<h4 id="documentation">Documentation <a href="#documentation" class="toc-anchor">#</a></h4>

<ul>
  <li><a href="https://chromium.googlesource.com/chromium/src/+/lkgr/headless/README.md">Headless Chromium documentation</a></li>
  <li><a href="https://developers.google.com/web/updates/2017/04/headless-chrome">Getting Started with Headless Chrome</a></li>
</ul>

<h2 id="using-the-firefox-addon-in-headless-mode">Using the <a href="/user/firefox">Firefox addon</a> in headless mode <a href="#using-the-firefox-addon-in-headless-mode" class="toc-anchor">#</a></h2>

<p>Starting with version 56, Firefox can be used in “headless” mode, which is
suitable for driving browser-based tests using Selenium and other tools.
Headless mode can be enabled using the <code class="highlighter-rouge">MOZ_HEADLESS</code>
<a href="/user/environment-variables">environment variable</a>:</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">env</span><span class="pi">:</span>
  <span class="na">global</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="s">MOZ_HEADLESS=1</span>
<span class="na">addons</span><span class="pi">:</span>
  <span class="na">firefox</span><span class="pi">:</span> <span class="s">latest</span>
</code></pre></div></div>

<p>Alternatively, you can pass the <code class="highlighter-rouge">-headless</code> command line argument when
starting Firefox. For example, the following code demonstrates how you would
set this argument using the Python client for Selenium:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">selenium.webdriver</span> <span class="kn">import</span> <span class="n">Firefox</span>
<span class="kn">from</span> <span class="nn">selenium.webdriver.firefox.options</span> <span class="kn">import</span> <span class="n">Options</span>

<span class="n">options</span> <span class="o">=</span> <span class="n">Options</span><span class="p">()</span>
<span class="n">options</span><span class="p">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s">'-headless'</span><span class="p">)</span>
<span class="n">firefox</span> <span class="o">=</span> <span class="n">Firefox</span><span class="p">(</span><span class="n">firefox_options</span><span class="o">=</span><span class="n">options</span><span class="p">)</span>
</code></pre></div></div>

<p>#### Documentation</p>

<ul>
  <li><a href="https://developer.mozilla.org/en-US/Firefox/Headless_mode#Using_headless_mode">Using headless mode</a></li>
  <li><a href="https://developer.mozilla.org/en-US/Firefox/Headless_mode#Automated_testing_with_headless_mode">Automated testing with headless mode</a></li>
</ul>

<h2 id="using-phantomjs">Using PhantomJS <a href="#using-phantomjs" class="toc-anchor">#</a></h2>

<p><a href="http://phantomjs.org/">PhantomJS</a> is a headless WebKit with JavaScript API. It is an optimal solution for fast headless testing, site scraping, pages capture, SVG renderer, network monitoring and many other use cases.</p>

<p><a href="/user/reference/precise/">CI environment</a> provides PhantomJS pre-installed (available in PATH as <code class="highlighter-rouge">phantomjs</code>; don’t rely on the exact location). Since it is completely headless, there is no need run <code class="highlighter-rouge">xvfb</code>.</p>

<p>A very simple example:</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">script</span><span class="pi">:</span> <span class="s">phantomjs testrunner.js</span>
</code></pre></div></div>

<p>If you need a web server to serve the tests, see the previous section.</p>

<h2 id="examples">Examples <a href="#examples" class="toc-anchor">#</a></h2>

<h3 id="real-world-projects">Real World Projects <a href="#real-world-projects" class="toc-anchor">#</a></h3>

<ul>
  <li><a href="https://github.com/emberjs/ember-mocha/blob/master/.travis.yml">Ember.js</a> (starts web server programmatically)</li>
  <li><a href="https://github.com/sproutcore/sproutcore/blob/master/.travis.yml">Sproutcore</a> (starts web server with <em>before_script</em>)</li>
</ul>

<h3 id="ruby">Ruby <a href="#ruby" class="toc-anchor">#</a></h3>

<h4 id="rspec-jasmine-cucumber">RSpec, Jasmine, Cucumber <a href="#rspec-jasmine-cucumber" class="toc-anchor">#</a></h4>

<p>Here’s an example rake task that runs Rspec, Jasmine, and Cucumber tests:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">task</span> <span class="ss">:travis</span> <span class="k">do</span>
  <span class="p">[</span><span class="s2">"rspec spec"</span><span class="p">,</span> <span class="s2">"rake jasmine:ci"</span><span class="p">,</span> <span class="s2">"rake cucumber"</span><span class="p">].</span><span class="nf">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">cmd</span><span class="o">|</span>
    <span class="nb">puts</span> <span class="s2">"Starting to run </span><span class="si">#{</span><span class="n">cmd</span><span class="si">}</span><span class="s2">..."</span>
    <span class="nb">system</span><span class="p">(</span><span class="s2">"export DISPLAY=:99.0 &amp;&amp; bundle exec </span><span class="si">#{</span><span class="n">cmd</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
    <span class="k">raise</span> <span class="s2">"</span><span class="si">#{</span><span class="n">cmd</span><span class="si">}</span><span class="s2"> failed!"</span> <span class="k">unless</span> <span class="vg">$?</span><span class="p">.</span><span class="nf">exitstatus</span> <span class="o">==</span> <span class="mi">0</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>In this example, both Jasmine and Cucumber need the display port, because they both use real browsers. Rspec would run without it, but it does no harm to set it.</p>

<h2 id="troubleshooting">Troubleshooting <a href="#troubleshooting" class="toc-anchor">#</a></h2>

<h3 id="selenium-and-firefox-popups">Selenium and Firefox popups <a href="#selenium-and-firefox-popups" class="toc-anchor">#</a></h3>

<p>If your test suite handles a modal dialog popup, for example, <a href="https://support.mozilla.org/en-US/questions/792131">a redirect to another location</a>, then you may need to add a custom profile so that the popup is suppressed.</p>

<p>This can be fixed by applying a custom Firefox profile with the option turned off: (example is in Ruby using Capybara)</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Capybara</span><span class="p">.</span><span class="nf">register_driver</span> <span class="ss">:selenium</span> <span class="k">do</span> <span class="o">|</span><span class="n">app</span><span class="o">|</span>

  <span class="n">custom_profile</span> <span class="o">=</span> <span class="no">Selenium</span><span class="o">::</span><span class="no">WebDriver</span><span class="o">::</span><span class="no">Firefox</span><span class="o">::</span><span class="no">Profile</span><span class="p">.</span><span class="nf">new</span>

  <span class="c1"># Turn off the super annoying popup!</span>
  <span class="n">custom_profile</span><span class="p">[</span><span class="s2">"network.http.prompt-temp-redirect"</span><span class="p">]</span> <span class="o">=</span> <span class="kp">false</span>

  <span class="no">Capybara</span><span class="o">::</span><span class="no">Selenium</span><span class="o">::</span><span class="no">Driver</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="n">app</span><span class="p">,</span> <span class="ss">:browser</span> <span class="o">=&gt;</span> <span class="ss">:firefox</span><span class="p">,</span> <span class="ss">:profile</span> <span class="o">=&gt;</span> <span class="n">custom_profile</span><span class="p">)</span>
<span class="k">end</span>
</code></pre></div></div>

<h3 id="karma-and-firefox-inactivity-timeouts">Karma and Firefox inactivity timeouts <a href="#karma-and-firefox-inactivity-timeouts" class="toc-anchor">#</a></h3>

<p>When testing with Karma and Firefox, you may encounter build errors as a result of browser inactivity timeouts. When this occurs, Karma will output an error similar to:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>WARN [Firefox 31.0.0 (Linux)]: Disconnected (1 times), because no message in 10000 ms.
</code></pre></div></div>

<p>In that case, you should increase the browser inactivity timeout to a higher value in <code class="highlighter-rouge">karma.conf.js</code>, e.g.:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">browserNoActivityTimeout</span><span class="p">:</span> <span class="mi">30000</span><span class="p">,</span>
</code></pre></div></div>

<p>For more information, refer to the Karma <a href="https://karma-runner.github.io/1.0/config/configuration-file.html">Configuration File</a> documentation.</p>


        </main>
      </div><!-- /#content -->

      <footer class="footer">
  <div class="layout-inner">
    <div class="footer-elem">
      <svg width="142px" height="45.381px" viewBox="0 0 142 45.381" enable-background="new 0 0 142 45.381" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink= "http://www.w3.org/1999/xlink">
        <title>Travis CI Mascot</title>
        <image xlink:href="https://styleguide.travis-ci.com/images/logos/travis-footer-logo-new.svg" x="0" y="0" width="142px" height="45.381px" />
      </svg>
    </div>

    <div class="footer-elem"></div>

    <div class="footer-elem">
      <h3 class="footer-title">©Travis CI, GmbH</h3>
      <address>Rigaer Straße 8<br>10247 Berlin, Germany</address>
      <ul>
        <li><a href="https://travisci.workable.com/" title="Jobs at Travis CI">Work with Travis CI</a></li>
      </ul>
    </div>

    <div class="footer-elem">
      <h3 class="footer-title">Help</h3>
      <ul>
        <li><a href="https://docs.travis-ci.com" title="Travis CI Docs">Documentation</a></li>
        <li><a href="https://changelog.travis-ci.com/">Changelog</a></li>
        <li><a href="https://blog.travis-ci.com/" title="Travis CI Blog">Blog</a></li>
        <li><a href="mailto:support@travis-ci.com" title="Email Travis CI support">Email</a></li>
        <li><a href="https://twitter.com/travisci" title="Travis CI on Twitter">Twitter</a></li>
      </ul>
    </div>

    <div class="footer-elem">
      <h3 class="footer-title">Company</h3>
      <ul>
        <li><a href="/imprint.html" title="Imprint">Imprint</a></li>
        <li><a href="https://ideracorp.com/legal/TravisCI">Legal</a></li>
      </ul>
    </div>

    <div class="footer-elem">
      <h3 class="footer-title">Travis CI Status</h3>
      <ul>
        <li><div class="status-circle none">Status:</div>
          <a href="http://www.traviscistatus.com/">Travis CI Status</a>
        </li>
      </ul>
    </div>
  </div>
</footer>

<script>
 fetch('https://pnpcptp8xh9k.statuspage.io/api/v2/status.json').then(function(response) {
   return response.json();
 }).then(function(data) {
   if (data.status && data.status.indicator) {
     document.querySelector('.status-circle').classList.add(data.status.indicator);
   }
 });
</script>

    </div><!-- /.wrapper -->
  </body>
</html>
 contentType 9 text/html url 62 https://docs.travis-ci.com:443/user/gui-and-headless-browsers/ responseCode 3 200 