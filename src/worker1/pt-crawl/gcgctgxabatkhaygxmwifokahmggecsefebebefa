gcgctgxabatkhaygxmwifokahmggecsefebebefa length 5 34491 page 34491 <!DOCTYPE HTML>
<html lang="en">
  <head>
<!-- PDTQ-131 -->
<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-N3RT7TD');</script>
<!-- End Google Tag Manager -->
    
    <meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>Software Bill of Materials - Travis CI</title>
<link rel="stylesheet" href="/assets/stylesheets/main.css">
<link rel="alternate" type="application/rss+xml" title="Travis CI Build Environment Updates" href="https://docs.travis-ci.com/feed.build-env-updates.xml">
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js" defer></script>

<script src="/assets/javascripts/main.js" type="text/javascript" charset="utf-8" defer></script>
<script src="/assets/javascripts/prism.js" type="text/javascript" charset="utf-8" defer></script>
<meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="@travisci" />
<meta name="twitter:creator" content="@travisci" />
<meta property="og:title" content="Travis CI Documentation" />
<meta property="og:type" content="website" />
<meta property="og:url" content=/user/sbom/ />
<meta property="og:description" content="Software Bill of Materials" />
<meta property="og:image" content="/images/TravisCI-Full-Color.png" }} />
<meta property="og:image:type" content="image/png" />
<meta property="og:image:width" content="642" />
<meta property="og:image:height" content="201" />
<meta property="og:image:alt" content="Travis CI logo" />


 

  </head>
  <body>
<!-- PDTQ-131 -->
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-N3RT7TD"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

    <div class="wrapper">

      <header class="top">
  <div class="row topbar">
    <h1 id="logo" class="logo">
  <a href="https://travis-ci.com/" title="Travis CI">Travis</a>
</h1>

    <nav>
      <ul id="navigation" class="navigation">
        <li><a href="https://blog.travis-ci.com">Blog</a></li>
        <li><a href="/">Docs</a></li>
        <li class="toggle"><button type="button" id="toggle-menu" class="button--teal">Menu</button></li>
      </ul>
    </nav>
  </div>
</header>


      <div id="content" class="row">

        <div id="sidebar" class="sidebar">
  <div>
    <!-- <h2>Search</h2> -->
    <div class="searchbox">
      <form>
        <input type="text" id="st-search-input" class="searchbox-input" placeholder="Search the docs" />
      </form>
      <script type="text/javascript">
      var Swiftype = window.Swiftype || {};
        (function() {
          Swiftype.key = 'tXvDDzd4fNTBnLvxfEyx';

          Swiftype.searchSearchFields = {
            "page": ["title, body, tags"]
          };
          Swiftype.autocompleteSearchFields = {
            "page": ["title, body, tags"]
          };
          /** DO NOT EDIT BELOW THIS LINE **/
          var script = document.createElement('script'); script.type = 'text/javascript'; script.async = true;
          script.src = "//swiftype.com/embed.js";
          var entry = document.getElementsByTagName('script')[0];
          document.getElementsByTagName('script')[0].parentNode.insertBefore(script, entry);
        }());
      </script>
    </div>
  </div>

  <section class="sidebar-navigation">
    <nav>
      <h3>Getting Started</h3>
      <ul>
        <li><a href="/user/for-beginners/">Core Concepts for Beginners</a></li>
        <li><a href="/user/tutorial/">Travis CI Tutorial</a></li>
        <li><a href="/user/customizing-the-build/">Customizing the Build</a></li>
        <li><a href="/user/speeding-up-the-build/">Speeding up the Build</a></li>
        <li><a href="/user/docker/">Using Docker in your Build</a></li>
        <li><a href="/user/gui-and-headless-browsers/">Headless Testing with Browsers</a></li>
        <li><a href="/user/pull-requests/">Building Pull Requests</a></li>
        <li><a href="/user/cron-jobs/">Cron Jobs</a></li>
        <li><a href="/user/common-build-problems/">Common Build Problems</a></li>
        <li><a href="https://github.com/travis-ci/travis#readme">Command Line Client</a></li>
        <li><a href="/user/build-config-imports/">Build Config Imports</a></li>
        <li><a href="/user/build-config-validation/">Build Config Validation</a></li>
      </ul>

      <h3>Jobs, Builds, Matrices and Stages</h3>
      <ul>
        <li><a href="/user/job-lifecycle/">Job Lifecycle</a></li>
        <li><a href="/user/build-matrix/">Build Matrix</a></li>
        <li><a href="/user/build-stages/">Build Stages</a></li>
        <li><a href="/user/conditional-builds-stages-jobs/">Conditional Builds, Stages, and Jobs</a></li>
      </ul>

      <h3>Installing Dependencies</h3>
      <ul>
        <li><a href="/user/installing-dependencies/">Installing Dependencies</a></li>
        <li><a href="/user/private-dependencies/">Private Dependencies GitHub</a></li>
        <li><a href="/user/private-dependencies-bb/">Private Dependencies Bitbucket</a></li>
        <li><a href="/user/database-setup/">Setting up Services and Databases</a></li>
        <li><a href="/user/caching/">Caching Dependencies</a></li>
        <li><a href="/user/using-workspaces/">Caching Dependencies within a Build (Workspaces)</a></li>
        <li><a href="/user/ssh-known-hosts/">Adding to SSH Known Hosts</a></li>
      </ul>

      <h3>Programming Languages</h3>
      <ul>
      
        <li><a href="/user/languages/android/">Android</a></li>
      
        <li><a href="/user/languages/c/">C</a></li>
      
        <li><a href="/user/languages/csharp/">C#</a></li>
      
        <li><a href="/user/languages/cpp/">C++</a></li>
      
        <li><a href="/user/languages/clojure/">Clojure</a></li>
      
        <li><a href="/user/languages/crystal/">Crystal</a></li>
      
        <li><a href="/user/languages/d/">D</a></li>
      
        <li><a href="/user/languages/dart/">Dart</a></li>
      
        <li><a href="/user/languages/elixir/">Elixir</a></li>
      
        <li><a href="/user/languages/elm/">Elm</a></li>
      
        <li><a href="/user/languages/erlang/">Erlang</a></li>
      
        <li><a href="/user/languages/csharp/">F#</a></li>
      
        <li><a href="/user/languages/minimal-and-generic/">Generic</a></li>
      
        <li><a href="/user/languages/go/">Go</a></li>
      
        <li><a href="/user/languages/groovy/">Groovy</a></li>
      
        <li><a href="/user/languages/haskell/">Haskell</a></li>
      
        <li><a href="/user/languages/haxe/">Haxe</a></li>
      
        <li><a href="/user/languages/java/">Java</a></li>
      
        <li><a href="/user/languages/javascript-with-nodejs/">JavaScript <small>(with Node.js)</small></a></li>
      
        <li><a href="/user/languages/julia/">Julia</a></li>
      
        <li><a href="/user/languages/matlab/">MATLAB</a></li>
      
        <li><a href="/user/languages/minimal-and-generic/">Minimal</a></li>
      
        <li><a href="/user/languages/nix/">Nix</a></li>
      
        <li><a href="/user/languages/objective-c/">Objective-C</a></li>
      
        <li><a href="/user/languages/perl/">Perl</a></li>
      
        <li><a href="/user/languages/perl6/">Perl6</a></li>
      
        <li><a href="/user/languages/php/">PHP</a></li>
      
        <li><a href="/user/languages/python/">Python</a></li>
      
        <li><a href="/user/languages/r/">R</a></li>
      
        <li><a href="/user/languages/ruby/">Ruby</a></li>
      
        <li><a href="/user/languages/rust/">Rust</a></li>
      
        <li><a href="/user/languages/scala/">Scala</a></li>
      
        <li><a href="/user/languages/smalltalk/">Smalltalk</a></li>
      
        <li><a href="/user/languages/objective-c/">Swift</a></li>
      
        <li><a href="/user/languages/csharp/">Visual Basic</a></li>
      
        <li><a href="/user/languages/community-supported-languages/">Adding a language</a></li>
      </ul>

      <h3>Deployments and Uploads</h3>
      <ul>
        
          <li class="is-overview"><a href="/user/deployment/">Overview</a></li>
          
        
        
          <li><a href="/user/deployment/anynines/">anynines</a></li>
        
          <li><a href="/user/deployment/atlas/">Atlas</a></li>
        
          <li><a href="/user/deployment/codedeploy/">AWS CodeDeploy</a></li>
        
          <li><a href="/user/deployment/elasticbeanstalk/">AWS Elastic Beanstalk</a></li>
        
          <li><a href="/user/deployment/lambda/">AWS Lambda</a></li>
        
          <li><a href="/user/deployment/opsworks/">AWS OpsWorks</a></li>
        
          <li><a href="/user/deployment/s3/">AWS S3</a></li>
        
          <li><a href="/user/deployment/azure-web-apps/">Azure Web Apps</a></li>
        
          <li><a href="/user/deployment/bintray/">bintray</a></li>
        
          <li><a href="/user/deployment/bitballoon/">BitBalloon</a></li>
        
          <li><a href="/user/deployment/bluemixcloudfoundry/">Bluemix CloudFoundry</a></li>
        
          <li><a href="/user/deployment/boxfuse/">Boxfuse</a></li>
        
          <li><a href="/user/deployment/catalyze/">Catalyze</a></li>
        
          <li><a href="/user/deployment/chefsupermarket/">Chef Supermarket</a></li>
        
          <li><a href="/user/deployment/cloud66/">Cloud 66</a></li>
        
          <li><a href="/user/deployment/cloudfoundry/">CloudFoundry</a></li>
        
          <li><a href="/user/deployment/cargo/">Cargo</a></li>
        
          <li><a href="/user/deployment/engineyard/">Engine Yard</a></li>
        
          <li><a href="/user/deployment/pages/">GitHub Pages</a></li>
        
          <li><a href="/user/deployment/releases/">GitHub Releases</a></li>
        
          <li><a href="/user/deployment/google-app-engine/">Google App Engine</a></li>
        
          <li><a href="/user/deployment/gcs/">Google Cloud Storage</a></li>
        
          <li><a href="/user/deployment/firebase/">Google Firebase</a></li>
        
          <li><a href="/user/deployment/hackage/">Hackage</a></li>
        
          <li><a href="/user/deployment/hephy/">Hephy</a></li>
        
          <li><a href="/user/deployment/heroku/">Heroku</a></li>
        
          <li><a href="/user/deployment/launchpad/">Launchpad</a></li>
        
          <li><a href="/user/deployment/npm/">npm</a></li>
        
          <li><a href="/user/deployment/openshift/">OpenShift</a></li>
        
          <li><a href="/user/deployment/packagecloud/">packagecloud.io</a></li>
        
          <li><a href="/user/deployment/puppetforge/">Puppet Forge</a></li>
        
          <li><a href="/user/deployment/pypi/">PyPI</a></li>
        
          <li><a href="/user/deployment/cloudfiles/">Rackspace Cloud Files</a></li>
        
          <li><a href="/user/deployment/rubygems/">RubyGems</a></li>
        
          <li><a href="/user/deployment/scalingo/">Scalingo</a></li>
        
          <li><a href="/user/deployment/script/">Script</a></li>
        
          <li><a href="/user/deployment/snaps/">Snap Store</a></li>
        
          <li><a href="/user/deployment/surge/">Surge.sh</a></li>
        
          <li><a href="/user/deployment/testfairy/">TestFairy</a></li>
        
          <li><a href="/user/deployment/transifex/">Transifex</a></li>
        
        <li><a href="/user/uploading-artifacts/">Uploading Build Artifacts</a></li>
      </ul>

      <h3>CI Environment Reference</h3>
      <ul>
        <li class="is-overview"><a href="/user/reference/overview/">Overview</a></li>
        <li><a href="/user/reference/linux/">Ubuntu Linux CI Environment References</a></li>
        <li><a href="/user/reference/osx/">macOS CI Environment Reference</a></li>
        <li><a href="/user/reference/windows/">Windows CI Environment Reference</a></li>
        <li><a href="/user/reference/freebsd/">FreeBSD CI Environment Reference</a></li>
        <li><a href="/user/multi-os/">Building on Multiple Operating Systems</a></li>
        <li><a href="/user/multi-cpu-architectures/">Building on Multiple CPU Architectures</a></li>
        <li><a href="/user/environment-variables/">Environment Variables</a></li>
        <li><a href="/user/build-environment-updates/">Build Environment Updates</a></li>
        <li><a href="/user/ip-addresses/">Build Machines IP Addresses</a></li>
      </ul>

      <h3>Security and Secure Software Supply Chain</h3>
      <ul>
        <li><a href="/user/encryption-keys/">Encrypting Sensitive Data</a></li>
        <li><a href="/user/encrypting-files/">Encrypting Files</a></li>
        <li><a href="/user/github-oauth-scopes/">GitHub Permissions used by Travis CI</a></li>
        <li><a href="/user/bb-oauth-scopes/">Bitbucket Permissions used by Travis CI</a></li>
        <li><a href="/user/assembla-oauth-scopes/">Assembla Permissions used by Travis CI</a></li>
        <li><a href="/user/gl-oauth-scopes/">GitLab Permissions used by Travis CI</a></li>
        <li><a href="/user/disable-job-logs/">Disable Job Logs Availability</a></li>
        <li><a href="/user/best-practices-security/">Best Practices in Securing Your Data</a></li>
        <li><a href="/user/securely-signing-software">Securely Signing Software</a></li>
        <li><a href="/user/sbom">Software Bill of Materials</a></li>
      </ul>

      <h3>Integrations and Notifications</h3>
      <ul>
        <li><a href="/user/notifications/">Configuring Notifications</a></li>
        <li><a href="/user/status-images/">Showing Build Status Images</a></li>
        <li><a href="/user/code-climate/">Code Climate</a></li>
        <li><a href="/user/deepsource/">DeepSource</a></li>
        <li><a href="/user/coveralls/">Coveralls</a></li>
        <li><a href="/user/coverity-scan/">Coverity Scan</a></li>
        <li><a href="/user/browserstack/">BrowserStack</a></li>
        <li><a href="/user/sauce-connect/">Sauce Labs</a></li>
        <li><a href="/user/sonarcloud/">SonarCloud</a></li>
        <li><a href="/user/sourceclear/">SourceClear</a></li>
        <li><a href="/user/build-feeds/">Atom Feeds</a></li>
        <li><a href="/user/cc-menu/">CCMenu / CCTray Feeds</a></li>
        <li><a href="/user/integration/platformio/">Embedded Builds with PlatformIO</a></li>
        <li><a href="/user/hashicorp-vault-integration">Hashicorp Vault</a></li>
        <li><a href="/user/apps/">3rd Party Apps, Clients and Tools</a></li>
      </ul>

      <h3>Developer Program</h3>
      <ul>
        <li class="is-overview"><a href="/user/developer/">Overview</a></li>
        <li><a href="https://developer.travis-ci.com/">API V3</a></li>
        <li><a href="/user/triggering-builds/">Triggering Builds with API V3</a></li>
        <li><a href="https://github.com/travis-ci/travis#ruby-library">The Ruby Library</a></li>
      </ul>
      
      <h3>Hosted Billing</h3>
      <ul>
        <li class="is-overview"><a href="/user/billing-overview/">Overview</a></li>
        <li><a href="/user/billing-autorefill/">Auto-refill</a></li>
        <li><a href="/user/billing-faq/">FAQ</a></li>
      </ul>

      <h3>Travis CI Enterprise</h3>
      <ul>
        <li><a href="/user/enterprise/">Enterprise Docs</a></li>
      </ul>

    </nav>
  </section>

  <section class="sidebar-notice">
    <p>This documentation site is Open Source.
      The <a href="https://github.com/travis-ci/docs-travis-ci-com">README in our Git repository</a> explains how to contribute.</p>
    <p>Travis CI relies on Open Source <a href="/user/open_source_license/">licensing information</a>.</p>
  </section>

</div><!-- /#sidebar -->


        <main id="main" class="main" data-swiftype-index='true'>
          
            <aside class="improve-page" data-swiftype-index='false'><a href="https://github.com/travis-ci/docs-travis-ci-com/edit/master/user/sbom.md" target="_blank" title="Edit this page on GitHub" class="button-pen" data-proofer-ignore>Improve this page on GitHub</a></aside>
            <h1 class="title">Software Bill of Materials</h1>
          

          


          
            <div id="toc" class="toc">
              <ul class="list-language">
  <li><a href="#how-does-sbom-work">How does SBOM work?</a></li>
  <li><a href="#supported-languages-and-package-managers">Supported languages and package managers</a></li>
  <li><a href="#how-to-trigger-sbom-generation-in-travisyml">How to trigger SBOM generation in .travis.yml?</a></li>
  <li><a href="#how-to-deploy-sbom-files-to-target-location">How to deploy SBOM file(s) to target location?</a></li>
  <li><a href="#remarks">Remarks</a></li>
</ul>

            </div>
          

          <p>The SBOM (Software Bill of Materials) is a file or set of files describing the dependencies included in the released software. It serves the purpose of indexing components used in the release in a usable format, e.g., security teams. Being able to generate and deliver SBOM once your software is built, tested, and ready to deliver/delivered by Travis CI helps to conform with secure software supply chain policies.</p>

<p>Travis CI allows the generation of SBOM files for certain programming languages. Travis CI generates the SBOM from thesource code that triggers a build. The SBOM files can be generated at a certain phase of a build job, and the user must upload them to the target location by, e.g., providing proper instructions in the <code class="highlighter-rouge">.travis.yml</code> file.</p>

<p>Alternatively, users can download specific SBOM generators to the build job environment and customize the SBOM generation process as much as needed via <code class="highlighter-rouge">.travis.yml</code>. As a matter of fact, in specific scenarios, this could be the best way forward. Travis CI provides an ease-of-use enhancement for popular build scenarios.</p>

<h2 id="how-does-sbom-work">How does SBOM work? <a href="#how-does-sbom-work" class="toc-anchor">#</a></h2>

<p>SBOM is generated utilizing <a href="https://cyclonedx.org/tool-center/">CycloneDX</a> plugins for certain languages and <a href="https://github.com/anchore/syft/">Syft</a> attempting to cover the remaining use cases. 
The way it works is very simple:</p>

<ol>
  <li>Travis CI user puts in the <code class="highlighter-rouge">.travis.yml</code> in the repository for a specific build job, which should build SBOM
    <ol>
      <li>new <code class="highlighter-rouge">addons.sbom</code> instructions.</li>
      <li>Additional instruction, e.g., using Travis CI <a href="/user/deployment">DPL</a>, or <a href="/user/deployment-v2">DPLv2</a>, or custom commands to deploy or move generated SBOM files to the desired target location.</li>
    </ol>
  </li>
  <li>The build and respective build job run on Travis CI; appropriate tooling is downloaded into the build job and runs according to <code class="highlighter-rouge">.travis.yml</code> entries.</li>
</ol>

<p>The SBOM generation is available under Linux build environments (for Linux build jobs).</p>

<h2 id="supported-languages-and-package-managers">Supported languages and package managers <a href="#supported-languages-and-package-managers" class="toc-anchor">#</a></h2>

<p>Currently, you can generate SBOM for the following programming languages in your repository, assuming certain package managers used.</p>

<ul>
  <li>Ruby</li>
  <li>Python</li>
  <li>Go</li>
  <li>Node.js / JavaScript and NPM</li>
  <li>PHP</li>
</ul>

<p>The tooling will attempt to use respective CycloneDX plugins for the above combinations. 
For the remaining languages, Travis CI will run Syft to build SBOM.</p>

<p>The default output of the SBOM file is a CycloneDX-compatible JSON. However, it is possible to request CycloneDX-compatible XML or SPDX JSON.</p>

<h2 id="how-to-trigger-sbom-generation-in-travisyml">How to trigger SBOM generation in .travis.yml? <a href="#how-to-trigger-sbom-generation-in-travisyml" class="toc-anchor">#</a></h2>

<p>There’s a new node in the existing <code class="highlighter-rouge">addons</code> section added specifically to help handle SBOM generation instructions.</p>

<p>The simplest call would look like this:</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">jobs</span><span class="pi">:</span>                             <span class="c1"># existing functionality</span>
  <span class="na">include</span><span class="pi">:</span>                        <span class="c1"># existing functionality</span>
    <span class="pi">-</span> <span class="na">os</span><span class="pi">:</span> <span class="s">linux</span>
      <span class="na">dist</span><span class="pi">:</span> <span class="s">focal</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">SBOM</span><span class="nv"> </span><span class="s">generation</span><span class="nv"> </span><span class="s">example</span><span class="nv"> </span><span class="s">job"</span>
      <span class="na">addons</span><span class="pi">:</span>
         <span class="s">sbom</span>                    <span class="c1"># new node</span>
         <span class="s">&lt;other existing addons&gt;</span>
</code></pre></div></div>

<p>The above job definition would trigger a job named ‘sbom’ that will generate the SBOM file(s) out of the repository source. To take advantage of SBOM generation, one can use some additional parameters one can use to manage the SBOM generation process.</p>

<div data-file=".travis.yml" class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">jobs</span><span class="pi">:</span>
  <span class="na">include</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">os</span><span class="pi">:</span> <span class="s">linux</span>
      <span class="na">dist</span><span class="pi">:</span> <span class="s">focal</span>
      <span class="na">addons</span><span class="pi">:</span>
        <span class="na">sbom</span><span class="pi">:</span>                                          <span class="c1"># new node</span>
          <span class="na">on</span><span class="pi">:</span>
            <span class="na">branch</span><span class="pi">:</span> <span class="s1">'</span><span class="s">branch_name_here'</span>                 <span class="c1"># branch of the repository</span>
          <span class="na">run_phase</span><span class="pi">:</span> <span class="s1">'</span><span class="s">after_success'</span>                   <span class="c1"># when SBOM generation should be executed; see below</span>
          <span class="na">output_format</span><span class="pi">:</span> <span class="s1">'</span><span class="s">cyclonedx-json'</span>              <span class="c1"># SBOM file(s) output format</span>
          <span class="na">input_dir</span><span class="pi">:</span> <span class="s1">'</span><span class="s">/sbom/ruby'</span>                      <span class="c1"># relative paths within build job environments, see below</span>
          <span class="na">output_dir</span><span class="pi">:</span> <span class="s1">'</span><span class="s">/sbom/ruby'</span>
</code></pre></div></div>

<p>The new <code class="highlighter-rouge">sbom</code> node has the following available properties:</p>

<ul>
  <li><code class="highlighter-rouge">on.branch</code> - by default, the SBOM generator is enabled for commits triggering builds from all branches. However, this may not be the desired state of things, and therefore, here, a user can provide a branch name to limit SBOM generation to, e.g., <em>release</em> branch builds.</li>
  <li><code class="highlighter-rouge">run_phase</code> - refers to a build job phase. <a href="/user/for-beginners/#builds-stages-jobs-and-phases">Builds have stages grouping jobs, and jobs have specific phases</a>. By default, the SBOM generation is set to run in <em>on_success</em> job <a href="/user/job-lifecycle/#the-job-lifecycle">lifecycle phase</a> (assuming one would want to generate SBOM for a successful build &amp; test run in case of single job build). Allowed values are:
    <ul>
      <li><code class="highlighter-rouge">before_script</code> - before the script phase</li>
      <li><code class="highlighter-rouge">script</code> - usually main build job instructions phase</li>
      <li><code class="highlighter-rouge">after_success</code> (DEFAULT value) - when the build job succeeds, the result is available in the TRAVIS_TEST_RESULT environment variable</li>
      <li><code class="highlighter-rouge">after_failure</code></li>
    </ul>
  </li>
  <li><code class="highlighter-rouge">output_format</code> - defines the SBOM format for the output file(s). By default this is set to <em>cyclonedx-json</em>. Allowed values are:
    <ul>
      <li><code class="highlighter-rouge">cyclonedx-json</code> - CycloneDX SBOM format, JSON file</li>
      <li><code class="highlighter-rouge">cyclonedx-xml</code> - CycloneDX SBOM format, XML file</li>
      <li><code class="highlighter-rouge">spdx-xml</code> - SPDX SBOM format, XML file</li>
    </ul>
  </li>
  <li><code class="highlighter-rouge">input_dir</code> - is an input source code directorycontaining a package manager file corresponding to the programming language. It is relative to the build job environment. The default path for SBOM input is the build input directory */home/travis/build/<repository slug="">*. However, if specific software source code parts are kept in repository subdirectories (e.g., frontend or backend of application or, e.g., */lib* subdirectory), one may want to generate SBOM only over this subdirectory. In order to do that, `input_dir: /<repository subdirectory="">` (which would take as input directory the */home/travis/build/<repository slug="">/<repository subdirectory="">*) should be explicitly provided.</repository></repository></repository></repository></li>
  <li><code class="highlighter-rouge">output_dir</code> - this is the output directory, where SBOM file(s) are placed once the SBOM generation is finished. The default output path should is */home/travis/build/<repo slug="">/sbom-<TRAVIS_JOB_ID>* where TRAVIS_JOB_ID is a [default environment variable](/user/environment-variables#default-environment-variables) present in the build job. If this parameter is used, e.g., `output_dir: /my_subdir` is provided, the SBOM files are placed in a subdirectory  relative to */home/travis/build/<repo slug="">/*, e.g., in `/home/travis/build/<repo slug="">/my_subdir`</repo></repo></TRAVIS_JOB_ID></repo></li>
</ul>

<h2 id="how-to-deploy-sbom-files-to-target-location">How to deploy SBOM file(s) to target location? <a href="#how-to-deploy-sbom-files-to-target-location" class="toc-anchor">#</a></h2>

<p>Travis CI does not maintain an SBOM registry. Every user is free to take the generated SBOM files from the <code class="highlighter-rouge">output_dir</code> location and transfer them to the selected destination via proper instructions placed in the <code class="highlighter-rouge">.travis.yml</code>.</p>

<blockquote>
  <p>Please note: Transferring SBOM files must be defined in the build job phase occurring <strong>after</strong> the SBOM is generated!</p>
</blockquote>

<p>Please remember that Travis CI build job environments are ephemeral, and once the build job is finished, the environment is destroyed. Thus if SBOM file(s) are to be sent or deployed, the deployment step must occur in the same build job in which SBOM files were generated.</p>

<p>It is possible to use Travis CI <a href="/user/deployment">deployment</a> functionality to keep the instructions in <code class="highlighter-rouge">.travis.yml</code> consistent and deploy SBOM file(s) alongside your release package. An example of deploying generated SBOM files could be as follows:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">jobs</span><span class="pi">:</span>
  <span class="na">include</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">os</span><span class="pi">:</span> <span class="s">linux</span>
      <span class="na">dist</span><span class="pi">:</span> <span class="s">focal</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">SBOM Ruby</span>
      <span class="na">os</span><span class="pi">:</span> <span class="s">linux</span>
      <span class="na">language</span><span class="pi">:</span> <span class="s">ruby</span>
      <span class="na">script</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="s">gem build ./sbom/ruby/hello_world.gemspec</span>
      <span class="na">addons</span><span class="pi">:</span>
        <span class="na">sbom</span><span class="pi">:</span>
          <span class="na">on</span><span class="pi">:</span>
            <span class="na">branch</span><span class="pi">:</span> <span class="s1">'</span><span class="s">sbom'</span>
          <span class="na">run_phase</span><span class="pi">:</span> <span class="s1">'</span><span class="s">after_success'</span>
          <span class="na">output_format</span><span class="pi">:</span> <span class="s1">'</span><span class="s">cyclonedx-json'</span>
          <span class="na">input_dir</span><span class="pi">:</span> <span class="s1">'</span><span class="s">/sbom/ruby'</span>
          <span class="na">output_dir</span><span class="pi">:</span> <span class="s1">'</span><span class="s">/sbom/ruby'</span>
      <span class="na">deploy</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="na">provider</span><span class="pi">:</span> <span class="s">releases</span>    <span class="c1"># deploying to GitHub Releases</span>
          <span class="na">edge</span><span class="pi">:</span> <span class="no">true</span>
          <span class="na">file_glob</span><span class="pi">:</span> <span class="no">true</span>
          <span class="na">file</span><span class="pi">:</span> <span class="s">sbom/ruby/**/*</span>
          <span class="na">skip_cleanup</span><span class="pi">:</span> <span class="no">true</span>
          <span class="na">on</span><span class="pi">:</span>
            <span class="na">branch</span><span class="pi">:</span> <span class="s">sbom</span>
        <span class="pi">-</span> <span class="na">provider</span><span class="pi">:</span> <span class="s">s3</span>          <span class="c1"># deploying to target AWS S3 Bucket</span>
          <span class="na">edge</span><span class="pi">:</span> <span class="no">true</span>
          <span class="na">bucket</span><span class="pi">:</span> <span class="s2">"</span><span class="s">sbom-test"</span>
          <span class="na">skip_cleanup</span><span class="pi">:</span> <span class="no">true</span>
          <span class="na">local_dir</span><span class="pi">:</span> <span class="s">sbom/ruby</span>
          <span class="na">on</span><span class="pi">:</span>
            <span class="na">branch</span><span class="pi">:</span> <span class="s">sbom</span>
</code></pre></div></div>

<p>See more examples in our <a href="https://github.com/travis-ci/travis-tests/blob/sbom/.travis.yml#L44-L158">test repository</a>.</p>

<h2 id="remarks">Remarks <a href="#remarks" class="toc-anchor">#</a></h2>

<p>If multiple SBOM files are generated, pack them into a single file before sending them to the target location.
For security reasons, if you are outputting the SBOM file(s) content to the build job log, you may want to limit access to such job logs. <a href="/user/disable-job-logs/#limiting-access-to-build-job-logs">Read more</a>.
Consider signing your release and SBOM file(s) before deploying the package. <a href="/user/securely-signing-software">Read more</a>.</p>


        </main>
      </div><!-- /#content -->

      <footer class="footer">
  <div class="layout-inner">
    <div class="footer-elem">
      <svg width="142px" height="45.381px" viewBox="0 0 142 45.381" enable-background="new 0 0 142 45.381" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink= "http://www.w3.org/1999/xlink">
        <title>Travis CI Mascot</title>
        <image xlink:href="https://styleguide.travis-ci.com/images/logos/travis-footer-logo-new.svg" x="0" y="0" width="142px" height="45.381px" />
      </svg>
    </div>

    <div class="footer-elem"></div>

    <div class="footer-elem">
      <h3 class="footer-title">©Travis CI, GmbH</h3>
      <address>Rigaer Straße 8<br>10247 Berlin, Germany</address>
      <ul>
        <li><a href="https://travisci.workable.com/" title="Jobs at Travis CI">Work with Travis CI</a></li>
      </ul>
    </div>

    <div class="footer-elem">
      <h3 class="footer-title">Help</h3>
      <ul>
        <li><a href="https://docs.travis-ci.com" title="Travis CI Docs">Documentation</a></li>
        <li><a href="https://changelog.travis-ci.com/">Changelog</a></li>
        <li><a href="https://blog.travis-ci.com/" title="Travis CI Blog">Blog</a></li>
        <li><a href="mailto:support@travis-ci.com" title="Email Travis CI support">Email</a></li>
        <li><a href="https://twitter.com/travisci" title="Travis CI on Twitter">Twitter</a></li>
      </ul>
    </div>

    <div class="footer-elem">
      <h3 class="footer-title">Company</h3>
      <ul>
        <li><a href="/imprint.html" title="Imprint">Imprint</a></li>
        <li><a href="https://ideracorp.com/legal/TravisCI">Legal</a></li>
      </ul>
    </div>

    <div class="footer-elem">
      <h3 class="footer-title">Travis CI Status</h3>
      <ul>
        <li><div class="status-circle none">Status:</div>
          <a href="http://www.traviscistatus.com/">Travis CI Status</a>
        </li>
      </ul>
    </div>
  </div>
</footer>

<script>
 fetch('https://pnpcptp8xh9k.statuspage.io/api/v2/status.json').then(function(response) {
   return response.json();
 }).then(function(data) {
   if (data.status && data.status.indicator) {
     document.querySelector('.status-circle').classList.add(data.status.indicator);
   }
 });
</script>

    </div><!-- /.wrapper -->
  </body>
</html>
 contentType 9 text/html url 40 https://docs.travis-ci.com:443/user/sbom responseCode 3 200 