gikgvisiccosvischgggjqycioacrabaqcpswgjc length 5 63012 page 63012 <!DOCTYPE html>

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />

    <title>Medical Records Application &#8212; Cordra  documentation</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/alabaster.css" />
    <link rel="stylesheet" type="text/css" href="../_static/minimal-fixes.css" />
    <script data-url_root="../" id="documentation_options" src="../_static/documentation_options.js"></script>
    <script src="../_static/doctools.js"></script>
    <script src="../_static/sphinx_highlight.js"></script>
    <link rel="index" title="Index" href="../genindex.html" />
    <link rel="search" title="Search" href="../search.html" />
    <link rel="next" title="Person Registry" href="person-registry.html" />
    <link rel="prev" title="Document Repository" href="document-repository.html" />
    <link rel="shortcut icon" href="../_static/img/favicon.ico" type="image/x-icon">
    <link href='https://fonts.googleapis.com/css?family=Montserrat:400,700%7COpen+Sans:300,400,700,800' rel='stylesheet' />
    <link href='https://fonts.googleapis.com/css?family=Rasa:400,700%7COpen+Sans:300,400,700,800' rel='stylesheet' />
    <link rel="stylesheet" href="../_static/libs/font-awesome/css/font-awesome.min.css"></link>
    <link rel="stylesheet" href="../_static/libs/bootstrap/dist/css/bootstrap.min.css"></link>
    <link rel="stylesheet" href="../_static/icons/nucleo.css"></link>
    <link rel="stylesheet" href="../_static/libs/animate.css/animate.min.css"></link>
    <link rel="stylesheet" href="../_static/css/bootstrap.min.css"></link>
    <link rel="stylesheet" href="../_static/css/blog.css"></link>
    <link rel="stylesheet" href="../_static/css/buttons.css"></link>
    <link rel="stylesheet" href="../_static/css/colors.css"></link>
    <link rel="stylesheet" href="../_static/css/footers.css"></link>
    <link rel="stylesheet" href="../_static/css/widgets.css"></link>
    <link rel="stylesheet" href="../_static/css/nav.css"></link>
    <link rel="stylesheet" href="../_static/css/preloader.css"></link>
    <link rel="stylesheet" href="../_static/css/custom.css"></link>
    <link rel="stylesheet" href="../_static/css/ui.css"></link>

  </head><body>
<!-- BEGIN LATERAL NAVIGATION -->
<aside id="aside-nav">
    <div id="main-aside-navigation">
        <div class="main-nav-wrapper">
            <div class="close-aside-nav">
                <i class="nc-icon-outline ui-1_simple-remove"></i>
            </div>
            <div id="aside-logo">
                    <a href="/index.html" data-logo-light="../_static/img/cordra-light.png" data-logo-dark="../_static/img/cordra-primary-blue.png">
                    <img width="170" height="166" src="../_static/img/cordra-primary-blue.png" alt="logo">
                </a>
            </div>
            <nav id="main-aside-menu">
                <ul>
                    <li class="submenu">
                        <a href="/cordra.html">What's Cordra?</a>
                    </li>
                    <li class="submenu">
                        <a href="/getstarted.html">Get Started</a>
                    </li>
                    <li class="submenu">
                        <a href="/download.html">Download</a>
                    </li>
                    <li class="submenu">
                        <a href="/documentation/introduction/introduction.html">Developer Resources</a>
                    </li>
                    <li class="submenu">
                        <a href="/standards.html">Standards</a>
                    </li>
                    <li class="submenu">
                        <a href="../search.html">Search</a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</aside>
<!-- END LATERAL NAVIGATION -->

<!-- BEGIN MAIN NAVIGATION -->
<header id="header">
    <div id="main-navigation">
        <div class="main-nav-wrapper">
            <div class="container-fluid">
                <div class="nav-left">
                    <div id="logo">
                        <a href="/index.html" data-logo-light="../_static/img/cordra-light.png" data-logo-dark="../_static/img/cordra-primary-blue.png">
                        <img width="145" height="36" src="../_static/img/cordra-primary-blue.png" alt="logo">
                        </a>
                    </div>
                </div>
                <div class="nav-right">
                    <nav id="main-menu">
                        <ul>
                            <li class="mega-menu menu-layouts">
                                <a href="/cordra.html">What's Cordra?</a>
                            </li>
                            <li class="mega-menu menu-layouts">
                                <a href="/getstarted.html">Get Started</a>
                            </li>
                            <li>
                                <a href="/download.html">Download</a>
                            </li>
                            <li class="mega-menu">
                                <a href="/documentation/introduction/introduction.html">Developer Resources</a>
                            </li>
                            <li class="mega-menu">
                                <a href="/standards.html">Standards</a>
                            </li>
                            <li class="mega-menu">
                                <a href="../search.html">Search</a>
                            </li>
                        </ul>
                    </nav>
                    <ul class="nav-tools">
                        <li class="mobile-menu-btn">
                            <button class="toggle-menu" data-toggle="mobile-menu" data-effect="hover">
                                <span class="menu-label label-left">Menu</span>
                                <i class="nc-icon-outline ui-2_menu-35"></i>
                            </button>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</header>
<!-- END MAIN NAVIGATION -->


  <div class="document">
    
      <div class="sphinxsidebar" role="navigation" aria-label="main navigation">
        <div class="sphinxsidebarwrapper">
<div id="searchbox" style="display: none" role="search">
  <h3 id="searchlabel">Quick search</h3>
    <div class="searchformwrapper">
    <form class="search" action="../search.html" method="get">
      <input type="text" name="q" aria-labelledby="searchlabel" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false"/>
      <input type="submit" value="Go" />
    </form>
    </div>
</div>
<script>document.getElementById('searchbox').style.display = "block"</script><h3>Navigation</h3>
<ul class="current">
<li class="toctree-l1"><a class="reference external" href="https://hdl.handle.net/20.1000/129">Developer Resources (in PDF)</a></li>
<li class="toctree-l1"><a class="reference internal" href="../introduction/index.html">Cordra Software</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../introduction/introduction.html">Introduction to Cordra</a></li>
<li class="toctree-l2"><a class="reference internal" href="../introduction/release-notes.html">Release Notes</a></li>
<li class="toctree-l2"><a class="reference internal" href="../introduction/system-requirements.html">System Requirements</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../design/index.html">Application Design</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../design/introduction.html">Introduction</a></li>
<li class="toctree-l2"><a class="reference internal" href="../design/identifiers.html">Identifiers</a></li>
<li class="toctree-l2"><a class="reference internal" href="../design/schemas.html">Schemas/Types</a></li>
<li class="toctree-l2"><a class="reference internal" href="../design/design-object.html">Design Object</a></li>
<li class="toctree-l2"><a class="reference internal" href="../design/payloads.html">Payloads</a></li>
<li class="toctree-l2"><a class="reference internal" href="../design/authentication-and-access-controls.html">Authentication and Access Controls</a></li>
<li class="toctree-l2"><a class="reference internal" href="../design/javascript-lifecycle-hooks.html">Lifecycle Hooks</a></li>
<li class="toctree-l2"><a class="reference internal" href="../design/type-methods.html">Type Methods</a></li>
<li class="toctree-l2"><a class="reference internal" href="../design/java-hooks-and-methods.html">Java Hooks and Methods</a></li>
<li class="toctree-l2"><a class="reference internal" href="../design/handle-integration.html">Handle Integration</a></li>
<li class="toctree-l2"><a class="reference internal" href="../design/object-versioning.html">Digital Object Versioning</a></li>
<li class="toctree-l2"><a class="reference internal" href="../design/object-hashing.html">Digital Object Hashing</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../api/index.html">APIs</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../api/introduction.html">Introduction</a></li>
<li class="toctree-l2"><a class="reference internal" href="../api/doip.html">DOIP and Examples</a></li>
<li class="toctree-l2"><a class="reference internal" href="../api/doip-api-for-http-clients.html">DOIP API for HTTP Clients</a></li>
<li class="toctree-l2"><a class="reference internal" href="../api/rest-api.html">HTTP REST API and Examples</a></li>
<li class="toctree-l2"><a class="reference internal" href="../api/search.html">Query Syntax</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../client/index.html">Clients</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../client/introduction.html">Introduction</a></li>
<li class="toctree-l2"><a class="reference internal" href="../client/rest-java.html">REST - Java</a></li>
<li class="toctree-l2"><a class="reference internal" href="../client/javascript.html">REST - JavaScript</a></li>
<li class="toctree-l2"><a class="reference internal" href="../client/doip-java.html">DOIP - Java</a></li>
<li class="toctree-l2"><a class="reference internal" href="../client/third-party.html">Third Party Clients</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../configuration/index.html">Configuration</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../configuration/introduction.html">Introduction</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/single-instance-deployment.html">Deploying Single-Instance Cordra</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/single-instance-production.html">Production Single Instance Deployment</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/distributed-deployment.html">Deploying Cordra as a Distributed System</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/reindexing.html">Reindexing</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/logs-management.html">Managing Cordra Logs</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/storage-backends.html">Configuring Storage Backend</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/indexing-backends.html">Configuring Indexing Backend</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/sessions-manager.html">Distributed Sessions Manager</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/user-management.html">Managing Users and Groups</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/admin-user-interface.html">Administrative UI</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/enabling-tls.html">Enabling TLS</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/https.html">Configuring HTTPS Keys</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/migration.html">Migration across Cordra Environments</a></li>
</ul>
</li>
<li class="toctree-l1 current"><a class="reference internal" href="index.html">Extensions and Applications</a><ul class="current">
<li class="toctree-l2"><a class="reference internal" href="calling-java-from-javascript.html">Calling Java from JavaScript</a></li>
<li class="toctree-l2"><a class="reference internal" href="document-repository.html">Document Repository</a></li>
<li class="toctree-l2 current"><a class="current reference internal" href="#">Medical Records Application</a></li>
<li class="toctree-l2"><a class="reference internal" href="person-registry.html">Person Registry</a></li>
<li class="toctree-l2"><a class="reference internal" href="user-registration.html">User Registration</a></li>
<li class="toctree-l2"><a class="reference internal" href="object-linking.html">Digital Object Linking</a></li>
<li class="toctree-l2"><a class="reference internal" href="oai-pmh.html">OAI-PMH in Cordra</a></li>
<li class="toctree-l2"><a class="reference internal" href="sending-emails.html">Sending Emails</a></li>
<li class="toctree-l2"><a class="reference internal" href="external-authentication-provider.html">External Authentication Provider</a></li>
<li class="toctree-l2"><a class="reference internal" href="collab-prototype.html">Collab Prototype Software</a></li>
<li class="toctree-l2"><a class="reference internal" href="neo4j-as-an-additional-index.html">Neo4j as an Additional Index</a></li>
<li class="toctree-l2"><a class="reference internal" href="partial-replication-aggregation.html">Partial Replication/Aggregation</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../tools/index.html">Tools</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../tools/import-export.html">Import and Export Tools</a></li>
</ul>
</li>
</ul>


        </div>
      </div>
      <div class="documentwrapper">
        <div class="bodywrapper">
          

          <div class="body" role="main">
            
  <section id="medical-records-application">
<span id="emr"></span><h1>Medical Records Application<a class="headerlink" href="#medical-records-application" title="Permalink to this heading">¶</a></h1>
<p>We show below how to configure Cordra to behave like a sample Medical Records Application that could act as a starting
point to create a comprehensive system for managing patient medical records.</p>
<section id="narrative">
<h2>Narrative<a class="headerlink" href="#narrative" title="Permalink to this heading">¶</a></h2>
<p>This sample application supports the following narrative:</p>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">Patients</span></code> visit <code class="docutils literal notranslate"><span class="pre">Providers</span></code>. Information is created during those visits, i.e., <code class="docutils literal notranslate"><span class="pre">Encounters</span></code>.</p></li>
<li><p>Providers have areas of expertise that determine their speciality: <code class="docutils literal notranslate"><span class="pre">General</span> <span class="pre">Physician</span></code> and <code class="docutils literal notranslate"><span class="pre">Endocrinologist</span></code>
are supported here.</p></li>
<li><p>Patients encounters begin with a General Physician (GP) and the GP may order tests at the <code class="docutils literal notranslate"><span class="pre">Labs</span></code>.</p></li>
<li><p>Lab tests produce additional information.</p></li>
<li><p>GP may recommend patients to specialists.</p></li>
<li><p>Patients encounter with specialists produces more information.</p></li>
</ul>
<p>Also,</p>
<ul class="simple">
<li><p>Patients have read access to their medical information.</p></li>
<li><p>Providers who see patients have read/write access to the medical information they create.</p></li>
<li><p>In one possible scenario, patients must specifically give providers’ access to their information when they visit
new providers.</p></li>
<li><p>In another possible scenario, the referring provider may give the referred provider access to the patient information.</p></li>
<li><p>Labs do not have access to any medical information, by default. Patients must give explicit access.</p></li>
</ul>
<p>We describe below how to support the aforementioned narrative, beginning with the design.</p>
</section>
<section id="design">
<h2>Design<a class="headerlink" href="#design" title="Permalink to this heading">¶</a></h2>
<p>We will create four different types of digital objects:</p>
<ol class="arabic simple">
<li><p><code class="docutils literal notranslate"><span class="pre">Patient</span></code> type to capture information about patients. Patient Id, Name, Age, and Sex are captured.</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">Provider</span></code> type to capture information about providers. Provider Id, Name, and Speciality are captured.</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">Lab</span></code> type to capture information about labs. Lab Id and Name are captured.</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">Encounter</span></code> type to capture medical information created by providers or generated due to lab tests. Specifically:</p>
<ul class="simple">
<li><p>Timestamp,</p></li>
<li><p>Patient Id,</p></li>
<li><p>Producer (to reflect the Id of the provider and/or the lab that produced the information)</p></li>
<li><p>Notes (to capture provider observations or lab results)</p></li>
<li><p>Referred (to capture the Id of the provider or the lab to whom the patient is referred)</p></li>
<li><p>Referral Details (to capture lab prescriptions or details why the patient is referred to a specialist).</p></li>
</ul>
</li>
</ol>
<section id="authentication-and-authorization">
<h3>Authentication and Authorization<a class="headerlink" href="#authentication-and-authorization" title="Permalink to this heading">¶</a></h3>
<p>While we assume PKI will normally be enabled for a production application for security, and the system can require that
patients, providers, and labs authenticate via private keys, we described the use of passwords below to keep the
example simple. In addition to the aforementioned attributes for Patient, Provider, and Lab, we add <code class="docutils literal notranslate"><span class="pre">password</span></code>
attribute as can be seen in the schemas below. In that sense, patients, providers, and labs are all treated as users of the
system.</p>
<p>A patient has read access to encounters that are about them. A provider has read/write access to encounters that are
generated by them. Other providers (or labs) will only have access to encounters if they are explicitly shared. We
will see how later in this tutorial.</p>
<p>When signed in as the admin user select Admin-&gt;Authorization from the menu bar to specify type-level access control.
This JSON is stored on the Design object and will be loaded automatically when you “Load from file” as described later on.
For keeping this description simple, this particular authorization configuration allows Patients, Providers, and Labs to
be read by all users but only be modified by the representative party. Encounter objects do not allow readers or writers
at the type level as their particular readers and writers are calculated in JavaScript for each specific instance of an Encounter.</p>
<p>Type-level Access Control:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>{
  &quot;schemaAcls&quot;: {
    &quot;CordraDesign&quot;: {
      &quot;defaultAclRead&quot;: [
        &quot;public&quot;
      ],
      &quot;defaultAclWrite&quot;: [],
      &quot;aclCreate&quot;: []
    },
    &quot;Schema&quot;: {
      &quot;defaultAclRead&quot;: [
        &quot;public&quot;
      ],
      &quot;defaultAclWrite&quot;: [],
      &quot;aclCreate&quot;: []
    },
    &quot;Patient&quot;: {
      &quot;defaultAclRead&quot;: [
        &quot;authenticated&quot;
      ],
      &quot;defaultAclWrite&quot;: [
        &quot;self&quot;
      ],
      &quot;aclCreate&quot;: []
    },
    &quot;Encounter&quot;: {
      &quot;defaultAclRead&quot;: [],
      &quot;defaultAclWrite&quot;: [],
      &quot;aclCreate&quot;: [
        &quot;authenticated&quot;
      ]
    },
    &quot;Lab&quot;: {
      &quot;defaultAclRead&quot;: [
        &quot;authenticated&quot;
      ],
      &quot;defaultAclWrite&quot;: [
        &quot;self&quot;
      ],
      &quot;aclCreate&quot;: []
    },
    &quot;Provider&quot;: {
      &quot;defaultAclRead&quot;: [
        &quot;authenticated&quot;
      ],
      &quot;defaultAclWrite&quot;: [
        &quot;self&quot;
      ],
      &quot;aclCreate&quot;: []
    }
  },
  &quot;defaultAcls&quot;: {
    &quot;defaultAclRead&quot;: [
      &quot;authenticated&quot;
    ],
    &quot;defaultAclWrite&quot;: [],
    &quot;aclCreate&quot;: [
      &quot;authenticated&quot;
    ]
  }
}
</pre></div>
</div>
</section>
<section id="schemas">
<h3>Schemas<a class="headerlink" href="#schemas" title="Permalink to this heading">¶</a></h3>
<p>Four types of digital objects are show below: Patient, Provider, Lab, and Encounter. Notice that identifiers of digital
objects are flagged to be auto-generated. The timestamp attribute in the Encounter object is also flagged to be
auto-populated at the time of creation.</p>
<p>Patient Schema:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>{
  &quot;type&quot;: &quot;object&quot;,
  &quot;properties&quot;: {
    &quot;id&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;cordra&quot;: {
        &quot;type&quot;: {
          &quot;autoGeneratedField&quot;: &quot;handle&quot;
        }
      }
    },
    &quot;name&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;cordra&quot;: {
        &quot;preview&quot;: {
          &quot;showInPreview&quot;: true,
          &quot;excludeTitle&quot;: true,
          &quot;isPrimary&quot;: true
        }
      }
    },
    &quot;age&quot;: {
      &quot;type&quot;: &quot;number&quot;,
      &quot;cordra&quot;: {
        &quot;preview&quot;: {
          &quot;showInPreview&quot;: true
        }
      }
    },
    &quot;sex&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;enum&quot;: [
        &quot;male&quot;,
        &quot;female&quot;,
        &quot;other&quot;
      ],
      &quot;cordra&quot;: {
        &quot;preview&quot;: {
          &quot;showInPreview&quot;: true
        }
      }
    },
    &quot;shareEncountersWith&quot;: {
      &quot;type&quot;: &quot;array&quot;,
      &quot;format&quot;: &quot;table&quot;,
      &quot;uniqueItems&quot;: true,
      &quot;items&quot;: {
        &quot;type&quot;: &quot;string&quot;,
        &quot;cordra&quot;: {
          &quot;type&quot;: {
            &quot;handleReference&quot;: {
              &quot;types&quot;: [
                &quot;Provider&quot;,
                &quot;Lab&quot;,
                &quot;Patient&quot;
              ]
            }
          }
        }
      }
    },
    &quot;username&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;cordra&quot;: {
        &quot;preview&quot;: {
          &quot;showInPreview&quot;: true
        },
        &quot;auth&quot;: &quot;username&quot;
      }
    },
    &quot;password&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;format&quot;: &quot;password&quot;,
      &quot;cordra&quot;: {
        &quot;auth&quot;: &quot;password&quot;
      }
    }
  }
}
</pre></div>
</div>
<p>Provider Schema:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>{
  &quot;type&quot;: &quot;object&quot;,
  &quot;properties&quot;: {
    &quot;id&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;cordra&quot;: {
        &quot;type&quot;: {
          &quot;autoGeneratedField&quot;: &quot;handle&quot;
        }
      }
    },
    &quot;name&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;cordra&quot;: {
        &quot;preview&quot;: {
          &quot;showInPreview&quot;: true,
          &quot;isPrimary&quot;: true
        }
      }
    },
    &quot;speciality&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;enum&quot;: [
        &quot;General Physician&quot;,
        &quot;Endocronologist&quot;
      ],
      &quot;cordra&quot;: {
        &quot;preview&quot;: {
          &quot;showInPreview&quot;: true
        }
      }
    },
    &quot;username&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;cordra&quot;: {
        &quot;preview&quot;: {
          &quot;showInPreview&quot;: true
        },
        &quot;auth&quot;: &quot;username&quot;
      }
    },
    &quot;password&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;format&quot;: &quot;password&quot;,
      &quot;cordra&quot;: {
        &quot;auth&quot;: &quot;password&quot;
      }
    }
  }
}
</pre></div>
</div>
<p>Lab Schema:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>{
  &quot;type&quot;: &quot;object&quot;,
  &quot;properties&quot;: {
    &quot;id&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;cordra&quot;: {
        &quot;type&quot;: {
          &quot;autoGeneratedField&quot;: &quot;handle&quot;
        }
      }
    },
    &quot;name&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;cordra&quot;: {
        &quot;preview&quot;: {
          &quot;showInPreview&quot;: true,
          &quot;isPrimary&quot;: true
        }
      }
    },
    &quot;username&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;cordra&quot;: {
        &quot;preview&quot;: {
          &quot;showInPreview&quot;: true
        },
        &quot;auth&quot;: &quot;username&quot;
      }
    },
    &quot;password&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;format&quot;: &quot;password&quot;,
      &quot;cordra&quot;: {
        &quot;auth&quot;: &quot;password&quot;
      }
    }
  }
}
</pre></div>
</div>
<p>Encounter Schema:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>{
  &quot;type&quot;: &quot;object&quot;,
  &quot;properties&quot;: {
    &quot;id&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;cordra&quot;: {
        &quot;type&quot;: {
          &quot;autoGeneratedField&quot;: &quot;handle&quot;
        }
      }
    },
    &quot;timestamp&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;cordra&quot;: {
        &quot;type&quot;: {
          &quot;autoGeneratedField&quot;: &quot;creationDate&quot;
        }
      }
    },
    &quot;producer&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;cordra&quot;: {
        &quot;type&quot;: {
          &quot;autoGeneratedField&quot;: &quot;createdBy&quot;
        }
      }
    },
    &quot;patientId&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;cordra&quot;: {
        &quot;type&quot;: {
          &quot;handleReference&quot;: {
            &quot;types&quot;: [
              &quot;Patient&quot;
            ]
          }
        }
      }
    },
    &quot;shareWith&quot;: {
      &quot;type&quot;: &quot;array&quot;,
      &quot;format&quot;: &quot;table&quot;,
      &quot;uniqueItems&quot;: true,
      &quot;items&quot;: {
        &quot;type&quot;: &quot;string&quot;,
        &quot;cordra&quot;: {
          &quot;type&quot;: {
            &quot;handleReference&quot;: {
              &quot;types&quot;: [
                &quot;Provider&quot;,
                &quot;Lab&quot;,
                &quot;Patient&quot;
              ]
            }
          }
        }
      }
    },
    &quot;notes&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;format&quot;: &quot;textarea&quot;
    },
    &quot;referred&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;cordra&quot;: {
        &quot;type&quot;: {
          &quot;handleReference&quot;: {
            &quot;types&quot;: [
              &quot;Provider&quot;,
              &quot;Lab&quot;
            ]
          }
        }
      }
    },
    &quot;referralDetails&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;format&quot;: &quot;textarea&quot;
    }
  }
}
</pre></div>
</div>
</section>
<section id="rules">
<h3>Rules<a class="headerlink" href="#rules" title="Permalink to this heading">¶</a></h3>
<p>Using JavaScript rules, we will ensure that an encounter can be read by the referenced patient.
We will also ensure that an encounter can be read or written by the referenced provider or lab.</p>
<p>Associate the following JavaScript with the encounter type.</p>
<div class="highlight-js notranslate"><div class="highlight"><pre><span></span><span class="kd">var</span><span class="w"> </span><span class="nx">cordra</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">require</span><span class="p">(</span><span class="s2">&quot;cordra&quot;</span><span class="p">);</span>

<span class="nx">exports</span><span class="p">.</span><span class="nx">beforeSchemaValidation</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">beforeSchemaValidation</span><span class="p">;</span>
<span class="nx">exports</span><span class="p">.</span><span class="nx">beforeDelete</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">beforeDelete</span><span class="p">;</span>

<span class="kd">function</span><span class="w"> </span><span class="nx">beforeDelete</span><span class="p">(</span><span class="nx">encounter</span><span class="p">,</span><span class="w"> </span><span class="nx">context</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nx">encounter</span><span class="p">.</span><span class="nx">content</span><span class="p">.</span><span class="nx">patientId</span><span class="w"> </span><span class="o">===</span><span class="w"> </span><span class="nx">context</span><span class="p">.</span><span class="nx">userId</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="k">throw</span><span class="w"> </span><span class="s2">&quot;Patients are not permitted to delete encounters&quot;</span><span class="p">;</span>
<span class="w">    </span><span class="p">}</span>
<span class="p">}</span>

<span class="kd">function</span><span class="w"> </span><span class="nx">beforeSchemaValidation</span><span class="p">(</span><span class="nx">encounter</span><span class="p">,</span><span class="w"> </span><span class="nx">context</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nx">encounter</span><span class="p">.</span><span class="nx">content</span><span class="p">.</span><span class="nx">patientId</span><span class="w"> </span><span class="o">===</span><span class="w"> </span><span class="nx">context</span><span class="p">.</span><span class="nx">userId</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="nx">authorizePatientPermittedToMakeRequest</span><span class="p">(</span><span class="nx">encounter</span><span class="p">,</span><span class="w"> </span><span class="nx">context</span><span class="p">);</span>
<span class="w">    </span><span class="p">}</span>

<span class="w">    </span><span class="nx">encounter</span><span class="p">.</span><span class="nx">acl</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">{};</span>
<span class="w">    </span><span class="nx">encounter</span><span class="p">.</span><span class="nx">acl</span><span class="p">.</span><span class="nx">writers</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">[];</span>
<span class="w">    </span><span class="nx">encounter</span><span class="p">.</span><span class="nx">acl</span><span class="p">.</span><span class="nx">readers</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">[];</span>

<span class="w">    </span><span class="nx">addIfAbsent</span><span class="p">(</span><span class="nx">encounter</span><span class="p">.</span><span class="nx">acl</span><span class="p">.</span><span class="nx">writers</span><span class="p">,</span><span class="w"> </span><span class="nx">encounter</span><span class="p">.</span><span class="nx">content</span><span class="p">.</span><span class="nx">patientId</span><span class="p">);</span>
<span class="w">    </span><span class="c1">//Note that JavaScript prevents the patient from actually</span>
<span class="w">    </span><span class="c1">//editing the content of the object, they can only edit shareWith property</span>
<span class="w">    </span><span class="nx">addIfAbsent</span><span class="p">(</span><span class="nx">encounter</span><span class="p">.</span><span class="nx">acl</span><span class="p">.</span><span class="nx">readers</span><span class="p">,</span><span class="w"> </span><span class="nx">encounter</span><span class="p">.</span><span class="nx">content</span><span class="p">.</span><span class="nx">patientId</span><span class="p">);</span>

<span class="w">    </span><span class="kd">var</span><span class="w"> </span><span class="nx">producer</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">encounter</span><span class="p">.</span><span class="nx">content</span><span class="p">.</span><span class="nx">producer</span><span class="p">;</span>
<span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">isNew</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="nx">producer</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">context</span><span class="p">.</span><span class="nx">userId</span><span class="p">;</span>
<span class="w">    </span><span class="p">}</span>
<span class="w">    </span><span class="nx">addIfAbsent</span><span class="p">(</span><span class="nx">encounter</span><span class="p">.</span><span class="nx">acl</span><span class="p">.</span><span class="nx">writers</span><span class="p">,</span><span class="w"> </span><span class="nx">producer</span><span class="p">);</span>
<span class="w">    </span><span class="nx">addIfAbsent</span><span class="p">(</span><span class="nx">encounter</span><span class="p">.</span><span class="nx">acl</span><span class="p">.</span><span class="nx">readers</span><span class="p">,</span><span class="w"> </span><span class="nx">producer</span><span class="p">);</span>

<span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nx">encounter</span><span class="p">.</span><span class="nx">content</span><span class="p">.</span><span class="nx">referred</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="nx">addIfAbsent</span><span class="p">(</span><span class="nx">encounter</span><span class="p">.</span><span class="nx">acl</span><span class="p">.</span><span class="nx">readers</span><span class="p">,</span><span class="w"> </span><span class="nx">encounter</span><span class="p">.</span><span class="nx">content</span><span class="p">.</span><span class="nx">referred</span><span class="p">);</span>
<span class="w">    </span><span class="p">}</span>
<span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nx">encounter</span><span class="p">.</span><span class="nx">content</span><span class="p">.</span><span class="nx">shareWith</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="nx">addAll</span><span class="p">(</span><span class="nx">encounter</span><span class="p">.</span><span class="nx">acl</span><span class="p">.</span><span class="nx">readers</span><span class="p">,</span><span class="w"> </span><span class="nx">encounter</span><span class="p">.</span><span class="nx">content</span><span class="p">.</span><span class="nx">shareWith</span><span class="p">);</span>
<span class="w">    </span><span class="p">}</span>

<span class="w">    </span><span class="kd">var</span><span class="w"> </span><span class="nx">patient</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">cordra</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">encounter</span><span class="p">.</span><span class="nx">content</span><span class="p">.</span><span class="nx">patientId</span><span class="p">);</span>
<span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nx">patient</span><span class="p">.</span><span class="nx">content</span><span class="p">.</span><span class="nx">shareEncountersWith</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="nx">addAll</span><span class="p">(</span><span class="nx">encounter</span><span class="p">.</span><span class="nx">acl</span><span class="p">.</span><span class="nx">readers</span><span class="p">,</span><span class="w"> </span><span class="nx">patient</span><span class="p">.</span><span class="nx">content</span><span class="p">.</span><span class="nx">shareEncountersWith</span><span class="p">);</span>
<span class="w">    </span><span class="p">}</span>
<span class="w">    </span><span class="k">return</span><span class="w"> </span><span class="nx">encounter</span><span class="p">;</span>
<span class="p">}</span>

<span class="kd">function</span><span class="w"> </span><span class="nx">authorizePatientPermittedToMakeRequest</span><span class="p">(</span><span class="nx">encounter</span><span class="p">,</span><span class="w"> </span><span class="nx">context</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nx">isNew</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="k">throw</span><span class="w"> </span><span class="s2">&quot;A patient is not permitted to create encounters&quot;</span><span class="p">;</span>
<span class="w">    </span><span class="p">}</span>
<span class="w">    </span><span class="kd">var</span><span class="w"> </span><span class="nx">oldEncounter</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">cordra</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">encounter</span><span class="p">.</span><span class="nx">id</span><span class="p">);</span>
<span class="w">        </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="o">!</span><span class="nx">isEqual</span><span class="p">(</span><span class="nx">oldEncounter</span><span class="p">.</span><span class="nx">acl</span><span class="p">.</span><span class="nx">readers</span><span class="p">,</span><span class="w"> </span><span class="nx">encounter</span><span class="p">.</span><span class="nx">acl</span><span class="p">.</span><span class="nx">readers</span><span class="p">))</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="k">throw</span><span class="w"> </span><span class="s2">&quot;A patient is not permitted to directly modify the readers acl of an encounter&quot;</span><span class="p">;</span>
<span class="w">    </span><span class="p">}</span>
<span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="o">!</span><span class="nx">isEqual</span><span class="p">(</span><span class="nx">oldEncounter</span><span class="p">.</span><span class="nx">acl</span><span class="p">.</span><span class="nx">writers</span><span class="p">,</span><span class="w"> </span><span class="nx">encounter</span><span class="p">.</span><span class="nx">acl</span><span class="p">.</span><span class="nx">writers</span><span class="p">))</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="k">throw</span><span class="w"> </span><span class="s2">&quot;A patient is not permitted to modify the writers acl of an encounter&quot;</span><span class="p">;</span>
<span class="w">    </span><span class="p">}</span>
<span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="o">!</span><span class="nx">isEqualWithoutShareWith</span><span class="p">(</span><span class="nx">oldEncounter</span><span class="p">.</span><span class="nx">content</span><span class="p">,</span><span class="w"> </span><span class="nx">encounter</span><span class="p">.</span><span class="nx">content</span><span class="p">))</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="k">throw</span><span class="w"> </span><span class="s2">&quot;A patient is only permitted to modify the &#39;shareWith&#39; property of an encounter&quot;</span><span class="p">;</span>
<span class="w">    </span><span class="p">}</span>
<span class="p">}</span>

<span class="kd">function</span><span class="w"> </span><span class="nx">isEqualWithoutShareWith</span><span class="p">(</span><span class="nx">object</span><span class="p">,</span><span class="w"> </span><span class="nx">oldObject</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="kd">var</span><span class="w"> </span><span class="nx">objectCopy</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nb">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">object</span><span class="p">));</span>
<span class="w">    </span><span class="kd">var</span><span class="w"> </span><span class="nx">oldObjectCopy</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nb">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">oldObject</span><span class="p">));</span>
<span class="w">    </span><span class="ow">delete</span><span class="w"> </span><span class="nx">objectCopy</span><span class="p">.</span><span class="nx">shareWith</span><span class="p">;</span>
<span class="w">    </span><span class="ow">delete</span><span class="w"> </span><span class="nx">oldObjectCopy</span><span class="p">.</span><span class="nx">shareWith</span><span class="p">;</span>
<span class="w">    </span><span class="k">return</span><span class="w"> </span><span class="nx">isEqual</span><span class="p">(</span><span class="nx">objectCopy</span><span class="p">,</span><span class="w"> </span><span class="nx">oldObjectCopy</span><span class="p">);</span>
<span class="p">}</span>

<span class="kd">function</span><span class="w"> </span><span class="nx">isEqual</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="w"> </span><span class="nx">b</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="kd">var</span><span class="w"> </span><span class="nx">aJson</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span>
<span class="w">    </span><span class="kd">var</span><span class="w"> </span><span class="nx">bJson</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span>
<span class="w">    </span><span class="k">return</span><span class="w"> </span><span class="nx">aJson</span><span class="w"> </span><span class="o">===</span><span class="w"> </span><span class="nx">bJson</span><span class="p">;</span>
<span class="p">}</span>

<span class="kd">function</span><span class="w"> </span><span class="nx">addAll</span><span class="p">(</span><span class="nx">list</span><span class="p">,</span><span class="w"> </span><span class="nx">idsToAdd</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="kd">var</span><span class="w"> </span><span class="nx">i</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mf">0</span><span class="p">;</span><span class="w"> </span><span class="nx">i</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="nx">idsToAdd</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="w"> </span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="nx">addIfAbsent</span><span class="p">(</span><span class="nx">list</span><span class="p">,</span><span class="w"> </span><span class="nx">idsToAdd</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span>
<span class="w">    </span><span class="p">}</span>
<span class="p">}</span>

<span class="kd">function</span><span class="w"> </span><span class="nx">addIfAbsent</span><span class="p">(</span><span class="nx">list</span><span class="p">,</span><span class="w"> </span><span class="nx">id</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nx">list</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">id</span><span class="p">)</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="o">-</span><span class="mf">1</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="nx">list</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">id</span><span class="p">);</span>
<span class="w">    </span><span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
</section>
</section>
<section id="setup">
<h2>Setup<a class="headerlink" href="#setup" title="Permalink to this heading">¶</a></h2>
<p>Download the above types <a class="reference download internal" download="" href="../_downloads/a886cd692c6c76dd057f144488c2f3bf/medical-records-example.json"><code class="xref download docutils literal notranslate"><span class="pre">here</span></code></a>. You can then load this
information using the Cordra UI. Sign in into Cordra as <code class="docutils literal notranslate"><span class="pre">admin</span></code> and select the Admin-&gt;Types dropdown menu.
Click the “Load from file” button. In the dialog that pops up, select the types file you downloaded and check
the box to delete existing objects. Click “Load” to import the types into Cordra.</p>
<p>That is it. The system is now ready for use.</p>
</section>
<section id="using-the-application">
<h2>Using the Application<a class="headerlink" href="#using-the-application" title="Permalink to this heading">¶</a></h2>
<p>We will use curl and the REST API to demonstrate how to use the system. JSON records used with the various commands are
also shown below. Although not shown here, the Cordra UI may be used to perform equivalent actions.</p>
<p>For the purpose of this tutorial, the default Cordra address of <code class="docutils literal notranslate"><span class="pre">https://localhost:8443/</span></code> is used. If your Cordra
installation is running at a different location, please make the appropriate substitution. Also, the example curl
commands will use the <code class="docutils literal notranslate"><span class="pre">-k</span></code> flag to tell curl to trust the self-signed certificate that comes with Cordra. This flag
should not be used on production installations with real certificates.</p>
<p>All Ids shown in the sample curl commands were randomly generated. You will need to substitute these values
with the appropriate Ids in your local system.</p>
<section id="authenticating">
<h3>Authenticating<a class="headerlink" href="#authenticating" title="Permalink to this heading">¶</a></h3>
<p>Before issuing any calls that require authorization, we must first authenticate and get an access token:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>curl -k -X POST &#39;https://localhost:8443/auth/token&#39; -H &quot;Content-Type: application/json&quot; --data @- &lt;&lt; END
{
    &quot;grant_type&quot;: &quot;password&quot;,
    &quot;username&quot;: &quot;admin&quot;,
    &quot;password&quot;: &quot;password&quot;
}
END
</pre></div>
</div>
<p>This call will return a token that we will use in subsequent calls.</p>
</section>
<section id="create-users">
<h3>Create users<a class="headerlink" href="#create-users" title="Permalink to this heading">¶</a></h3>
<p>Creations return back responses that consist of the Ids allotted to the corresponding user objects.</p>
<p>Create a provider who is a general physician:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>curl -k -X POST &#39;https://localhost:8443/objects/?type=Provider&#39; -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: Bearer ADMIN_ACCESS_TOKEN&quot; --data @- &lt;&lt; END
{
  &quot;id&quot;: &quot;&quot;,
  &quot;name&quot;: &quot;Springfield Medical Centre&quot;,
  &quot;speciality&quot;: &quot;General Physician&quot;,
  &quot;username&quot;: &quot;gp&quot;,
  &quot;password&quot;: &quot;password&quot;
}
END
</pre></div>
</div>
<p>Create a provider who is an endocrinologist:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>curl -k -X POST &#39;https://localhost:8443/objects/?type=Provider&#39; -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: Bearer ADMIN_ACCESS_TOKEN&quot; --data @- &lt;&lt; END
{
  &quot;id&quot;: &quot;&quot;,
  &quot;name&quot;: &quot;Springfield Endocrinology&quot;,
  &quot;speciality&quot;: &quot;Endocronologist&quot;,
  &quot;username&quot;: &quot;end&quot;,
  &quot;password&quot;: &quot;password&quot;
}
END
</pre></div>
</div>
<p>Create a lab:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>curl -k -X POST &#39;https://localhost:8443/objects/?type=Lab&#39; -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: Bearer ADMIN_ACCESS_TOKEN&quot; --data @- &lt;&lt; END
{
  &quot;id&quot;: &quot;&quot;,
  &quot;name&quot;: &quot;Generic Lab&quot;,
  &quot;username&quot;: &quot;lab&quot;,
  &quot;password&quot;: &quot;password&quot;
}
END
</pre></div>
</div>
<p>Create a patient named Jane Smith:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>curl -k -X POST &#39;https://localhost:8443/objects/?type=Patient&#39; -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: Bearer ADMIN_ACCESS_TOKEN&quot; --data @- &lt;&lt; END
{
  &quot;id&quot;: &quot;&quot;,
  &quot;name&quot;: &quot;Jane Smith&quot;,
  &quot;age&quot;: 40,
  &quot;sex&quot;: &quot;female&quot;,
  &quot;username&quot;: &quot;jane&quot;,
  &quot;password&quot;: &quot;password&quot;
}
END
</pre></div>
</div>
<p>Create another patient named John Smith. This patient is configured by the admin to share read access to all his new encounters with
his wife Jane. As stated earlier, Jane’s Id as used in shareEncountersWith property is randomly generated in this example:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>curl -k -X POST &#39;https://localhost:8443/objects/?type=Patient&#39; -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: Bearer ADMIN_ACCESS_TOKEN&quot; --data @- &lt;&lt; END
{
  &quot;id&quot;: &quot;&quot;,
  &quot;name&quot;: &quot;John Smith&quot;,
  &quot;age&quot;: 40,
  &quot;sex&quot;: &quot;male&quot;,
  &quot;shareEncountersWith&quot;: [
    &quot;test/a430dcf58c9acea52af0&quot;
  ],
  &quot;username&quot;: &quot;john&quot;,
  &quot;password&quot;: &quot;password&quot;
}
END
</pre></div>
</div>
</section>
<section id="create-encounters">
<h3>Create encounters<a class="headerlink" href="#create-encounters" title="Permalink to this heading">¶</a></h3>
<p>Note: For each different user in this section, you will need to get a new access token, as described above:</p>
<p>The patient visits the General Physician (GP). The GP creates this encounter. Note that id, producer, and timestamp are
automatically filled by Cordra as instructed in schemas and in rules:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>curl -k -X POST &#39;https://localhost:8443/objects/?type=Encounter&#39; -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: Bearer GP_ACCESS_TOKEN&quot; --data @- &lt;&lt; END
{
  &quot;id&quot;: &quot;&quot;,
  &quot;producer&quot;: &quot;&quot;,
  &quot;timestamp&quot;: &quot;&quot;,
  &quot;patientId&quot;: &quot;test/e61a3587b3f7a142b8c7&quot;,
  &quot;notes&quot;: &quot;Patient complains of fatigue. Order CBC, BMP, and Thyroid Panel tests.&quot;
}
END
</pre></div>
</div>
<p>The GP orders lab tests. The patient visits the lab and the lab needs access to the encounter. The patient gives the
lab access to the encounter. Since the patient can only modify the <code class="docutils literal notranslate"><span class="pre">shareWith</span></code> property on an encounter, first the patient, John,
must GET the encounter object by its Id. As shown later, the patient can search for all encounters to get their Ids among other details.:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>curl -k -X GET &#39;https://localhost:8443/objects/test/b4ab731228572b88fae1&#39; -H &quot;Authorization: Bearer JOHN_ACCESS_TOKEN&quot;
</pre></div>
</div>
<p>Response:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>{
  &quot;id&quot;: &quot;test/b4ab731228572b88fae1&quot;,
  &quot;timestamp&quot;: &quot;2018-09-19T19:48:52.430Z&quot;,
  &quot;producer&quot;: &quot;test/185108997731deb1edda&quot;,
  &quot;patientId&quot;: &quot;test/e61a3587b3f7a142b8c7&quot;,
  &quot;notes&quot;: &quot;Patient complains of fatigue. Order CBC, BMP, and Thyroid Panel tests.&quot;,
  &quot;shareWith&quot;: []
}
</pre></div>
</div>
<p>The patient can then modify the encounter object, as received above, to include the Id of the lab in order to share the encounter.
The patient updates the encounter object:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>curl -k -X PUT &#39;https://localhost:8443/objects/test/b4ab731228572b88fae1?jsonPointer=/shareWith&#39; -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: Bearer JOHN_ACCESS_TOKEN&quot; --data @- &lt;&lt; END
[
  &quot;test/9b405c77d1a2f1760287&quot;
]
END
</pre></div>
</div>
<p>The lab creates an encounter including the results from the lab. They include the GP in the <code class="docutils literal notranslate"><span class="pre">shareWith</span></code> property:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>curl -k -X POST &#39;https://localhost:8443/objects/?type=Encounter&#39; -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: Bearer LAB_ACCESS_TOKEN&quot; --data @- &lt;&lt; END
{
  &quot;id&quot;: &quot;&quot;,
  &quot;producer&quot;: &quot;&quot;,
  &quot;timestamp&quot;: &quot;&quot;,
  &quot;patientId&quot;: &quot;test/e61a3587b3f7a142b8c7&quot;,
  &quot;notes&quot;: &quot;Thyroid Panel reveals high TSH levels.&quot;,
  &quot;shareWith&quot;: [
      &quot;test/185108997731deb1edda&quot;
  ]
}
END
</pre></div>
</div>
<p>The patient returns to the GP, and the GP creates a 3rd encounter referring the patient to an endocrinologist.:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>curl -k -X POST &#39;https://localhost:8443/objects/?type=Encounter&#39; -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: Bearer GP_ACCESS_TOKEN&quot; --data @- &lt;&lt; END
{
  &quot;id&quot;: &quot;&quot;,
  &quot;producer&quot;: &quot;&quot;,
  &quot;timestamp&quot;: &quot;&quot;,
  &quot;patientId&quot;: &quot;test/e61a3587b3f7a142b8c7&quot;,
  &quot;notes&quot;: &quot;I am referring you to see an endocrinologist&quot;,
  &quot;referred&quot;: &quot;test/eb02409feb90de550756&quot;
}
END
</pre></div>
</div>
<p>The patient searches and retrieves all the encounters:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>curl -k -X GET &#39;https://localhost:8443/search/?query=type:Encounter&#39; -H &quot;Authorization: Bearer JOHN_ACCESS_TOKEN&quot;
</pre></div>
</div>
<p>The patient modifies the previous two encounters sharing them with the endocrinologist.:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>curl -k -X PUT &#39;https://localhost:8443/objects/test/b4ab731228572b88fae1?jsonPointer=/shareWith&#39; -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: Bearer JOHN_ACCESS_TOKEN&quot; --data @- &lt;&lt; END
[
  &quot;test/9b405c77d1a2f1760287&quot;,
  &quot;test/eb02409feb90de550756&quot;
]
END

curl -k -X PUT &#39;https://localhost:8443/objects/test/69a0212b19bb02e25a7d?jsonPointer=/shareWith&#39; -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: Bearer JOHN_ACCESS_TOKEN&quot; --data @- &lt;&lt; END
[
  &quot;test/185108997731deb1edda&quot;,
  &quot;test/eb02409feb90de550756&quot;
]
END
</pre></div>
</div>
</section>
</section>
</section>


          </div>
          
        </div>
      </div>
    <div class="clearer"></div>
  </div>

<!-- BEGIN FOOTER -->
<footer id="footer">
    <div id="footer-main" class="container-large">
        <div class="row">
            <div class="col-lg-4 col-md-4 col-sm-4">
                <div class="widget widget-text">
                    <h3 class="widget-title">Who are we?</h3>
                    <!-- <img width="200" height="50" class="footer-logo" src="_static/img/logo/cordra-light.png" alt="logo"> -->
                    <p>CNRI is a not-for-profit organization formed in 1986 to undertake, foster, and promote research on information infrastructure in the public interest.</p>
                    <p><i class="nc-icon-outline ui-1_home-minimal"></i> Corporation for National Research Initiatives</p>
                    <p><i class="nc-icon-outline location_position-marker"></i> 1895 Preston White Drive, Suite 100, Reston, Virginia 20191, USA</p>
                </div>
            </div>
            <div class="col-lg-4 col-md-4 col-sm-4 hidden-xs-down">
                <div class="widget widget-links">
                    <div class="widget-title">
                        <h3 class="widget-title">Quick Links</h3>
                    </div>
                    <ul>
                        <li>
                            <a href="/cordra.html">What's Cordra</a>
                        </li>
                        <li>
                            <a href="/download.html">Download</a>
                        </li>
                        <li>
                            <a href="/documentation/introduction/introduction.html">Developer Resources</a>
                        </li>
                        <li>
                            <a href="/download.html#section-licenses">Licenses</a>
                        </li>
                        <li>
                            <a href="/privacypolicy.html">Privacy Policy</a>
                        </li>
                    </ul>
                </div>
            </div>
            <div class="col-lg-4 col-md-4 hidden-md-down">
                <div class="widget">
                    <h3 class="widget-title">Contact Us</h3>
                    <p>Drop us an
                        <span class="f-18 c-white w-700 font-handwriting">
                            <a href="#" onclick="document.getElementById('emailAddress').style.display = 'block'; return false;" class="c-white">email.</a>
                            <span id="emailAddress" style="display: none;" class="c-white text-sm w-100">support@cordra.org</span>
                        </span>
                    </p>
                    <p>Join us on <a href="https://hdl.handle.net/20.5000/cordra-slack" target="_blank"><img width="100px" height="100px" src="../_static/img/slack_white.png" alt="Slack" class="m-l--10" /></a><span
                            class="f-18 c-white w-700 font-handwriting m-l--10">.</span></p>
                </div>
            </div>
        </div>
    </div>
    <div id="footer-bottom">
        <div class="container-large">
            <div class="row">
                <div class="col-sm-12 t-center">
                    <p class="copyright">Copyright&copy; 2020. Corporation for National Resesarch Initiatives. Cordra&reg; is a trademark of Corporation for National Research Initiatives.</p>
                </div>
            </div>
        </div>
    </div>
</footer>
<!-- END FOOTER -->

  </body>
</html> contentType 9 text/html url 84 https://www.cordra.org:443/documentation/extensions/medical-records-application.html responseCode 3 200 