dqqojefmgkfcymvgbogehomkiqpeliwqtsqcgkag length 6 114704 page 114704 <!DOCTYPE html>

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />

    <title>Person Registry &#8212; Cordra  documentation</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/alabaster.css" />
    <link rel="stylesheet" type="text/css" href="../_static/minimal-fixes.css" />
    <script data-url_root="../" id="documentation_options" src="../_static/documentation_options.js"></script>
    <script src="../_static/doctools.js"></script>
    <script src="../_static/sphinx_highlight.js"></script>
    <link rel="index" title="Index" href="../genindex.html" />
    <link rel="search" title="Search" href="../search.html" />
    <link rel="next" title="User Registration" href="user-registration.html" />
    <link rel="prev" title="Medical Records Application" href="medical-records-application.html" />
    <link rel="shortcut icon" href="../_static/img/favicon.ico" type="image/x-icon">
    <link href='https://fonts.googleapis.com/css?family=Montserrat:400,700%7COpen+Sans:300,400,700,800' rel='stylesheet' />
    <link href='https://fonts.googleapis.com/css?family=Rasa:400,700%7COpen+Sans:300,400,700,800' rel='stylesheet' />
    <link rel="stylesheet" href="../_static/libs/font-awesome/css/font-awesome.min.css"></link>
    <link rel="stylesheet" href="../_static/libs/bootstrap/dist/css/bootstrap.min.css"></link>
    <link rel="stylesheet" href="../_static/icons/nucleo.css"></link>
    <link rel="stylesheet" href="../_static/libs/animate.css/animate.min.css"></link>
    <link rel="stylesheet" href="../_static/css/bootstrap.min.css"></link>
    <link rel="stylesheet" href="../_static/css/blog.css"></link>
    <link rel="stylesheet" href="../_static/css/buttons.css"></link>
    <link rel="stylesheet" href="../_static/css/colors.css"></link>
    <link rel="stylesheet" href="../_static/css/footers.css"></link>
    <link rel="stylesheet" href="../_static/css/widgets.css"></link>
    <link rel="stylesheet" href="../_static/css/nav.css"></link>
    <link rel="stylesheet" href="../_static/css/preloader.css"></link>
    <link rel="stylesheet" href="../_static/css/custom.css"></link>
    <link rel="stylesheet" href="../_static/css/ui.css"></link>

  </head><body>
<!-- BEGIN LATERAL NAVIGATION -->
<aside id="aside-nav">
    <div id="main-aside-navigation">
        <div class="main-nav-wrapper">
            <div class="close-aside-nav">
                <i class="nc-icon-outline ui-1_simple-remove"></i>
            </div>
            <div id="aside-logo">
                    <a href="/index.html" data-logo-light="../_static/img/cordra-light.png" data-logo-dark="../_static/img/cordra-primary-blue.png">
                    <img width="170" height="166" src="../_static/img/cordra-primary-blue.png" alt="logo">
                </a>
            </div>
            <nav id="main-aside-menu">
                <ul>
                    <li class="submenu">
                        <a href="/cordra.html">What's Cordra?</a>
                    </li>
                    <li class="submenu">
                        <a href="/getstarted.html">Get Started</a>
                    </li>
                    <li class="submenu">
                        <a href="/download.html">Download</a>
                    </li>
                    <li class="submenu">
                        <a href="/documentation/introduction/introduction.html">Developer Resources</a>
                    </li>
                    <li class="submenu">
                        <a href="/standards.html">Standards</a>
                    </li>
                    <li class="submenu">
                        <a href="../search.html">Search</a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</aside>
<!-- END LATERAL NAVIGATION -->

<!-- BEGIN MAIN NAVIGATION -->
<header id="header">
    <div id="main-navigation">
        <div class="main-nav-wrapper">
            <div class="container-fluid">
                <div class="nav-left">
                    <div id="logo">
                        <a href="/index.html" data-logo-light="../_static/img/cordra-light.png" data-logo-dark="../_static/img/cordra-primary-blue.png">
                        <img width="145" height="36" src="../_static/img/cordra-primary-blue.png" alt="logo">
                        </a>
                    </div>
                </div>
                <div class="nav-right">
                    <nav id="main-menu">
                        <ul>
                            <li class="mega-menu menu-layouts">
                                <a href="/cordra.html">What's Cordra?</a>
                            </li>
                            <li class="mega-menu menu-layouts">
                                <a href="/getstarted.html">Get Started</a>
                            </li>
                            <li>
                                <a href="/download.html">Download</a>
                            </li>
                            <li class="mega-menu">
                                <a href="/documentation/introduction/introduction.html">Developer Resources</a>
                            </li>
                            <li class="mega-menu">
                                <a href="/standards.html">Standards</a>
                            </li>
                            <li class="mega-menu">
                                <a href="../search.html">Search</a>
                            </li>
                        </ul>
                    </nav>
                    <ul class="nav-tools">
                        <li class="mobile-menu-btn">
                            <button class="toggle-menu" data-toggle="mobile-menu" data-effect="hover">
                                <span class="menu-label label-left">Menu</span>
                                <i class="nc-icon-outline ui-2_menu-35"></i>
                            </button>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</header>
<!-- END MAIN NAVIGATION -->


  <div class="document">
    
      <div class="sphinxsidebar" role="navigation" aria-label="main navigation">
        <div class="sphinxsidebarwrapper">
<div id="searchbox" style="display: none" role="search">
  <h3 id="searchlabel">Quick search</h3>
    <div class="searchformwrapper">
    <form class="search" action="../search.html" method="get">
      <input type="text" name="q" aria-labelledby="searchlabel" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false"/>
      <input type="submit" value="Go" />
    </form>
    </div>
</div>
<script>document.getElementById('searchbox').style.display = "block"</script><h3>Navigation</h3>
<ul class="current">
<li class="toctree-l1"><a class="reference external" href="https://hdl.handle.net/20.1000/129">Developer Resources (in PDF)</a></li>
<li class="toctree-l1"><a class="reference internal" href="../introduction/index.html">Cordra Software</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../introduction/introduction.html">Introduction to Cordra</a></li>
<li class="toctree-l2"><a class="reference internal" href="../introduction/release-notes.html">Release Notes</a></li>
<li class="toctree-l2"><a class="reference internal" href="../introduction/system-requirements.html">System Requirements</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../design/index.html">Application Design</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../design/introduction.html">Introduction</a></li>
<li class="toctree-l2"><a class="reference internal" href="../design/identifiers.html">Identifiers</a></li>
<li class="toctree-l2"><a class="reference internal" href="../design/schemas.html">Schemas/Types</a></li>
<li class="toctree-l2"><a class="reference internal" href="../design/design-object.html">Design Object</a></li>
<li class="toctree-l2"><a class="reference internal" href="../design/payloads.html">Payloads</a></li>
<li class="toctree-l2"><a class="reference internal" href="../design/authentication-and-access-controls.html">Authentication and Access Controls</a></li>
<li class="toctree-l2"><a class="reference internal" href="../design/javascript-lifecycle-hooks.html">Lifecycle Hooks</a></li>
<li class="toctree-l2"><a class="reference internal" href="../design/type-methods.html">Type Methods</a></li>
<li class="toctree-l2"><a class="reference internal" href="../design/java-hooks-and-methods.html">Java Hooks and Methods</a></li>
<li class="toctree-l2"><a class="reference internal" href="../design/handle-integration.html">Handle Integration</a></li>
<li class="toctree-l2"><a class="reference internal" href="../design/object-versioning.html">Digital Object Versioning</a></li>
<li class="toctree-l2"><a class="reference internal" href="../design/object-hashing.html">Digital Object Hashing</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../api/index.html">APIs</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../api/introduction.html">Introduction</a></li>
<li class="toctree-l2"><a class="reference internal" href="../api/doip.html">DOIP and Examples</a></li>
<li class="toctree-l2"><a class="reference internal" href="../api/doip-api-for-http-clients.html">DOIP API for HTTP Clients</a></li>
<li class="toctree-l2"><a class="reference internal" href="../api/rest-api.html">HTTP REST API and Examples</a></li>
<li class="toctree-l2"><a class="reference internal" href="../api/search.html">Query Syntax</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../client/index.html">Clients</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../client/introduction.html">Introduction</a></li>
<li class="toctree-l2"><a class="reference internal" href="../client/rest-java.html">REST - Java</a></li>
<li class="toctree-l2"><a class="reference internal" href="../client/javascript.html">REST - JavaScript</a></li>
<li class="toctree-l2"><a class="reference internal" href="../client/doip-java.html">DOIP - Java</a></li>
<li class="toctree-l2"><a class="reference internal" href="../client/third-party.html">Third Party Clients</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../configuration/index.html">Configuration</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../configuration/introduction.html">Introduction</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/single-instance-deployment.html">Deploying Single-Instance Cordra</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/single-instance-production.html">Production Single Instance Deployment</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/distributed-deployment.html">Deploying Cordra as a Distributed System</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/reindexing.html">Reindexing</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/logs-management.html">Managing Cordra Logs</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/storage-backends.html">Configuring Storage Backend</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/indexing-backends.html">Configuring Indexing Backend</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/sessions-manager.html">Distributed Sessions Manager</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/user-management.html">Managing Users and Groups</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/admin-user-interface.html">Administrative UI</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/enabling-tls.html">Enabling TLS</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/https.html">Configuring HTTPS Keys</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/migration.html">Migration across Cordra Environments</a></li>
</ul>
</li>
<li class="toctree-l1 current"><a class="reference internal" href="index.html">Extensions and Applications</a><ul class="current">
<li class="toctree-l2"><a class="reference internal" href="calling-java-from-javascript.html">Calling Java from JavaScript</a></li>
<li class="toctree-l2"><a class="reference internal" href="document-repository.html">Document Repository</a></li>
<li class="toctree-l2"><a class="reference internal" href="medical-records-application.html">Medical Records Application</a></li>
<li class="toctree-l2 current"><a class="current reference internal" href="#">Person Registry</a></li>
<li class="toctree-l2"><a class="reference internal" href="user-registration.html">User Registration</a></li>
<li class="toctree-l2"><a class="reference internal" href="object-linking.html">Digital Object Linking</a></li>
<li class="toctree-l2"><a class="reference internal" href="oai-pmh.html">OAI-PMH in Cordra</a></li>
<li class="toctree-l2"><a class="reference internal" href="sending-emails.html">Sending Emails</a></li>
<li class="toctree-l2"><a class="reference internal" href="external-authentication-provider.html">External Authentication Provider</a></li>
<li class="toctree-l2"><a class="reference internal" href="collab-prototype.html">Collab Prototype Software</a></li>
<li class="toctree-l2"><a class="reference internal" href="neo4j-as-an-additional-index.html">Neo4j as an Additional Index</a></li>
<li class="toctree-l2"><a class="reference internal" href="partial-replication-aggregation.html">Partial Replication/Aggregation</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../tools/index.html">Tools</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../tools/import-export.html">Import and Export Tools</a></li>
</ul>
</li>
</ul>


        </div>
      </div>
      <div class="documentwrapper">
        <div class="bodywrapper">
          

          <div class="body" role="main">
            
  <section id="person-registry">
<span id="personregistry"></span><h1>Person Registry<a class="headerlink" href="#person-registry" title="Permalink to this heading">¶</a></h1>
<p>This example demonstrates how to configure Cordra to behave like a Registry of People. To showcase that such a
registry could be used to manage transactions related to people, such as loans taken by them, we also show
how loan digital objects could be managed and associated with person digital objects. This example is
a basic starting point for a potential application.</p>
<p>In addition to showing how to configure Cordra, we will demonstrate how to interact with Cordra using the
<a class="reference internal" href="../client/doip-java.html#doip-java-client-library"><span class="std std-ref">DOIP Java SDK</span></a>.</p>
<section id="narrative">
<h2>Narrative<a class="headerlink" href="#narrative" title="Permalink to this heading">¶</a></h2>
<p>This sample application supports the following narrative:</p>
<ul class="simple">
<li><p><code class="docutils literal notranslate"><span class="pre">Person</span></code> digital objects are added to the registry by administrators. The registry can track various biographical
information, as well as information related to official documents.</p></li>
<li><p>When creating or updating a person digital object, the request should fail if it would create a duplicate
Person object. Duplicates are flagged if either the government issued ids match, or the last name and the
date of birth match.</p></li>
<li><p><code class="docutils literal notranslate"><span class="pre">Loan</span></code> digital objects can be added, including information about its payment status as well as borrowers.</p></li>
<li><p>There are operations for getting a list of all households, getting a list of all living persons with expired
fingerprints, and getting a list of all living persons with defaulted loans.</p></li>
<li><p>Information is not publicly accessible. User accounts can be created and added to one of two groups: an admin group
that has read and write access to all records, and a users group that has read-only access.</p></li>
</ul>
</section>
<section id="sample-objects">
<h2>Sample Objects<a class="headerlink" href="#sample-objects" title="Permalink to this heading">¶</a></h2>
<p>If you would like to follow along without having to manually create the objects described below, you can be download a
file containing sample objects <a class="reference download internal" download="" href="../_downloads/49b2e9fbd44f03e81cfa02bc61e8c65e/person-registry-example.json"><code class="xref download docutils literal notranslate"><span class="pre">here</span></code></a>. Once downloaded, you can
then load this information into Cordra using the Cordra UI. Sign into Cordra as <code class="docutils literal notranslate"><span class="pre">admin</span></code> and select the
Admin-&gt;Types dropdown menu. Click the “Load from file” button. In the dialog that pops up, select the file you
downloaded and check the box to delete existing objects. Click “Load” to import the types into Cordra.</p>
<p>These sample objects are for testing only. They include users “admin1”, “admin2”, “user1”, and “user2”, all with the
default password of “password”.</p>
</section>
<section id="design">
<h2>Design<a class="headerlink" href="#design" title="Permalink to this heading">¶</a></h2>
<section id="authentication-and-authorization">
<h3>Authentication and Authorization<a class="headerlink" href="#authentication-and-authorization" title="Permalink to this heading">¶</a></h3>
<p>We will need two groups for access controls. One of the groups will have read/write access to the objects, and the other
group will only have read access.</p>
<p>Edit the Cordra Authorization configuration in the <a class="reference internal" href="../design/design-object.html#design-object"><span class="std std-ref">Design Object</span></a>, and replace the existing json with the following:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>{
  &quot;schemaAcls&quot;: {
    &quot;User&quot;: {
      &quot;defaultAclRead&quot;: [ &quot;public&quot; ],
      &quot;defaultAclWrite&quot;: [ &quot;self&quot;, &quot;test/c5a2dc3dcb24a8c9c790&quot; ],
      &quot;aclCreate&quot;: [ &quot;test/c5a2dc3dcb24a8c9c790&quot; ]
    },
    &quot;CordraDesign&quot;: {
      &quot;defaultAclRead&quot;: [ &quot;public&quot; ],
      &quot;defaultAclWrite&quot;: [],
      &quot;aclCreate&quot;: []
    },
    &quot;Schema&quot;: {
      &quot;defaultAclRead&quot;: [ &quot;public&quot; ],
      &quot;defaultAclWrite&quot;: [],
      &quot;aclCreate&quot;: []
    },
    &quot;Person&quot;: {
      &quot;defaultAclRead&quot;: [ &quot;authenticated&quot; ],
      &quot;defaultAclWrite&quot;: [ &quot;test/c5a2dc3dcb24a8c9c790&quot; ],
      &quot;aclCreate&quot;: [ &quot;test/c5a2dc3dcb24a8c9c790&quot; ],
      &quot;aclMethods&quot;: {
        &quot;static&quot;: {
          &quot;test/Op.GetHouseholdMembers&quot;: [ &quot;authenticated&quot; ],
          &quot;test/Op.GetExpiredFingerPrints&quot;: [ &quot;authenticated&quot; ]
        },
        &quot;default&quot;: {
          &quot;static&quot;: [ &quot;test/c5a2dc3dcb24a8c9c790&quot; ],
          &quot;instance&quot;: [ &quot;test/c5a2dc3dcb24a8c9c790&quot; ]
        }
      }
    },
    &quot;Loan&quot;: {
      &quot;defaultAclRead&quot;: [ &quot;authenticated&quot; ],
      &quot;defaultAclWrite&quot;: [ &quot;test/c5a2dc3dcb24a8c9c790&quot; ],
      &quot;aclCreate&quot;: [ &quot;test/c5a2dc3dcb24a8c9c790&quot; ],
      &quot;aclMethods&quot;: {
        &quot;static&quot;: {
          &quot;test/Op.GetDefaulters&quot;: [ &quot;authenticated&quot; ]
        },
        &quot;default&quot;: {
          &quot;static&quot;: [ &quot;test/c5a2dc3dcb24a8c9c790&quot; ],
          &quot;instance&quot;: [ &quot;test/c5a2dc3dcb24a8c9c790&quot; ]
        }
      }
    }
  },
  &quot;defaultAcls&quot;: {
    &quot;defaultAclRead&quot;: [ &quot;authenticated&quot; ],
    &quot;defaultAclWrite&quot;: [ &quot;test/c5a2dc3dcb24a8c9c790&quot; ],
    &quot;aclCreate&quot;: [ &quot;test/c5a2dc3dcb24a8c9c790&quot; ]
  }
}
</pre></div>
</div>
<p>Because the default read permission is set to <code class="docutils literal notranslate"><span class="pre">authenticated</span></code> above, users will be required to log in before
being able to read digital objects in the system. The default write and create permissions are set to the admin group,
so non-admin users are limited to read-only access. Note that, if you are not using the sample data provided along with
this tutorial, you will need to change <code class="docutils literal notranslate"><span class="pre">test/c5a2dc3dcb24a8c9c790</span></code> to the id of the admin group you created.</p>
</section>
<section id="schemas">
<h3>Schemas<a class="headerlink" href="#schemas" title="Permalink to this heading">¶</a></h3>
<p>The schemas for the Person and Loan types of digital objects are show below. Notice that identifiers of digital
objects are flagged to be auto-generated. The various timestamp attributes in the objects are also flagged to be
auto-populated.</p>
<p>Person Schema:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>{
  &quot;type&quot;: &quot;object&quot;,
  &quot;title&quot;: &quot;Person&quot;,
  &quot;required&quot;: [
    &quot;id&quot;,
    &quot;name&quot;,
    &quot;birth&quot;,
    &quot;gender&quot;,
    &quot;address&quot;,
    &quot;issuedIds&quot;
  ],
  &quot;properties&quot;: {
    &quot;id&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;cordra&quot;: {
        &quot;type&quot;: {
          &quot;autoGeneratedField&quot;: &quot;handle&quot;
        }
      }
    },
    &quot;name&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;title&quot;: &quot;Name&quot;,
      &quot;required&quot;: [
        &quot;first&quot;,
        &quot;last&quot;
      ],
      &quot;properties&quot;: {
        &quot;last&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;title&quot;: &quot;Surname&quot;,
          &quot;cordra&quot;: {
            &quot;preview&quot;: {
              &quot;showInPreview&quot;: true,
              &quot;isPrimary&quot;: true
            }
          }
        },
        &quot;first&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;title&quot;: &quot;First Name&quot;,
          &quot;cordra&quot;: {
            &quot;preview&quot;: {
              &quot;showInPreview&quot;: true
            }
          }
        },
        &quot;middle&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;title&quot;: &quot;Middle Name&quot;,
          &quot;cordra&quot;: {
            &quot;preview&quot;: {
              &quot;showInPreview&quot;: true
            }
          }
        }
      }
    },
    &quot;birth&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;title&quot;: &quot;Birth Information&quot;,
      &quot;required&quot;: [
        &quot;date&quot;
      ],
      &quot;properties&quot;: {
        &quot;date&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;pattern&quot;: &quot;^[1-2]{1}[0-9]{7}$&quot;,
          &quot;title&quot;: &quot;Date of Birth (YYYYMMDD)&quot;
        },
        &quot;certificate&quot;: {
          &quot;type&quot;: &quot;object&quot;,
          &quot;title&quot;: &quot;Birth Certificate&quot;,
          &quot;required&quot;: [
            &quot;id&quot;,
            &quot;source&quot;
          ],
          &quot;properties&quot;: {
            &quot;id&quot;: {
              &quot;type&quot;: &quot;string&quot;,
              &quot;title&quot;: &quot;Certificate ID&quot;
            },
            &quot;source&quot;: {
              &quot;type&quot;: &quot;string&quot;,
              &quot;title&quot;: &quot;Certificate Source&quot;
            }
          }
        }
      }
    },
    &quot;death&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;title&quot;: &quot;Death Information&quot;,
      &quot;required&quot;: [
        &quot;date&quot;
      ],
      &quot;properties&quot;: {
        &quot;date&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;pattern&quot;: &quot;^[1-2]{1}[0-9]{7}$&quot;,
          &quot;title&quot;: &quot;Date of Death (YYYYMMDD)&quot;
        },
        &quot;certificate&quot;: {
          &quot;type&quot;: &quot;object&quot;,
          &quot;title&quot;: &quot;Death Certificate&quot;,
          &quot;required&quot;: [
            &quot;id&quot;,
            &quot;source&quot;
          ],
          &quot;properties&quot;: {
            &quot;id&quot;: {
              &quot;type&quot;: &quot;string&quot;,
              &quot;title&quot;: &quot;Certificate ID&quot;
            },
            &quot;source&quot;: {
              &quot;type&quot;: &quot;string&quot;,
              &quot;title&quot;: &quot;Certificate Source&quot;
            }
          }
        }
      }
    },
    &quot;gender&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;title&quot;: &quot;Gender&quot;,
      &quot;enum&quot;: [
        &quot;female&quot;,
        &quot;male&quot;,
        &quot;other&quot;
      ]
    },
    &quot;address&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;title&quot;: &quot;Address&quot;,
      &quot;required&quot;: [
        &quot;line1&quot;,
        &quot;line2&quot;
      ],
      &quot;properties&quot;: {
        &quot;line1&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;title&quot;: &quot;Line 1&quot;
        },
        &quot;line2&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;title&quot;: &quot;Line 2&quot;
        },
        &quot;line3&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;title&quot;: &quot;Line 3&quot;
        }
      }
    },
    &quot;issuedIds&quot;: {
      &quot;type&quot;: &quot;array&quot;,
      &quot;title&quot;: &quot;Government Issued Ids&quot;,
      &quot;format&quot;: &quot;table&quot;,
      &quot;uniqueItems&quot;: true,
      &quot;minItems&quot;: 1,
      &quot;items&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;required&quot;: [
          &quot;type&quot;,
          &quot;id&quot;
        ],
        &quot;properties&quot;: {
          &quot;id&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;title&quot;: &quot;ID&quot;
          },
          &quot;type&quot;: {
            &quot;type&quot;: &quot;string&quot;,
            &quot;title&quot;: &quot;ID Type&quot;
          }
        }
      }
    },
    &quot;fingerprints&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;title&quot;: &quot;Finger Print External Reference&quot;,
      &quot;required&quot;: [
        &quot;id&quot;,
        &quot;source&quot;,
        &quot;lastCapturedDate&quot;
      ],
      &quot;properties&quot;: {
        &quot;id&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;title&quot;: &quot;Certificate ID&quot;
        },
        &quot;source&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;title&quot;: &quot;Certificate Source&quot;
        },
        &quot;lastCapturedDate&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;pattern&quot;: &quot;^[1-2]{1}[0-9]{7}$&quot;,
          &quot;title&quot;: &quot;Last Captured Date (YYYYMMDD)&quot;
        }
      }
    },
    &quot;recordCreatedOn&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;title&quot;: &quot;Record Creation Date&quot;,
      &quot;cordra&quot;: {
        &quot;type&quot;: {
          &quot;autoGeneratedField&quot;: &quot;creationDate&quot;
        }
      }
    },
    &quot;recordModifiedOn&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;title&quot;: &quot;Record Modification Date&quot;,
      &quot;cordra&quot;: {
        &quot;type&quot;: {
          &quot;autoGeneratedField&quot;: &quot;modificationDate&quot;
        }
      }
    },
    &quot;recordCreatedBy&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;title&quot;: &quot;Record Created By&quot;,
      &quot;cordra&quot;: {
        &quot;type&quot;: {
          &quot;autoGeneratedField&quot;: &quot;createdBy&quot;
        }
      }
    },
    &quot;recordModifiedBy&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;title&quot;: &quot;Record Modified By&quot;,
      &quot;cordra&quot;: {
        &quot;type&quot;: {
          &quot;autoGeneratedField&quot;: &quot;modifiedBy&quot;
        }
      }
    }
  }
}
</pre></div>
</div>
<p>Loan Schema:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>{
  &quot;type&quot;: &quot;object&quot;,
  &quot;title&quot;: &quot;Loan&quot;,
  &quot;required&quot;: [
    &quot;id&quot;,
    &quot;status&quot;,
    &quot;lender&quot;,
    &quot;start&quot;,
    &quot;end&quot;,
    &quot;borrowers&quot;,
    &quot;amount&quot;
  ],
  &quot;properties&quot;: {
    &quot;id&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;cordra&quot;: {
        &quot;type&quot;: {
          &quot;autoGeneratedField&quot;: &quot;handle&quot;
        }
      }
    },
    &quot;lender&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;title&quot;: &quot;Lender&quot;
    },
    &quot;start&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;pattern&quot;: &quot;^[1-2]{1}[0-9]{7}$&quot;,
      &quot;title&quot;: &quot;Term Start Date (YYYYMMDD)&quot;
    },
    &quot;end&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;pattern&quot;: &quot;^[1-2]{1}[0-9]{7}$&quot;,
      &quot;title&quot;: &quot;Term End Date (YYYYMMDD)&quot;
    },
    &quot;status&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;title&quot;: &quot;Status&quot;,
      &quot;enum&quot;: [
        &quot;defaulted&quot;,
        &quot;performing&quot;,
        &quot;paid&quot;
      ]
    },
    &quot;amount&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;title&quot;: &quot;Loan Amount&quot;,
      &quot;required&quot;: [
        &quot;amount&quot;,
        &quot;currency&quot;
      ],
      &quot;properties&quot;: {
        &quot;amount&quot;: {
          &quot;type&quot;: &quot;number&quot;,
          &quot;minimum&quot;: 0,
          &quot;title&quot;: &quot;Amount&quot;
        },
        &quot;currency&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;title&quot;: &quot;Currency&quot;
        }
      }
    },
    &quot;borrowers&quot;: {
      &quot;type&quot;: &quot;array&quot;,
      &quot;title&quot;: &quot;Borrowers&quot;,
      &quot;uniqueItems&quot;: true,
      &quot;minItems&quot;: 1,
      &quot;items&quot;: {
        &quot;type&quot;: &quot;string&quot;,
        &quot;title&quot;: &quot;Borrower&quot;,
        &quot;cordra&quot;: {
          &quot;type&quot;: {
            &quot;handleReference&quot;: {
              &quot;types&quot;: [
                &quot;Person&quot;
              ]
            }
          }
        }
      }
    },
    &quot;recordCreatedOn&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;title&quot;: &quot;Record Creation Date&quot;,
      &quot;cordra&quot;: {
        &quot;type&quot;: {
          &quot;autoGeneratedField&quot;: &quot;creationDate&quot;
        }
      }
    },
    &quot;recordModifiedOn&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;title&quot;: &quot;Record Modification Date&quot;,
      &quot;cordra&quot;: {
        &quot;type&quot;: {
          &quot;autoGeneratedField&quot;: &quot;modificationDate&quot;
        }
      }
    },
    &quot;recordCreatedBy&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;title&quot;: &quot;Record Created By&quot;,
      &quot;cordra&quot;: {
        &quot;type&quot;: {
          &quot;autoGeneratedField&quot;: &quot;createdBy&quot;
        }
      }
    },
    &quot;recordModifiedBy&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;title&quot;: &quot;Record Modified By&quot;,
      &quot;cordra&quot;: {
        &quot;type&quot;: {
          &quot;autoGeneratedField&quot;: &quot;modifiedBy&quot;
        }
      }
    }
  }
}
</pre></div>
</div>
</section>
<section id="rules-and-type-methods">
<h3>Rules and Type Methods<a class="headerlink" href="#rules-and-type-methods" title="Permalink to this heading">¶</a></h3>
<p>We will use the <code class="docutils literal notranslate"><span class="pre">beforeSchemaValidation</span></code> <a class="reference internal" href="../design/javascript-lifecycle-hooks.html#javascript-lifecycle-hooks"><span class="std std-ref">lifecycle hook</span></a> to de-duplicate persons
on create and update. Additionally, we will add two static <a class="reference internal" href="../design/type-methods.html#type-methods"><span class="std std-ref">type methods</span></a> to the Person type for
getting households and persons with expired fingerprints.</p>
<p>Person Javascript:</p>
<div class="highlight-js notranslate"><div class="highlight"><pre><span></span><span class="kd">const</span><span class="w"> </span><span class="nx">cordra</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">require</span><span class="p">(</span><span class="s1">&#39;cordra&#39;</span><span class="p">);</span>
<span class="kd">let</span><span class="w"> </span><span class="nx">prefix</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">cordra</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;design&quot;</span><span class="p">).</span><span class="nx">content</span><span class="p">.</span><span class="nx">handleMintingConfig</span><span class="p">.</span><span class="nx">prefix</span><span class="p">;</span>
<span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="o">!</span><span class="nx">prefix</span><span class="p">)</span><span class="w"> </span><span class="nx">prefix</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;test&#39;</span><span class="p">;</span>

<span class="nx">exports</span><span class="p">.</span><span class="nx">beforeSchemaValidation</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">beforeSchemaValidation</span><span class="p">;</span>

<span class="nx">exports</span><span class="p">.</span><span class="nx">staticMethods</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">{};</span>
<span class="nx">exports</span><span class="p">.</span><span class="nx">staticMethods</span><span class="p">[</span><span class="nx">prefix</span><span class="o">+</span><span class="s1">&#39;/Op.GetHouseholdMembers&#39;</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">getHouseholdMembers</span><span class="p">;</span>
<span class="nx">exports</span><span class="p">.</span><span class="nx">staticMethods</span><span class="p">[</span><span class="nx">prefix</span><span class="o">+</span><span class="s1">&#39;/Op.GetExpiredFingerPrints&#39;</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">getExpiredFingerPrints</span><span class="p">;</span>

<span class="kd">function</span><span class="w"> </span><span class="nx">beforeSchemaValidation</span><span class="p">(</span><span class="nx">obj</span><span class="p">,</span><span class="w"> </span><span class="nx">context</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="c1">// dedupe and rejects creations or updates based on the following criteria:</span>
<span class="w">    </span><span class="c1">// - If the government issued ids match.</span>
<span class="w">    </span><span class="c1">// - If the last name and the date of birth match</span>
<span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="nx">query</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;+type:Person &#39;</span><span class="p">;</span>
<span class="w">    </span><span class="nx">query</span><span class="w"> </span><span class="o">+=</span><span class="w"> </span><span class="sb">`+((+/name/last:&quot;</span><span class="si">${</span><span class="nx">obj</span><span class="p">.</span><span class="nx">content</span><span class="p">.</span><span class="nx">name</span><span class="p">.</span><span class="nx">last</span><span class="si">}</span><span class="sb">&quot; +/birth/date:&quot;</span><span class="si">${</span><span class="nx">obj</span><span class="p">.</span><span class="nx">content</span><span class="p">.</span><span class="nx">birth</span><span class="p">.</span><span class="nx">date</span><span class="si">}</span><span class="sb">&quot;)`</span><span class="p">;</span>
<span class="w">    </span><span class="nx">obj</span><span class="p">.</span><span class="nx">content</span><span class="p">.</span><span class="nx">issuedIds</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">id</span><span class="w"> </span><span class="p">=&gt;</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="nx">query</span><span class="w"> </span><span class="o">+=</span><span class="w"> </span><span class="sb">` OR (+/issuedIds/_/id:&quot;</span><span class="si">${</span><span class="nx">id</span><span class="p">.</span><span class="nx">id</span><span class="si">}</span><span class="sb">&quot; +/issuedIds/_/type:&quot;</span><span class="si">${</span><span class="nx">id</span><span class="p">.</span><span class="nx">type</span><span class="si">}</span><span class="sb">&quot;)`</span><span class="p">;</span>
<span class="w">    </span><span class="p">});</span>
<span class="w">    </span><span class="nx">query</span><span class="w"> </span><span class="o">+=</span><span class="w"> </span><span class="s1">&#39;)&#39;</span><span class="p">;</span>
<span class="w">    </span><span class="kd">const</span><span class="w"> </span><span class="nx">res</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">cordra</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="nx">query</span><span class="p">);</span>
<span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nx">res</span><span class="p">.</span><span class="nx">size</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mf">0</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="k">throw</span><span class="w"> </span><span class="s2">&quot;Either Issued Id or Last Name + Birthday is duplicated.&quot;</span><span class="p">;</span>
<span class="w">    </span><span class="p">}</span>
<span class="w">    </span><span class="k">return</span><span class="w"> </span><span class="nx">obj</span><span class="p">;</span>
<span class="p">}</span>

<span class="kd">function</span><span class="w"> </span><span class="nx">getHouseholdMembers</span><span class="p">(</span><span class="nx">context</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="c1">// Returns groups of Person Ids consisting of people who are still alive and from the same address.</span>
<span class="w">    </span><span class="kd">const</span><span class="w"> </span><span class="nx">households</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">{};</span>
<span class="w">    </span><span class="kd">const</span><span class="w"> </span><span class="nx">livingPersons</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">cordra</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="s1">&#39;+type:&quot;Person&quot; -/death/date:[* TO *]&#39;</span><span class="p">);</span>
<span class="w">    </span><span class="nx">livingPersons</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">person</span><span class="w"> </span><span class="p">=&gt;</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="kd">const</span><span class="w"> </span><span class="nx">addressHash</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">getAddressHash</span><span class="p">(</span><span class="nx">person</span><span class="p">.</span><span class="nx">content</span><span class="p">.</span><span class="nx">address</span><span class="p">);</span>
<span class="w">        </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nx">addressHash</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">            </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="o">!</span><span class="nx">households</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">addressHash</span><span class="p">))</span><span class="w"> </span><span class="p">{</span>
<span class="w">                </span><span class="nx">households</span><span class="p">[</span><span class="nx">addressHash</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">[];</span>
<span class="w">            </span><span class="p">}</span>
<span class="w">            </span><span class="nx">households</span><span class="p">[</span><span class="nx">addressHash</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="nx">person</span><span class="p">.</span><span class="nx">id</span><span class="p">);</span>
<span class="w">        </span><span class="p">}</span>
<span class="w">    </span><span class="p">});</span>
<span class="w">    </span><span class="k">return</span><span class="w"> </span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">households</span><span class="p">).</span><span class="nx">map</span><span class="p">(</span><span class="nx">i</span><span class="w"> </span><span class="p">=&gt;</span><span class="w"> </span><span class="nx">households</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span>
<span class="p">}</span>

<span class="kd">function</span><span class="w"> </span><span class="nx">getAddressHash</span><span class="p">(</span><span class="nx">address</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="o">!</span><span class="nx">address</span><span class="p">)</span><span class="w"> </span><span class="k">return</span><span class="w"> </span><span class="kc">null</span><span class="p">;</span>
<span class="w">    </span><span class="kd">const</span><span class="w"> </span><span class="nx">lines</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">address</span><span class="p">.</span><span class="nx">line1</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="nx">address</span><span class="p">.</span><span class="nx">line2</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="nx">address</span><span class="p">.</span><span class="nx">line3</span><span class="p">;</span>
<span class="w">    </span><span class="k">return</span><span class="w"> </span><span class="nx">lines</span><span class="p">.</span><span class="nx">hashCode</span><span class="p">();</span>
<span class="p">}</span>

<span class="kd">function</span><span class="w"> </span><span class="nx">getExpiredFingerPrints</span><span class="p">(</span><span class="nx">context</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="c1">// Lists all Ids of living people that have lastCapturedDate before the given expirationDate.</span>
<span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="nx">expirationDate</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">context</span><span class="p">.</span><span class="nx">params</span><span class="p">.</span><span class="nx">expirationDate</span><span class="p">;</span>
<span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="o">!</span><span class="nx">expirationDate</span><span class="p">)</span><span class="w"> </span><span class="nx">expirationDate</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;*&#39;</span><span class="p">;</span>
<span class="w">    </span><span class="kd">const</span><span class="w"> </span><span class="nx">persons</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">cordra</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="s1">&#39;+type:&quot;Person&quot; -/death/date:[* TO *] +/fingerprints/lastCapturedDate:[* TO &#39;</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="nx">expirationDate</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="s1">&#39;}&#39;</span><span class="p">);</span>
<span class="w">    </span><span class="k">return</span><span class="w"> </span><span class="nx">persons</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">p</span><span class="w"> </span><span class="p">=&gt;</span><span class="w"> </span><span class="nx">p</span><span class="p">.</span><span class="nx">id</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Note: The de-duplication function shown is best-effort using search and only checking a few properties. A production
system would need to be more thorough (to disallow any simultaneous create/update requests that might be potential
duplicates), but this is sufficient for demonstration purposes.</p>
<p>We also need to add a static type method to the Loan type, for getting a list of persons with defaulted loans.</p>
<p>Loan Javascript:</p>
<div class="highlight-js notranslate"><div class="highlight"><pre><span></span><span class="kd">const</span><span class="w"> </span><span class="nx">cordra</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">require</span><span class="p">(</span><span class="s1">&#39;cordra&#39;</span><span class="p">);</span>
<span class="kd">let</span><span class="w"> </span><span class="nx">prefix</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">cordra</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;design&quot;</span><span class="p">).</span><span class="nx">content</span><span class="p">.</span><span class="nx">handleMintingConfig</span><span class="p">.</span><span class="nx">prefix</span><span class="p">;</span>
<span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="o">!</span><span class="nx">prefix</span><span class="p">)</span><span class="w"> </span><span class="nx">prefix</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">&#39;test&#39;</span><span class="p">;</span>

<span class="nx">exports</span><span class="p">.</span><span class="nx">staticMethods</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">{};</span>
<span class="nx">exports</span><span class="p">.</span><span class="nx">staticMethods</span><span class="p">[</span><span class="nx">prefix</span><span class="o">+</span><span class="s1">&#39;/Op.GetDefaulters&#39;</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">getDefaulters</span><span class="p">;</span>

<span class="kd">function</span><span class="w"> </span><span class="nx">getDefaulters</span><span class="p">(</span><span class="nx">context</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="kd">const</span><span class="w"> </span><span class="nx">livingPersons</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">cordra</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="s1">&#39;+type:&quot;Person&quot; -/death/date:[* TO *]&#39;</span><span class="p">);</span>
<span class="w">    </span><span class="kd">const</span><span class="w"> </span><span class="nx">personIds</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">livingPersons</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">p</span><span class="w"> </span><span class="p">=&gt;</span><span class="w"> </span><span class="nx">p</span><span class="p">.</span><span class="nx">id</span><span class="p">);</span>
<span class="w">    </span><span class="kd">const</span><span class="w"> </span><span class="nx">defaultedLoans</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">cordra</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="s1">&#39;+type:&quot;Loan&quot; +/status:&quot;defaulted&quot;&#39;</span><span class="p">);</span>
<span class="w">    </span><span class="kd">const</span><span class="w"> </span><span class="nx">defaultedBorrowers</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">[];</span>
<span class="w">    </span><span class="nx">defaultedLoans</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">loan</span><span class="w"> </span><span class="p">=&gt;</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="nx">loan</span><span class="p">.</span><span class="nx">content</span><span class="p">.</span><span class="nx">borrowers</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">borrower</span><span class="w"> </span><span class="p">=&gt;</span><span class="w"> </span><span class="p">{</span>
<span class="w">            </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nx">personIds</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">borrower</span><span class="p">)</span><span class="w"> </span><span class="o">!==</span><span class="w"> </span><span class="o">-</span><span class="mf">1</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">                </span><span class="nx">defaultedBorrowers</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">borrower</span><span class="p">);</span>
<span class="w">            </span><span class="p">}</span>
<span class="w">        </span><span class="p">})</span>
<span class="w">    </span><span class="p">});</span>
<span class="w">    </span><span class="k">return</span><span class="w"> </span><span class="nx">defaultedBorrowers</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">b</span><span class="w"> </span><span class="p">=&gt;</span><span class="w"> </span><span class="nx">personIds</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="w"> </span><span class="o">!==</span><span class="w"> </span><span class="o">-</span><span class="mf">1</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</div>
</section>
</section>
<section id="using-the-application">
<h2>Using the Application<a class="headerlink" href="#using-the-application" title="Permalink to this heading">¶</a></h2>
<p>We will use the DOIP Java SDK to demonstrate how to use the system. Although not shown here, the Cordra UI or any other
Cordra client library may be used to perform equivalent actions.</p>
<p>All identifiers shown are the randomly-generated identifiers included in the sample objects. If you have created your
own objects instead of importing the sample ones, you will need to substitute these values with the appropriate
identifiers in your local system.</p>
<section id="client-setup">
<h3>Client Setup<a class="headerlink" href="#client-setup" title="Permalink to this heading">¶</a></h3>
<p>Before proceeding, be sure you have configured your Java project with doip-sdk jar file on the classpath. You can find
instructions for doing so <a class="reference internal" href="../client/doip-java.html#doip-java-client-library"><span class="std std-ref">here</span></a>.</p>
<p>First, we must create a DOIP client Java instance, along with authentication and service information for the client to use.</p>
<div class="highlight-java notranslate"><div class="highlight"><pre><span></span><span class="n">String</span><span class="w"> </span><span class="n">serviceId</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&quot;test/service&quot;</span><span class="p">;</span>
<span class="n">DoipClient</span><span class="w"> </span><span class="n">client</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">DoipClient</span><span class="p">();</span>
<span class="n">ServiceInfo</span><span class="w"> </span><span class="n">serviceInfo</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">ServiceInfo</span><span class="p">(</span><span class="n">serviceId</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;localhost&quot;</span><span class="p">,</span><span class="w"> </span><span class="mi">9000</span><span class="p">);</span>
<span class="n">AuthenticationInfo</span><span class="w"> </span><span class="n">adminAuthInfo</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">PasswordAuthenticationInfo</span><span class="p">(</span><span class="s">&quot;admin1&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;password&quot;</span><span class="p">);</span>
</pre></div>
</div>
<p>Change the authentication and service information as appropriate to your system. You may prefer to use a PKI based setup.</p>
</section>
<section id="basic-operations">
<h3>Basic Operations<a class="headerlink" href="#basic-operations" title="Permalink to this heading">¶</a></h3>
<p>Create a Person:</p>
<div class="highlight-java notranslate"><div class="highlight"><pre><span></span><span class="n">DigitalObject</span><span class="w"> </span><span class="n">personDobj</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">DigitalObject</span><span class="p">();</span>
<span class="n">personDobj</span><span class="p">.</span><span class="na">type</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&quot;Person&quot;</span><span class="p">;</span>
<span class="n">JsonObject</span><span class="w"> </span><span class="n">personContent</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">JsonObject</span><span class="p">();</span>
<span class="n">JsonObject</span><span class="w"> </span><span class="n">name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">JsonObject</span><span class="p">();</span>
<span class="n">name</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;first&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;Jane&quot;</span><span class="p">);</span>
<span class="n">name</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;last&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;Doe&quot;</span><span class="p">);</span>
<span class="n">personContent</span><span class="p">.</span><span class="na">add</span><span class="p">(</span><span class="s">&quot;name&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">name</span><span class="p">);</span>
<span class="n">personContent</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;gender&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;female&quot;</span><span class="p">);</span>
<span class="n">JsonObject</span><span class="w"> </span><span class="n">address</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">JsonObject</span><span class="p">();</span>
<span class="n">address</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;line1&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;123 Elm St&quot;</span><span class="p">);</span>
<span class="n">address</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;line2&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;Apt A&quot;</span><span class="p">);</span>
<span class="n">address</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;line3&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;Charlottesville, VA 22902&quot;</span><span class="p">);</span>
<span class="n">personContent</span><span class="p">.</span><span class="na">add</span><span class="p">(</span><span class="s">&quot;address&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">address</span><span class="p">);</span>
<span class="n">JsonObject</span><span class="w"> </span><span class="n">birth</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">JsonObject</span><span class="p">();</span>
<span class="n">birth</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;date&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;19330202&quot;</span><span class="p">);</span>
<span class="n">personContent</span><span class="p">.</span><span class="na">add</span><span class="p">(</span><span class="s">&quot;birth&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">birth</span><span class="p">);</span>
<span class="n">JsonObject</span><span class="w"> </span><span class="n">death</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">JsonObject</span><span class="p">();</span>
<span class="n">death</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;date&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;20200115&quot;</span><span class="p">);</span>
<span class="n">personContent</span><span class="p">.</span><span class="na">add</span><span class="p">(</span><span class="s">&quot;death&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">death</span><span class="p">);</span>
<span class="n">JsonArray</span><span class="w"> </span><span class="n">issueIds</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">JsonArray</span><span class="p">();</span>
<span class="n">JsonObject</span><span class="w"> </span><span class="n">id</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">JsonObject</span><span class="p">();</span>
<span class="n">id</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;type&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;license&quot;</span><span class="p">);</span>
<span class="n">id</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;id&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;123456-789&quot;</span><span class="p">);</span>
<span class="n">issueIds</span><span class="p">.</span><span class="na">add</span><span class="p">(</span><span class="n">id</span><span class="p">);</span>
<span class="n">personContent</span><span class="p">.</span><span class="na">add</span><span class="p">(</span><span class="s">&quot;issuedIds&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">issueIds</span><span class="p">);</span>
<span class="n">JsonObject</span><span class="w"> </span><span class="n">prints</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">JsonObject</span><span class="p">();</span>
<span class="n">prints</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;id&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;qwerty123456&quot;</span><span class="p">);</span>
<span class="n">prints</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;source&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;govt&quot;</span><span class="p">);</span>
<span class="n">prints</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;lastCapturedDate&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;19750306&quot;</span><span class="p">);</span>
<span class="n">personContent</span><span class="p">.</span><span class="na">add</span><span class="p">(</span><span class="s">&quot;fingerprints&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">prints</span><span class="p">);</span>
<span class="n">personDobj</span><span class="p">.</span><span class="na">setAttribute</span><span class="p">(</span><span class="s">&quot;content&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">personContent</span><span class="p">);</span>
<span class="n">personDobj</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">client</span><span class="p">.</span><span class="na">create</span><span class="p">(</span><span class="n">personDobj</span><span class="p">,</span><span class="w"> </span><span class="n">adminAuthInfo</span><span class="p">,</span><span class="w"> </span><span class="n">serviceInfo</span><span class="p">);</span>
<span class="n">System</span><span class="p">.</span><span class="na">out</span><span class="p">.</span><span class="na">println</span><span class="p">(</span><span class="s">&quot;Created Person: &quot;</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">personDobj</span><span class="p">.</span><span class="na">id</span><span class="p">);</span>
</pre></div>
</div>
<p>Create a Loan:</p>
<div class="highlight-java notranslate"><div class="highlight"><pre><span></span><span class="n">DigitalObject</span><span class="w"> </span><span class="n">loanDobj</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">DigitalObject</span><span class="p">();</span>
<span class="n">loanDobj</span><span class="p">.</span><span class="na">id</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&quot;test/a4a33fed1bba7e8752ea&quot;</span><span class="p">;</span>
<span class="n">loanDobj</span><span class="p">.</span><span class="na">type</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&quot;Loan&quot;</span><span class="p">;</span>
<span class="n">JsonObject</span><span class="w"> </span><span class="n">loanContent</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">JsonObject</span><span class="p">();</span>
<span class="n">loanContent</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;lender&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;ABC Bank&quot;</span><span class="p">);</span>
<span class="n">loanContent</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;start&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;20180101&quot;</span><span class="p">);</span>
<span class="n">loanContent</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;end&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;20220101&quot;</span><span class="p">);</span>
<span class="n">loanContent</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;status&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;performing&quot;</span><span class="p">);</span>
<span class="n">JsonObject</span><span class="w"> </span><span class="n">amount</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">JsonObject</span><span class="p">();</span>
<span class="n">amount</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;amount&quot;</span><span class="p">,</span><span class="w"> </span><span class="mi">10000</span><span class="p">);</span>
<span class="n">amount</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;currency&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;USD&quot;</span><span class="p">);</span>
<span class="n">loanContent</span><span class="p">.</span><span class="na">add</span><span class="p">(</span><span class="s">&quot;amount&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">amount</span><span class="p">);</span>
<span class="n">JsonArray</span><span class="w"> </span><span class="n">borrowers</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">JsonArray</span><span class="p">();</span>
<span class="n">borrowers</span><span class="p">.</span><span class="na">add</span><span class="p">(</span><span class="n">personDobj</span><span class="p">.</span><span class="na">id</span><span class="p">);</span>
<span class="n">loanContent</span><span class="p">.</span><span class="na">add</span><span class="p">(</span><span class="s">&quot;borrowers&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">borrowers</span><span class="p">);</span>
<span class="n">loanDobj</span><span class="p">.</span><span class="na">setAttribute</span><span class="p">(</span><span class="s">&quot;content&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">loanContent</span><span class="p">);</span>
<span class="n">loanDobj</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">client</span><span class="p">.</span><span class="na">create</span><span class="p">(</span><span class="n">loanDobj</span><span class="p">,</span><span class="w"> </span><span class="n">adminAuthInfo</span><span class="p">,</span><span class="w"> </span><span class="n">serviceInfo</span><span class="p">);</span>
<span class="n">System</span><span class="p">.</span><span class="na">out</span><span class="p">.</span><span class="na">println</span><span class="p">(</span><span class="s">&quot;\nCreated Loan: &quot;</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">loanDobj</span><span class="p">.</span><span class="na">id</span><span class="p">);</span>
</pre></div>
</div>
<p>Retrieve:</p>
<div class="highlight-java notranslate"><div class="highlight"><pre><span></span><span class="n">loanDobj</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">client</span><span class="p">.</span><span class="na">retrieve</span><span class="p">(</span><span class="n">loanDobj</span><span class="p">.</span><span class="na">id</span><span class="p">,</span><span class="w"> </span><span class="n">adminAuthInfo</span><span class="p">,</span><span class="w"> </span><span class="n">serviceInfo</span><span class="p">);</span>
</pre></div>
</div>
<p>Update an object:</p>
<div class="highlight-java notranslate"><div class="highlight"><pre><span></span><span class="n">loanDobj</span><span class="p">.</span><span class="na">attributes</span><span class="p">.</span><span class="na">get</span><span class="p">(</span><span class="s">&quot;content&quot;</span><span class="p">).</span><span class="na">getAsJsonObject</span><span class="p">().</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;lender&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;XYZ Bank&quot;</span><span class="p">);</span>
<span class="n">loanDobj</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">client</span><span class="p">.</span><span class="na">update</span><span class="p">(</span><span class="n">loanDobj</span><span class="p">,</span><span class="w"> </span><span class="n">adminAuthInfo</span><span class="p">,</span><span class="w"> </span><span class="n">serviceInfo</span><span class="p">);</span>
</pre></div>
</div>
<p>Delete: See below, as these code blocks are organized such that they can be transferred in order into a Java method.</p>
<p>Search:</p>
<div class="highlight-java notranslate"><div class="highlight"><pre><span></span><span class="n">QueryParams</span><span class="w"> </span><span class="n">queryParams</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">QueryParams</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="mi">50</span><span class="p">);</span>
<span class="n">String</span><span class="w"> </span><span class="n">query</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&quot;*:*&quot;</span><span class="p">;</span>
<span class="k">try</span><span class="w"> </span><span class="p">(</span><span class="n">SearchResults</span><span class="o">&lt;</span><span class="n">DigitalObject</span><span class="o">&gt;</span><span class="w"> </span><span class="n">results</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">client</span><span class="p">.</span><span class="na">search</span><span class="p">(</span><span class="n">serviceId</span><span class="p">,</span><span class="w"> </span><span class="n">query</span><span class="p">,</span><span class="w"> </span><span class="n">queryParams</span><span class="p">,</span><span class="w"> </span><span class="n">adminAuthInfo</span><span class="p">,</span><span class="w"> </span><span class="n">serviceInfo</span><span class="p">))</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="n">System</span><span class="p">.</span><span class="na">out</span><span class="p">.</span><span class="na">println</span><span class="p">(</span><span class="s">&quot;\nSearch: Found &quot;</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">results</span><span class="p">.</span><span class="na">size</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="s">&quot; objects:&quot;</span><span class="p">);</span>
<span class="w">    </span><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="n">DigitalObject</span><span class="w"> </span><span class="n">result</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="n">results</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="n">System</span><span class="p">.</span><span class="na">out</span><span class="p">.</span><span class="na">println</span><span class="p">(</span><span class="s">&quot;\t&quot;</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">result</span><span class="p">.</span><span class="na">id</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="s">&quot;: &quot;</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">result</span><span class="p">.</span><span class="na">type</span><span class="p">);</span>
<span class="w">    </span><span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>List Operations:</p>
<div class="highlight-java notranslate"><div class="highlight"><pre><span></span><span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span><span class="w"> </span><span class="n">ops</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">client</span><span class="p">.</span><span class="na">listOperations</span><span class="p">(</span><span class="s">&quot;test/8c41ae88467fe5bbad09&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">adminAuthInfo</span><span class="p">,</span><span class="w"> </span><span class="n">serviceInfo</span><span class="p">);</span>
<span class="n">System</span><span class="p">.</span><span class="na">out</span><span class="p">.</span><span class="na">println</span><span class="p">(</span><span class="s">&quot;Operations available on Person schema:&quot;</span><span class="p">);</span>
<span class="n">ops</span><span class="p">.</span><span class="na">forEach</span><span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="na">out</span><span class="p">::</span><span class="n">println</span><span class="p">);</span>
<span class="n">ops</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">client</span><span class="p">.</span><span class="na">listOperations</span><span class="p">(</span><span class="s">&quot;test/36c71e41f2d1e438ced9&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">adminAuthInfo</span><span class="p">,</span><span class="w"> </span><span class="n">serviceInfo</span><span class="p">);</span>
<span class="n">System</span><span class="p">.</span><span class="na">out</span><span class="p">.</span><span class="na">println</span><span class="p">(</span><span class="s">&quot;\nOperations available on Loan schema:&quot;</span><span class="p">);</span>
<span class="n">ops</span><span class="p">.</span><span class="na">forEach</span><span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="na">out</span><span class="p">::</span><span class="n">println</span><span class="p">);</span>
</pre></div>
</div>
</section>
<section id="extended-operations">
<h3>Extended Operations<a class="headerlink" href="#extended-operations" title="Permalink to this heading">¶</a></h3>
<p>Op.GetExpiredFingerPrints:</p>
<div class="highlight-java notranslate"><div class="highlight"><pre><span></span><span class="n">JsonObject</span><span class="w"> </span><span class="n">params</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">JsonObject</span><span class="p">();</span>
<span class="n">params</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;expirationDate&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;20200101&quot;</span><span class="p">);</span>
<span class="k">try</span><span class="w"> </span><span class="p">(</span><span class="n">DoipClientResponse</span><span class="w"> </span><span class="n">resp</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">client</span><span class="p">.</span><span class="na">performOperation</span><span class="p">(</span><span class="s">&quot;test/8c41ae88467fe5bbad09&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;test/Op.GetExpiredFingerPrints&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">adminAuthInfo</span><span class="p">,</span><span class="w"> </span><span class="kc">null</span><span class="p">,</span><span class="w"> </span><span class="n">params</span><span class="p">,</span><span class="w"> </span><span class="n">serviceInfo</span><span class="p">))</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">resp</span><span class="p">.</span><span class="na">getStatus</span><span class="p">().</span><span class="na">equals</span><span class="p">(</span><span class="n">DoipConstants</span><span class="p">.</span><span class="na">STATUS_OK</span><span class="p">))</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="k">try</span><span class="w"> </span><span class="p">(</span><span class="n">InDoipMessage</span><span class="w"> </span><span class="n">in</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">resp</span><span class="p">.</span><span class="na">getOutput</span><span class="p">())</span><span class="w"> </span><span class="p">{</span>
<span class="w">            </span><span class="n">InDoipSegment</span><span class="w"> </span><span class="n">firstSegment</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">InDoipMessageUtil</span><span class="p">.</span><span class="na">getFirstSegment</span><span class="p">(</span><span class="n">in</span><span class="p">);</span>
<span class="w">            </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">firstSegment</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="kc">null</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">                </span><span class="k">throw</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">DoipException</span><span class="p">(</span><span class="s">&quot;Missing first segment in response&quot;</span><span class="p">);</span>
<span class="w">            </span><span class="p">}</span>
<span class="w">            </span><span class="n">System</span><span class="p">.</span><span class="na">out</span><span class="p">.</span><span class="na">println</span><span class="p">(</span><span class="s">&quot;\nOp.GetExpiredFingerPrints response:&quot;</span><span class="p">);</span>
<span class="w">            </span><span class="n">Gson</span><span class="w"> </span><span class="n">gson</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">GsonBuilder</span><span class="p">().</span><span class="na">setPrettyPrinting</span><span class="p">().</span><span class="na">create</span><span class="p">();</span>
<span class="w">            </span><span class="n">System</span><span class="p">.</span><span class="na">out</span><span class="p">.</span><span class="na">println</span><span class="p">(</span><span class="n">gson</span><span class="p">.</span><span class="na">toJson</span><span class="p">(</span><span class="n">firstSegment</span><span class="p">.</span><span class="na">getJson</span><span class="p">()));</span>
<span class="w">        </span><span class="p">}</span>
<span class="w">    </span><span class="p">}</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="k">throw</span><span class="w"> </span><span class="n">DoipClient</span><span class="p">.</span><span class="na">doipExceptionFromDoipResponse</span><span class="p">(</span><span class="n">resp</span><span class="p">);</span>
<span class="w">    </span><span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Op.GetHouseholdMembers:</p>
<div class="highlight-java notranslate"><div class="highlight"><pre><span></span><span class="k">try</span><span class="w"> </span><span class="p">(</span><span class="n">DoipClientResponse</span><span class="w"> </span><span class="n">resp</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">client</span><span class="p">.</span><span class="na">performOperation</span><span class="p">(</span><span class="s">&quot;test/8c41ae88467fe5bbad09&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;test/Op.GetHouseholdMembers&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">adminAuthInfo</span><span class="p">,</span><span class="w"> </span><span class="kc">null</span><span class="p">,</span><span class="w"> </span><span class="n">serviceInfo</span><span class="p">))</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">resp</span><span class="p">.</span><span class="na">getStatus</span><span class="p">().</span><span class="na">equals</span><span class="p">(</span><span class="n">DoipConstants</span><span class="p">.</span><span class="na">STATUS_OK</span><span class="p">))</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="k">try</span><span class="w"> </span><span class="p">(</span><span class="n">InDoipMessage</span><span class="w"> </span><span class="n">in</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">resp</span><span class="p">.</span><span class="na">getOutput</span><span class="p">())</span><span class="w"> </span><span class="p">{</span>
<span class="w">            </span><span class="n">InDoipSegment</span><span class="w"> </span><span class="n">firstSegment</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">InDoipMessageUtil</span><span class="p">.</span><span class="na">getFirstSegment</span><span class="p">(</span><span class="n">in</span><span class="p">);</span>
<span class="w">            </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">firstSegment</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="kc">null</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">                </span><span class="k">throw</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">DoipException</span><span class="p">(</span><span class="s">&quot;Missing first segment in response&quot;</span><span class="p">);</span>
<span class="w">            </span><span class="p">}</span>
<span class="w">            </span><span class="n">System</span><span class="p">.</span><span class="na">out</span><span class="p">.</span><span class="na">println</span><span class="p">(</span><span class="s">&quot;Op.GetHouseholdMembers response:&quot;</span><span class="p">);</span>
<span class="w">            </span><span class="n">Gson</span><span class="w"> </span><span class="n">gson</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">GsonBuilder</span><span class="p">().</span><span class="na">setPrettyPrinting</span><span class="p">().</span><span class="na">create</span><span class="p">();</span>
<span class="w">            </span><span class="n">System</span><span class="p">.</span><span class="na">out</span><span class="p">.</span><span class="na">println</span><span class="p">(</span><span class="n">gson</span><span class="p">.</span><span class="na">toJson</span><span class="p">(</span><span class="n">firstSegment</span><span class="p">.</span><span class="na">getJson</span><span class="p">()));</span>
<span class="w">        </span><span class="p">}</span>
<span class="w">    </span><span class="p">}</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="k">throw</span><span class="w"> </span><span class="n">DoipClient</span><span class="p">.</span><span class="na">doipExceptionFromDoipResponse</span><span class="p">(</span><span class="n">resp</span><span class="p">);</span>
<span class="w">    </span><span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Op.GetDefaulters:</p>
<div class="highlight-java notranslate"><div class="highlight"><pre><span></span><span class="k">try</span><span class="w"> </span><span class="p">(</span><span class="n">DoipClientResponse</span><span class="w"> </span><span class="n">resp</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">client</span><span class="p">.</span><span class="na">performOperation</span><span class="p">(</span><span class="s">&quot;test/36c71e41f2d1e438ced9&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;test/Op.GetDefaulters&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">adminAuthInfo</span><span class="p">,</span><span class="w"> </span><span class="kc">null</span><span class="p">,</span><span class="w"> </span><span class="n">serviceInfo</span><span class="p">))</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">resp</span><span class="p">.</span><span class="na">getStatus</span><span class="p">().</span><span class="na">equals</span><span class="p">(</span><span class="n">DoipConstants</span><span class="p">.</span><span class="na">STATUS_OK</span><span class="p">))</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="k">try</span><span class="w"> </span><span class="p">(</span><span class="n">InDoipMessage</span><span class="w"> </span><span class="n">in</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">resp</span><span class="p">.</span><span class="na">getOutput</span><span class="p">())</span><span class="w"> </span><span class="p">{</span>
<span class="w">            </span><span class="n">InDoipSegment</span><span class="w"> </span><span class="n">firstSegment</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">InDoipMessageUtil</span><span class="p">.</span><span class="na">getFirstSegment</span><span class="p">(</span><span class="n">in</span><span class="p">);</span>
<span class="w">            </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">firstSegment</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="kc">null</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
<span class="w">                </span><span class="k">throw</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">DoipException</span><span class="p">(</span><span class="s">&quot;Missing first segment in response&quot;</span><span class="p">);</span>
<span class="w">            </span><span class="p">}</span>
<span class="w">            </span><span class="n">System</span><span class="p">.</span><span class="na">out</span><span class="p">.</span><span class="na">println</span><span class="p">(</span><span class="s">&quot;Op.GetDefaulters response:&quot;</span><span class="p">);</span>
<span class="w">            </span><span class="n">Gson</span><span class="w"> </span><span class="n">gson</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">GsonBuilder</span><span class="p">().</span><span class="na">setPrettyPrinting</span><span class="p">().</span><span class="na">create</span><span class="p">();</span>
<span class="w">            </span><span class="n">System</span><span class="p">.</span><span class="na">out</span><span class="p">.</span><span class="na">println</span><span class="p">(</span><span class="n">gson</span><span class="p">.</span><span class="na">toJson</span><span class="p">(</span><span class="n">firstSegment</span><span class="p">.</span><span class="na">getJson</span><span class="p">()));</span>
<span class="w">        </span><span class="p">}</span>
<span class="w">    </span><span class="p">}</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="p">{</span>
<span class="w">        </span><span class="k">throw</span><span class="w"> </span><span class="n">DoipClient</span><span class="p">.</span><span class="na">doipExceptionFromDoipResponse</span><span class="p">(</span><span class="n">resp</span><span class="p">);</span>
<span class="w">    </span><span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
</section>
<section id="payloads">
<h3>Payloads<a class="headerlink" href="#payloads" title="Permalink to this heading">¶</a></h3>
<p>Binary files can be attached to Person or Loan objects as payloads. Payloads can be files such as pictures, scans of certificates or government issued ids, or documents.</p>
<p>For example, to add a payload to an existing Loan object:</p>
<div class="highlight-java notranslate"><div class="highlight"><pre><span></span><span class="n">DigitalObject</span><span class="w"> </span><span class="n">loanDobj</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">client</span><span class="p">.</span><span class="na">retrieve</span><span class="p">(</span><span class="s">&quot;test/a4a33fed1bba7e8752ea&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">adminAuthInfo</span><span class="p">,</span><span class="w"> </span><span class="n">serviceInfo</span><span class="p">);</span>
<span class="n">Element</span><span class="w"> </span><span class="n">payload</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">Element</span><span class="p">();</span>
<span class="n">payload</span><span class="p">.</span><span class="na">type</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&quot;application/pdf&quot;</span><span class="p">;</span>
<span class="n">payload</span><span class="p">.</span><span class="na">id</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&quot;contract.pdf&quot;</span><span class="p">;</span>
<span class="n">payload</span><span class="p">.</span><span class="na">in</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Files</span><span class="p">.</span><span class="na">newInputStream</span><span class="p">(</span><span class="n">Paths</span><span class="p">.</span><span class="na">get</span><span class="p">(</span><span class="s">&quot;contract.pdf&quot;</span><span class="p">));</span><span class="w"> </span><span class="c1">// Change this to a file on your local system</span>
<span class="n">payload</span><span class="p">.</span><span class="na">attributes</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">JsonObject</span><span class="p">();</span>
<span class="n">payload</span><span class="p">.</span><span class="na">attributes</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;filename&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;contract.pdf&quot;</span><span class="p">);</span>
<span class="n">loanDobj</span><span class="p">.</span><span class="na">elements</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">ArrayList</span><span class="o">&lt;&gt;</span><span class="p">();</span>
<span class="n">loanDobj</span><span class="p">.</span><span class="na">elements</span><span class="p">.</span><span class="na">add</span><span class="p">(</span><span class="n">payload</span><span class="p">);</span>
<span class="n">client</span><span class="p">.</span><span class="na">update</span><span class="p">(</span><span class="n">loanDobj</span><span class="p">,</span><span class="w"> </span><span class="n">adminAuthInfo</span><span class="p">,</span><span class="w"> </span><span class="n">serviceInfo</span><span class="p">);</span>
</pre></div>
</div>
</section>
<section id="deduplication-and-access-controls">
<h3>Deduplication and Access Controls<a class="headerlink" href="#deduplication-and-access-controls" title="Permalink to this heading">¶</a></h3>
<p>If you try to create a duplicate person, the <code class="docutils literal notranslate"><span class="pre">beforeSchemaValidation</span></code> lifecycle hook will block the change. For
example, running this code (which duplicates one of the sample persons):</p>
<div class="highlight-java notranslate"><div class="highlight"><pre><span></span><span class="n">DigitalObject</span><span class="w"> </span><span class="n">personDobj</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">DigitalObject</span><span class="p">();</span>
<span class="n">personDobj</span><span class="p">.</span><span class="na">type</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&quot;Person&quot;</span><span class="p">;</span>
<span class="n">JsonObject</span><span class="w"> </span><span class="n">personContent</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">JsonObject</span><span class="p">();</span>
<span class="n">JsonObject</span><span class="w"> </span><span class="n">name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">JsonObject</span><span class="p">();</span>
<span class="n">name</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;first&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;Jane&quot;</span><span class="p">);</span>
<span class="n">name</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;last&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;Hoeger&quot;</span><span class="p">);</span>
<span class="n">personContent</span><span class="p">.</span><span class="na">add</span><span class="p">(</span><span class="s">&quot;name&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">name</span><span class="p">);</span>
<span class="n">personContent</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;gender&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;female&quot;</span><span class="p">);</span>
<span class="n">JsonObject</span><span class="w"> </span><span class="n">address</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">JsonObject</span><span class="p">();</span>
<span class="n">address</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;line1&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;123 Elm St&quot;</span><span class="p">);</span>
<span class="n">address</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;line2&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;Apt A&quot;</span><span class="p">);</span>
<span class="n">address</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;line3&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;Charlottesville, VA 22902&quot;</span><span class="p">);</span>
<span class="n">personContent</span><span class="p">.</span><span class="na">add</span><span class="p">(</span><span class="s">&quot;address&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">address</span><span class="p">);</span>
<span class="n">JsonObject</span><span class="w"> </span><span class="n">birth</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">JsonObject</span><span class="p">();</span>
<span class="n">birth</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;date&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;19941221&quot;</span><span class="p">);</span>
<span class="n">personContent</span><span class="p">.</span><span class="na">add</span><span class="p">(</span><span class="s">&quot;birth&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">birth</span><span class="p">);</span>
<span class="n">JsonArray</span><span class="w"> </span><span class="n">issueIds</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">JsonArray</span><span class="p">();</span>
<span class="n">JsonObject</span><span class="w"> </span><span class="n">id</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">JsonObject</span><span class="p">();</span>
<span class="n">id</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;type&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;license&quot;</span><span class="p">);</span>
<span class="n">id</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;id&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;123456-789&quot;</span><span class="p">);</span>
<span class="n">issueIds</span><span class="p">.</span><span class="na">add</span><span class="p">(</span><span class="n">id</span><span class="p">);</span>
<span class="n">personContent</span><span class="p">.</span><span class="na">add</span><span class="p">(</span><span class="s">&quot;issuedIds&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">issueIds</span><span class="p">);</span>
<span class="n">JsonObject</span><span class="w"> </span><span class="n">prints</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">JsonObject</span><span class="p">();</span>
<span class="n">prints</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;id&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;qwerty123456&quot;</span><span class="p">);</span>
<span class="n">prints</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;source&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;govt&quot;</span><span class="p">);</span>
<span class="n">prints</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;lastCapturedDate&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;19750306&quot;</span><span class="p">);</span>
<span class="n">personContent</span><span class="p">.</span><span class="na">add</span><span class="p">(</span><span class="s">&quot;fingerprints&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">prints</span><span class="p">);</span>
<span class="n">personDobj</span><span class="p">.</span><span class="na">setAttribute</span><span class="p">(</span><span class="s">&quot;content&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">personContent</span><span class="p">);</span>
<span class="n">client</span><span class="p">.</span><span class="na">create</span><span class="p">(</span><span class="n">personDobj</span><span class="p">,</span><span class="w"> </span><span class="n">adminAuthInfo</span><span class="p">,</span><span class="w"> </span><span class="n">serviceInfo</span><span class="p">);</span>
</pre></div>
</div>
<p>Will produce an error like this:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>Exception in thread &quot;main&quot; net.dona.doip.client.DoipException: Bad request: 400; Either Issued Id or Last Name + Birthday is duplicated.
</pre></div>
</div>
<p>Trying to create objects as a user will also fail, due to the Authorization configuration. For example, this Loan
creation attempt:</p>
<div class="highlight-java notranslate"><div class="highlight"><pre><span></span><span class="n">DigitalObject</span><span class="w"> </span><span class="n">loanDobj</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">DigitalObject</span><span class="p">();</span>
<span class="n">loanDobj</span><span class="p">.</span><span class="na">type</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&quot;Loan&quot;</span><span class="p">;</span>
<span class="n">JsonObject</span><span class="w"> </span><span class="n">loanContent</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">JsonObject</span><span class="p">();</span>
<span class="n">loanContent</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;lender&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;ABC Bank&quot;</span><span class="p">);</span>
<span class="n">loanContent</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;start&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;20180101&quot;</span><span class="p">);</span>
<span class="n">loanContent</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;end&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;20220101&quot;</span><span class="p">);</span>
<span class="n">loanContent</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;status&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;performing&quot;</span><span class="p">);</span>
<span class="n">JsonObject</span><span class="w"> </span><span class="n">amount</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">JsonObject</span><span class="p">();</span>
<span class="n">amount</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;amount&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;10000&quot;</span><span class="p">);</span>
<span class="n">amount</span><span class="p">.</span><span class="na">addProperty</span><span class="p">(</span><span class="s">&quot;currency&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;USD&quot;</span><span class="p">);</span>
<span class="n">loanContent</span><span class="p">.</span><span class="na">add</span><span class="p">(</span><span class="s">&quot;amount&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">amount</span><span class="p">);</span>
<span class="n">JsonArray</span><span class="w"> </span><span class="n">borrowers</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">JsonArray</span><span class="p">();</span>
<span class="n">borrowers</span><span class="p">.</span><span class="na">add</span><span class="p">(</span><span class="s">&quot;test/987a25ef7a329664b150&quot;</span><span class="p">);</span>
<span class="n">loanContent</span><span class="p">.</span><span class="na">add</span><span class="p">(</span><span class="s">&quot;borrowers&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">borrowers</span><span class="p">);</span>
<span class="n">loanDobj</span><span class="p">.</span><span class="na">setAttribute</span><span class="p">(</span><span class="s">&quot;content&quot;</span><span class="p">,</span><span class="w"> </span><span class="n">loanContent</span><span class="p">);</span>
<span class="c1">// Using user authentication info instead of admin</span>
<span class="n">AuthenticationInfo</span><span class="w"> </span><span class="n">userAuthInfo</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">PasswordAuthenticationInfo</span><span class="p">(</span><span class="s">&quot;user1&quot;</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;password&quot;</span><span class="p">);</span>
<span class="n">client</span><span class="p">.</span><span class="na">create</span><span class="p">(</span><span class="n">loanDobj</span><span class="p">,</span><span class="w"> </span><span class="n">userAuthInfo</span><span class="p">,</span><span class="w"> </span><span class="n">serviceInfo</span><span class="p">);</span>
</pre></div>
</div>
<p>Will produce an error like this:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>Exception in thread &quot;main&quot; net.dona.doip.client.DoipException: Forbidden: 403
</pre></div>
</div>
<p>However, users can still read object and call read-only static methods. Unauthenticated users who try to read objects
instead get a <code class="docutils literal notranslate"><span class="pre">Unauthorized:</span> <span class="pre">401</span></code> error.</p>
</section>
<section id="basic-operations-continued">
<h3>Basic Operations (continued)<a class="headerlink" href="#basic-operations-continued" title="Permalink to this heading">¶</a></h3>
<p>Delete objects:</p>
<div class="highlight-java notranslate"><div class="highlight"><pre><span></span><span class="n">client</span><span class="p">.</span><span class="na">delete</span><span class="p">(</span><span class="n">personDobj</span><span class="p">.</span><span class="na">id</span><span class="p">,</span><span class="w"> </span><span class="n">adminAuthInfo</span><span class="p">,</span><span class="w"> </span><span class="n">serviceInfo</span><span class="p">);</span>
<span class="n">client</span><span class="p">.</span><span class="na">delete</span><span class="p">(</span><span class="n">loanDobj</span><span class="p">.</span><span class="na">id</span><span class="p">,</span><span class="w"> </span><span class="n">adminAuthInfo</span><span class="p">,</span><span class="w"> </span><span class="n">serviceInfo</span><span class="p">);</span>
</pre></div>
</div>
</section>
</section>
</section>


          </div>
          
        </div>
      </div>
    <div class="clearer"></div>
  </div>

<!-- BEGIN FOOTER -->
<footer id="footer">
    <div id="footer-main" class="container-large">
        <div class="row">
            <div class="col-lg-4 col-md-4 col-sm-4">
                <div class="widget widget-text">
                    <h3 class="widget-title">Who are we?</h3>
                    <!-- <img width="200" height="50" class="footer-logo" src="_static/img/logo/cordra-light.png" alt="logo"> -->
                    <p>CNRI is a not-for-profit organization formed in 1986 to undertake, foster, and promote research on information infrastructure in the public interest.</p>
                    <p><i class="nc-icon-outline ui-1_home-minimal"></i> Corporation for National Research Initiatives</p>
                    <p><i class="nc-icon-outline location_position-marker"></i> 1895 Preston White Drive, Suite 100, Reston, Virginia 20191, USA</p>
                </div>
            </div>
            <div class="col-lg-4 col-md-4 col-sm-4 hidden-xs-down">
                <div class="widget widget-links">
                    <div class="widget-title">
                        <h3 class="widget-title">Quick Links</h3>
                    </div>
                    <ul>
                        <li>
                            <a href="/cordra.html">What's Cordra</a>
                        </li>
                        <li>
                            <a href="/download.html">Download</a>
                        </li>
                        <li>
                            <a href="/documentation/introduction/introduction.html">Developer Resources</a>
                        </li>
                        <li>
                            <a href="/download.html#section-licenses">Licenses</a>
                        </li>
                        <li>
                            <a href="/privacypolicy.html">Privacy Policy</a>
                        </li>
                    </ul>
                </div>
            </div>
            <div class="col-lg-4 col-md-4 hidden-md-down">
                <div class="widget">
                    <h3 class="widget-title">Contact Us</h3>
                    <p>Drop us an
                        <span class="f-18 c-white w-700 font-handwriting">
                            <a href="#" onclick="document.getElementById('emailAddress').style.display = 'block'; return false;" class="c-white">email.</a>
                            <span id="emailAddress" style="display: none;" class="c-white text-sm w-100">support@cordra.org</span>
                        </span>
                    </p>
                    <p>Join us on <a href="https://hdl.handle.net/20.5000/cordra-slack" target="_blank"><img width="100px" height="100px" src="../_static/img/slack_white.png" alt="Slack" class="m-l--10" /></a><span
                            class="f-18 c-white w-700 font-handwriting m-l--10">.</span></p>
                </div>
            </div>
        </div>
    </div>
    <div id="footer-bottom">
        <div class="container-large">
            <div class="row">
                <div class="col-sm-12 t-center">
                    <p class="copyright">Copyright&copy; 2020. Corporation for National Resesarch Initiatives. Cordra&reg; is a trademark of Corporation for National Research Initiatives.</p>
                </div>
            </div>
        </div>
    </div>
</footer>
<!-- END FOOTER -->

  </body>
</html> contentType 9 text/html url 72 https://www.cordra.org:443/documentation/extensions/person-registry.html responseCode 3 200 