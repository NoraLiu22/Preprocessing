uiemfigkoghaaclcpimkheicdkgecquobghkdkbq length 4 2535 page 2535 <!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="/ols4favicon.ico" />
    <link rel="stylesheet" href="/ols4styles.css" />
    <style>
      @import url("https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&display=swap");
    </style>
    <link
      rel="stylesheet"
      href="https://ebi.emblstatic.net/web_guidelines/EBI-Icon-fonts/v1.3/fonts.css"
    />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta
      name="description"
      content="OLS is a repository for biomedical ontologies that aims to provide a single point of access to the latest ontology versions"
    />
    <link rel="apple-touch-icon" href="/ols4logo192.png" />
    <!--
      manifest.json provides metadata used when your web app is installed on a
      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
    -->
    <link rel="manifest" href="/ols4manifest.json" />
    <!--
      Notice the use of /ols4 in the tags above.
      It will be replaced with the URL of the `public` folder during the build.
      Only files inside the `public` folder can be referenced from the HTML.

      Unlike "/favicon.ico" or "favicon.ico", "/ols4favicon.ico" will
      work correctly both with client-side routing and a non-root public URL.
      Learn how to configure a non-root public URL by running `npm run build`.
    -->
    <title>Ontology Lookup Service (OLS)</title>

    	<!-- for graph view -->
        <link rel="stylesheet" href="/ols4legacy/OLS-graphview.css" />
        <link rel="stylesheet" href="/ols4legacy/vis.min.css" />
	<script src="/ols4legacy/jquery.min.js"></script>
	<script src="/ols4legacy/ols-graphview.js"></script>
	<script type="text/javascript">
		function initLegacyGraphView(endpointPrefix, termiri) {
			var tmpnetworkOptions={ webservice : {URL: endpointPrefix, OLSschema:true}}
			var term = termiri

			var app = require("ols-graphview");
			var instance = new app();

			instance.visstart("ontology_vis", term, tmpnetworkOptions, {})
		}
	</script>

	<!-- for 3d images -->
	<script type="module" src="/ols4model-viewer.min.js"></script>

  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
  </body>

	<script src="/ols4bundle.js" type="text/javascript"></script>
</html>

 contentType 9 text/html url 123 https://www.ebi.ac.uk:443/ols4/ontologies/uberon/entities/http%253A%252F%252Fpurl.obolibrary.org%252Fobo%252FUBERON_0006611 responseCode 3 200 