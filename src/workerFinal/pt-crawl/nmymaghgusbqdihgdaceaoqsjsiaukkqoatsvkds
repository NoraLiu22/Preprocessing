nmymaghgusbqdihgdaceaoqsjsiaukkqoatsvkds length 5 34440 page 34440 <head>
  <style>
    a { text-decoration: none; }
  </style>
<!-- Twitter cards -->
<meta name="twitter:site"    content="@SchmidhuberAI">
<meta name="twitter:creator" content="@SchmidhuberAI">
<meta name="twitter:title"   content="2021: 375th birthday of Leibniz, father of computer science">
<meta name="twitter:description" content='1st machine with memory (1673). Principles of binary computers (1679). Algebra of Thought (1686). Calculemus!'>
<meta name="twitter:card"  content="summary_large_image">
<meta name="twitter:image" content="https://people.idsia.ch/~juergen/leibniz576x288.png">
<!-- end of Twitter cards -->
</head>



<title>2021: 375th birthday of Leibniz, father of computer science</title>
<body bgcolor=#ffffff link=#2266aa vlink=#2266aa MARGINWIDTH=0 MARGINHEIGHT=0 LEFTMARGIN=0 TOPMARGIN=0>
<font face="arial">
<center>
<table width=754  cellspacing=0 cellpadding=0 border=0>
<!-- <table width=754  background=whitelineblackdots754x1a.gif cellspacing=0 cellpadding=0 border=0>-->.
<tr>
<td>

<A HREF="computer-history1508x932.png"><IMG src="leibniz754x288.png" alt="2021: 375th birthday of Leibniz, father of computer science. Juergen Schmidhuber." border=0></A>

<p>
<table width="754"><colgroup><col><col></colgroup><tr><td> 
<A HREF="http://www.idsia.ch/~juergen">J&uuml;rgen Schmidhuber</A> (2021)
<br>Pronounce: <font color=#2266aa>You_again Shmidhoobuh</font>
<br><A HREF="leibniz-vater-informatik-375.html">German</A> version: <A HREF="faz2021leibniz.pdf">FAZ, 17 May 2021</A>
</td> <td align=right> 
<A HREF="blog.html">AI Blog</A>
<br><A HREF="https://twitter.com/SchmidhuberAI">@SchmidhuberAI</A>
</td></tr></table>
<hr>

<center>
</center>
<p>

<h2>
2021: 375th birthday of Leibniz, founder of computer science 
</h2>

<font size=4>


<a name="abstract">
<hr>
<p>
<b>Abstract.</b> In 2021, we are celebrating the 375th birthday of <A HREF=leibniz.html>Gottfried Wilhelm Leibniz</A>
(1646-1714) <em>aka</em>
"the world's  first  computer  scientist."<sup><small><small><a href="#LA14">[LA14]</a></small></small></sup>
Not only was he the first to publish <em>infinitesimal calculus</em> (1684),<sup><small><small><a href="#L84">[L84]</a></small></small></sup> he also
designed the first machine that could perform all four <em>arithmetic operations</em> (1673),
and the first with an <em>internal memory</em>.<sup><small><small><a href="#BL16">[BL16]</a></small></small></sup> He 
described the principles of <em>binary computers</em> (1679)<sup><small><small><a href="#L79">[L79]</a><a href="#L03">[L03]</a><a href="#LA14">[LA14]</a><a href="#HO66">[HO66]</a><a href="#LEI21">[LEI21,a,b]</a></small></small></sup>
employed by virtually all modern machines.
His formal <em>Algebra of Thought</em> (1686)<sup><small><small><a href="#L86">[L86]</a><a href="#WI48">[WI48]</a></small></small></sup> was
deductively equivalent<sup><small><small><a href="#LE18">[LE18]</a></small></small></sup>  to the much later 
<em>Boolean Algebra</em>.<sup><small><small><a href="#BOO">[BOO]</a></small></small></sup>
His <em>Characteristica Universalis & Calculus Ratiocinator</em>
aimed at answering 
all possible questions through computation;<sup><small><small><a href="#WI48">[WI48]</a></small></small></sup> 
his <em>"Calculemus!"</em> is one of the defining quotes of the age of enlightenment.
<hr>

<p>

The title "father of computer science" does not seem too immodest. 
Leibniz made fundamental contributions to both the theory and the practice of computing.
He has been called the "last universal genius",<sup><small><small><a href="#PE10">[PE10]</a></small></small></sup>
 "the world's  first  computer  scientist,"<sup><small><small><a href="#LA14">[LA14]</a></small></small></sup>
 and
"the smartest man who ever lived."<sup><small><small><a href="#SMO13">[SMO13]</a></small></small></sup>

<p>
While the design of automata dates back at least to antiquity, 
e.g.,  the gear-based  <em>Antikythera</em> mechanism  (a kind of astronomical calculator) over 2000 years ago,
or the world's <em>first programmable machine</em> by Heron of Alexandria
in the 1st 
century,<sup><small><small><a href="#SHA7a">[SHA7a]</a><a href="#RAU1">[RAU1]</a></small></small></sup>
many aspects of "modern" computer science
can indeed be traced back to Leibniz.

<p>
In 1673, he designed the first machine (the step reckoner) that could perform all four arithmetic operations.
This went
beyond the first <em>gear-based data-processing calculator</em>
by <A HREF=schickard.html>Wilhelm Schickard</A> (1623) and the superior <em>Pascaline</em> by Blaise Pascal (1642). 
It was emphasized  that "being able to compute the four basic arithmetic 
operations is equivalent to be able to execute any given numerical computation."<sup><small><small><a href="#BL16">[BL16]</a></small></small></sup>
In fact, about a quarter-millennium later,
<a href="goedel-1931-founder-theoretical-computer-science-AI.html">Kurt G&ouml;del</a> used
basic arithmetics to encode <em>arbitrary</em> formal systems and 
computations (1931-34).<sup><small><small><a href="#GOD">[GOD]</a><a href="#GOD34">[GOD34]</a><a href="#GOD21">[GOD21,a,b]</a></small></small></sup>

<p>
The step reckoner also was the first machine with an internal memory: 
the <em>Leibniz wheel</em> stored the multiplicand of a multiplication, counting the number of subsequent additions.<sup><small><small><a href="#BL16">[BL16]</a></small></small></sup>
Of course, memory is essential for modern computing.



 

<p> From  1679-1703, inspired by the ancient binary <em>I Ching</em> from China,
Leibniz documented the <em>binary arithmetics</em> 
employed by virtually all modern computers.<sup><small><small><a href="#L03">[L03]</a><a href="#L79">[L79]</a></small></small></sup> 
It should be mentioned, however, that binary number encodings <em>per se</em> are much older than that,
dating back to ancient Egypt.
The <em>algorithmic</em> part on binary arithmetic operations is relatively new though. 
Compare also Juan Caramuel y Lobkowitz' publication on binary encodings
 (1670) and Thomas Harriott's unpublished papers.<sup><small><small><a href="#IN08">[IN08]</a><a href="#SH51">[SH51]</a></small></small></sup>

<p>
In 1679, Leibniz described the very principles of a <em>binary computer</em>.<sup><small><small><a href="#HO66">[HO66]</a><a href="#L79">[L79]</a></small></small></sup>
It 
represented "binary numbers using marbles governed by punch cards."<sup><small><small><a href="#LA14">[LA14]</a></small></small></sup> 
"His description describes precisely how electronic computers function. Gravity and movement of marbles are replaced by electrical circuits, but the principle functions in the same way."<sup><small><small><a href="#LA14">[LA14]</a></small></small></sup>


<p>
In 1686, Leibniz created
his  formal <em>Algebra of Thought</em><sup><small><small><a href="#L86">[L86]</a><a href="#WI48">[WI48]</a></small></small></sup>
which is
deductively equivalent<sup><small><small><a href="#LE18">[LE18]</a></small></small></sup>  to the much later 
<em>Boolean Algebra</em> of 1847.<sup><small><small><a href="#BOO">[BOO]</a></small></small></sup>
Here the truth values 0 and 1 are linked by elementary operations such as <em>and/or</em> to form possibly complex expressions. 
This laid the foundations for the first formal language (1879)
by Gottlob Frege<sup><small><small><a href="#FRE">[FRE]</a></small></small></sup> and thus for the theory of computation.
Bertrand Russell wrote that Leibniz 
advanced  the field of formal logic  "in  a  way  that  had  not  been  seen  since  Aristotle."<sup><small><small><a href="#RU45">[RU45]</a><a href="#LA14">[LA14]</a></small></small></sup>




<p> 
Remarkably, for much of his life, Leibniz pursued the extremely ambitious project to settle
<em>all</em> possible questions through computation. 
Inspired by the
13th century scholar Ramon Llull <a href="#LL7">[LL7]</a>, he produced  
highly influential ideas
on a <em>universal language</em> and a <em>general calculus for reasoning</em>
(<em>Characteristica Universalis & Calculus Ratiocinator</em>).<sup><small><small><a href="#LE18">[LE18]</a></small></small></sup> 
The AI pioneer Norbert Wiener said: 
"Indeed, the general idea of a computing machine is nothing but a mechanization of Leibniz's Calculus Ratiocinator."<sup><small><small><a href="#WI48">[WI48]</a></small></small></sup>



<p>
Leibniz' <em>"Calculemus!"</em> is one of the defining quotes of the age of enlightenment:<br>
"If controversies were to arise, there would be no more need of disputation between two philosophers than between two accountants. For it would suffice to take their pencils in their hands, to sit down with their slates and say to each other[...]: Let us calculate!"<sup><small><small><a href="#RU58">[RU58]</a></small></small></sup>

<p> As if his achievements in computer science were
not enough to cement Leibniz' legacy as one of the greatest scientists ever, 
he also was the first to publish <em>infinitesimal calculus</em> in 1684,<sup><small><small><a href="#L84">[L84]</a><a href="#SON18">[SON18]</a><a href="#MAD05">[MAD05]</a></small></small></sup>
extending the pioneering work 
of Archimedes (<a href="archimedes.html">perhaps the greatest scientist ever</a><sup><small><small><a href="#ARC06">[ARC06]</a></small></small></sup>)
who introduced <em>infinitesimals</em> over two millennia  ago, 
and already had special cases of calculus, e.g., for spheres and parabola segments&mdash;see also 
more recent calculus breakthroughs by Madhava of Sangamagrama and colleagues 
in the 14th century.<sup><small><small><a href="#MAD86">[MAD86]</a><a href="#MAD01">[MAD01]</a><a href="#MAD05">[MAD05]</a></small></small></sup>
As all our time on this earth is finite, here
I won't even mention Leibniz' numerous additional contributions
to mathematics & probability theory,  engineering,  linguistics, biology, medicine, geology, psychology,  
 politics, law, ethics, theology, history, philology, 
 and philosophy.<sup><small><small><a href="#RU58">[RU58]</a></small></small></sup>




<p> How did the <em>theory</em> of computation progress after Leibniz' death in 1716?
Over 2 centuries later,
<a href="goedel.html">Kurt G&ouml;del</a> 
extended Frege's above-mentioned Leibniz-inspired 
 formal language (1879)<sup><small><small><a href="#FRE">[FRE]</a></small></small></sup> and
finally introduced a <em>universal coding language</em> in 1931-34.<sup><small><small><a href="#GOD">[GOD]</a><a href="#GOD34">[GOD34]</a><a href="#GOD21">[GOD21,a,b]</a></small></small></sup>
He used his so-called <em>G&ouml;del Numbering</em> to represent both data (such as axioms and theorems) and programs<sup><small><small><a href="#VAR13">[VAR13]</a></small></small></sup> to show that there are fundamental limitations to what is decidable or
 computable, thus dealing a blow to Leibniz' project on universal problem solving.<sup><small><small><a href="#GOD">[GOD]</a><a href="#GOD34">[GOD34]</a></small></small></sup>
His groundbreaking 1931 paper<sup><small><small><a href="#GOD">[GOD]</a></small></small></sup> 
<a href="goedel-1931-founder-theoretical-computer-science-AI.html">
laid the foundations of modern theoretical computer science and the theory of artificial intelligence (AI)</a>. G&ouml;del sent shock waves through the academic community when he identified the limits of theorem proving, computing, AI, logics, and mathematics itself. This had enormous impact on science and philosophy of the 20th century (some  even misunderstood his result 
and thought he showed that humans are superior to AIs<sup><small><small><a href="#BIB3">[BIB3]</a></small></small></sup>).

 
<p> 
In 1935, Alonzo Church derived a corollary / extension of <a href="goedel-1931-founder-theoretical-computer-science-AI.html">G&ouml;del's</a> result by showing that Hilbert & Ackermann's famous <em>Entscheidungsproblem</em> (decision problem) does not have a general solution.<sup><small><small><a href="#CHU">[CHU]</a></small></small></sup>  In 1936, <a href="turing.html">Alan Turing</a> 
introduced yet another universal model, the 
<em>Turing Machine</em>,<sup><small><small><a href="#TUR">[TUR]</a></small></small></sup> and 
<A HREF=turing-oversold.html>rederived</A>
 the above-mentioned result.
In the same year of 1936,  Emil Post  published yet another independent universal model of computing.<sup><small><small><a href="#POS">[POS]</a></small></small></sup>
Today we know many such models. 
However,
the formal models of G&ouml;del (1931-34), Church (1935), Turing (1936), and Post (1936) were 
<em>theoretical pen & paper constructs</em> that cannot directly serve as a foundation for 
<em>practical</em> computers. So then how 
did practical <em>hardware</em> progress after Leibniz? 

<p>
The first <em>commercial</em> program-controlled 
machines (punch card-based looms) were built in France around 
1800 by Joseph-Marie Jacquard and others&mdash;perhaps the first "modern"
 programmers who wrote the world's first <em>industrial software</em>.  
They inspired Ada Lovelace and her mentor
Charles Babbage (UK, circa 1840). He planned but was unable to build a
programmable, general purpose computer (only his <em>non-universal special purpose calculator</em> 
led to a working 20th century replica). 
In 1941, however, 
 <a href="zuse.html">Konrad Zuse</a> completed
<A HREF=zuse-1941-erster-computer.html>Z3, the world's first practical, working, programmable, general-purpose  computer</A>,
based on his 1936 patent application.<sup><small><small><a href="#ZU36">[ZU36-38]</a><a href="#RO98">[RO98]</a><a href="#ZUS21">[ZUS21,a,b]</a></small></small></sup>
Ignoring the inevitable storage limitations of any physical computer, 
the <em>physical hardware</em> of Z3 was indeed
 <em>universal</em> in the "modern" sense of
G&ouml;del, Church, 
<a href="turing-oversold.html">Alan Turing</a>, and Post&mdash;simple arithmetic tricks 
can compensate for Z3's lack of an explicit 
conditional jump instruction.<sup><small><small><a href="#RO98">[RO98]</a></small></small></sup>
Unlike Babbage, Zuse  used Leibniz' <em>binary computations</em><sup><small><small><a href="#L79">[L79]</a><a href="#L03">[L03]</a><a href="#HO66">[HO66]</a><a href="#LA14">[LA14]</a></small></small></sup>
instead of traditional 
<em>decimal arithmetics</em>.
This greatly simplified the hardware.
Since the late 20th century, binary
computers based on
 Julius Edgar Lilienfeld's <em>field effect transistor</em> principle (1925)<sup><small><small><a href="#LIL1">[LIL1-2]</a></small></small></sup>
have become ubiquitous. Billions of people depend on them
to do everything from making their morning coffee to monitoring their vital signs while in hospital.






<p>
In 2021, we are not only celebrating the 375th anniversary of Leibniz, but also the
<a href="goedel-1931-founder-theoretical-computer-science-AI.html">90th anniversary of G&ouml;del's famous 1931 paper</a>
and the 
<a href="zuse-1941-first-general-computer.html">80th anniversary of 
the world's first functional program-controlled computer</a> by Zuse (1941).
10 years to go until the G&ouml;del centennial in 2031, 
20 years until the Zuse centennial in 2041, and
1/4 century until the 4th Leibniz centennial in 2046!
Enough time to plan appropriate celebrations.





<h2>
<hr>
Acknowledgments 
<hr>
</h2>


<p><a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/"><img alt="Creative Commons License" style="border-width:0" align=right src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png" /></a>
Thanks to Moshe Vardi, Herbert Bruderer, Jack Copeland, Wolfgang Bibel, Teun Koetsier, Scott Aaronson, Dylan Ashley, Sebastian Oberhoff, Kai Hormann,  and several other experts for useful comments on the contents of the four companion articles.<sup><small><small><a href="#LEI21">[LEI21,a,b]</a><a href="#GOD21">[GOD21,a,b]</a><a href="#ZUS21">[ZUS21,a,b]</a><a href="#TUR21">[TUR21]</a></small></small></sup> Since science is about self-correction, let me know under <em>juergen@idsia.ch</em> if you can spot any remaining error. The contents of this article may be used for educational and non-commercial purposes, including articles for Wikipedia and similar sites. 
This work is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License</a>. 



<h2><a name="References"></a>
<hr>
References 
<hr>
</h2>



<P>
<a name="GOD"></a>
[GOD]
K. G&ouml;del. &Uuml;ber formal unentscheidbare S&auml;tze der Principia Mathematica und verwandter Systeme I. Monatshefte f&uuml;r Mathematik und Physik, 38:173-198, 1931. 

<P>
<a name="GOD34"></a>
[GOD34]
K. G&ouml;del (1934).
On undecidable propositions of formal mathematical
systems. Notes by S. C. Kleene and J. B. Rosser on lectures
at the Institute for Advanced Study, Princeton, New Jersey, 1934, 30
pp. <em>(Reprinted in M. Davis, (ed.), The Undecidable. Basic Papers on UndecidablePropositions, Unsolvable Problems, and Computable Functions,Raven Press, Hewlett, New York, 1965.)</em>

<P>
<a name="GOD56"></a>
[GOD56]
R. J. Lipton and K. W. Regan.
G&ouml;del's lost letter and P=NP.
<A HREF=https://rjlipton.wordpress.com/the-gdel-letter/>Link</A>.

<P>
<a name="GOD86"></a>
[GOD86]
K. G&ouml;del.
Collected works Volume I: Publications 1929-36, 
S. Feferman et. al., editors, Oxford Univ. Press, Oxford, 1986.

<P>
<a name="GOD10"></a>
[GOD10]
V. C. Nadkarni. 
G&ouml;del, Einstein and proof for God. The Economic Times, 2010.

<p><a name="GOD21"></a>
[GOD21] J. Schmidhuber (<A HREF="blog.html">AI Blog</A>, 2021). 90th anniversary celebrations: <a href="goedel-1931-founder-theoretical-computer-science-AI.html">1931: Kurt G&ouml;del, founder of theoretical computer science, shows limits of math, logic, computing, and artificial intelligence</a>. <em>This was number 1 on <A HREF="https://news.ycombinator.com/item?id=27536974">Hacker News</A>.</em>

<p><a name="GOD21a"></a>
[GOD21a]
J. Schmidhuber (2021). Als Kurt G&ouml;del die Grenzen des Berechenbaren entdeckte. 
(When Kurt G&ouml;del discovered the limits of computability.) 
<A HREF="https://www.faz.net/aktuell/wirtschaft/digitec/als-kurt-goedel-die-grenzen-des-berechenbaren-entdeckte-17388864.html">Frankfurter Allgemeine Zeitung, 16/6/2021</A>.

<p><a name="GOD21b"></a>
[GOD21b]
J. Schmidhuber (<A HREF="blog.html">AI Blog</A>, 2021). 80. Jahrestag:  <a href="goedel-1931-begruender-theoretische-informatik-KI.html">1931: Kurt G&ouml;del, Vater der theoretischen Informatik, entdeckt die Grenzen des Berechenbaren und der k&uuml;nstlichen Intelligenz</a>.


<P>
<a name="URQ10"></a>
[URQ10]
A. Urquhart. Von Neumann, G&ouml;del and complexity theory. Bulletin of Symbolic Logic 16.4 (2010): 516-530.
<A HREF=https://www.jstor.org/stable/40961368>Link</A>.

<P>
<a name="BIB3"></a>
[BIB3]
W. Bibel (2003).
Mosaiksteine einer Wissenschaft vom Geiste. Invited talk at 
the conference on AI and G&ouml;del, Arnoldsheim, 4-6 April 2003. 
Manuscript, 2003.

<P>
<a name="CHU"></a>
[CHU]
A. Church (1935). An unsolvable problem of elementary number theory. Bulletin of the American Mathematical Society, 41: 332-333. Abstract of a talk given on 19 April 1935, to the American Mathematical Society.
Also in American Journal of Mathematics, 58(2), 345-363 (1 Apr 1936).
<em>[First explicit proof that the Entscheidungsproblem (decision problem) does not have a general solution.]</em>


<P>
<a name="TUR"></a>
[TUR]
 A. M. Turing. On computable numbers, with an application to the Entscheidungsproblem. Proceedings of the London Mathematical Society, Series 2, 41:230-267. Received 28 May 1936. Errata appeared in Series 2, 43, pp 544-546 (1937). <em>[2nd explicit proof that the Entscheidungsproblem (decision problem) does not have a general solution.]</em>

<p><a name="TUR21"></a>
[TUR21] J. Schmidhuber (<A HREF="blog.html">AI Blog</A>, Sep 2021). <A HREF=turing-oversold.html>Turing Oversold</A>. It's not Turing's fault, though.



<P>
<a name="POS"></a>
[POS]
E. L. Post (1936). Finite Combinatory Processes - Formulation 1. Journal of Symbolic Logic. 1: 103-105.
<A HREF=https://www.cambridge.org/core/journals/journal-of-symbolic-logic/article/finite-combinatory-processesformulation1/C336A17A0525DFF17F110DC477AD5C3D>Link.</A>

<P>
<a name="WA74"></a>
[WA74]
H. Wang (1974). From Mathematics to Philosophy, New York: Humanities Press.

<P>
<a name="WA96"></a>
[WA96]
H. Wang (1996). A Logical Journey: From G&ouml;del to Philosophy, Cambridge, MA: MIT Press.

<P>
<a name="H79"></a>
[H79]
Douglas R. Hofstadter (1979). G&ouml;del, Escher, Bach: An Eternal Golden Braid. Basic Books, ISBN 0-465-02656-7, 1979.

<P>
<a name="FRE"></a>
[FRE] G. Frege (1879).
Begriffsschrift: eine der arithmetischen nachgebildete Formelsprache des reinen Denkens. Halle an der Saale: Verlag Louis Nebert.  
<em>[The first formal language / formal proofs&mdash;basis of modern logic and programming languages.]</em>

<P>
<a name="SKO23"></a>
[SKO23] T. Skolem (1923). Begr&uuml;ndung der elementaren Arithmetik
durch die rekurrierende Denkweise ohne Anwendung scheinbarer
Ver&auml;nderlichen mit unendlichem Ausdehnungsbereich. <em>Skrifter utgit av
Videnskapsselskapet i Kristiania, I. Mathematisk-Naturvidenskabelig
Klasse 6 (1923), 38 pp.</em>

<P>
<a name="CAN"></a>
[CAN]
G. Cantor (1891). Ueber eine elementare Frage der Mannigfaltigkeitslehre. Jahresbericht der Deutschen Mathematiker-Vereinigung, 1:75-78. <em>[English translation: W. B. Ewald (ed.). From Immanuel Kant to David Hilbert: A Source Book in the Foundations of Mathematics, Volume 2, pp. 920-922. Oxford University Press, 1996.]</em>


<p><a name="L03"></a>
[L03]
G. Leibniz (1703). In: Explication de l'Arithmetique Binaire / Die Mathematischen Schriften, ed. C. Gerhardt, Berlin 1879, vol.7, p.223. <A HREF="http://www.leibniz-translations.com/binary.htm">English link</a>.
<em>[Leibniz documented  the binary arithmetics which allow for greatly simplifiying computing hardware and are employed by virtually all modern computers. Binary number encodings per se, however, seem to date back over 4000 years.]</em>

<p><a name="L79"></a>
[L79]
G. Leibniz.
De Progressione dyadica Pars I. 15 March  1679.
<em>[Principles of binary computers governed by punch cards.]</em>

<p><a name="L84"></a>
[L84]
G. Leibniz (1684).
Nova Methodus pro Maximis et Minimis.
<em>[First publication on infinitesimal calculus.]</em>

<p><a name="L86"></a>
[L86]
G. Leibniz (1686). Generales Inquisitiones de analysi notionum et veritatum. 
Also in 
Leibniz: Die philosophischen Schriften VII, 1890, pp. 236-247; translated as "A Study in the Calculus of Real Addition" (1690) by G. H. R. Parkinson, Leibniz: Logical Papers&mdash;A Selection, Oxford 1966, pp. 131-144.

<P>
<a name="BOO"></a>
[BOO]
George Boole (1847). The Mathematical Analysis of Logic, Being an Essay towards a Calculus of Deductive Reasoning. 
London, England: Macmillan, Barclay, & Macmillan, 1847.

<P>
<a name="LL7"></a>
[LL7]
A. Bonner (2007). The art and logic of Ramon Llull. Brill Academic Pub, p. 290, 2007.

<P>
<a name="RU58"></a>
[RU58]
B. Russell (1958). The Philosophy of Leibniz. London: George Allen and Unwin, 1958. 

<P>
<a name="RU45"></a>
[RU45]
B. Russell (1945). A History of Western Philosophy. New York: Simon & Schuster. 

<P>
<a name="LE18"></a>
[LE18]
W. Lenzen.
Leibniz and the Calculus Ratiocinator. Technology and Mathematics, pp 47-78, Springer, 2018.

<P>
<a name="LA14"></a>
[LA14]
D. R. Lande (2014).
Development of the Binary Number System and the Foundations of Computer Science. The Mathematics Enthusiast, vol. 11(3):6 12, 2014.
<A HREF=https://scholarworks.umt.edu/cgi/viewcontent.cgi?article=1315&context=tme>Link</A>.

<P>
<a name="BL16"></a>
[BL16]
L. Bloch (2016). Informatics in the light of some Leibniz's works.  
Communication to XB2 Berlin Xenobiology Conference. 


<P>
<a name="HO66"></a>
[HO66]
E.  Hochstetter et al. (1966):  Herrn  von  Leibniz' Rechnung mit Null und Eins. Berlin: Siemens AG.

<P>
<a name="IN08"></a>
[IN08]
R. Ineichen (2008). Leibniz, Caramuel, Harriot und das Dualsystem. Mitteilungen der deutschen Mathematiker-Vereinigung. 16(1):12-15.

<P>
<a name="SH51"></a>
[SH51]
J.  W. Shirley  (1951).  Binary  Numeration  before Leibniz. American Journal of Physics 19 (452-454).

<P>
<a name="PE10"></a>
[PE10]
F. Perkins (2010). Leibniz: A Guide for the Perplexed. London, GBR: Continuum International Publishing. 


<P>
<a name="WI48"></a>
[WI48]
N. Wiener (1948).
Time, communication, and the nervous system. Teleological mechanisms. Annals of the N.Y. Acad. Sci. 50 (4): 197-219.
<em>[Quote: "... the general idea of a computing machine is nothing but a mechanization of Leibniz's calculus ratiocinator."]</em>

<P>
<a name="SMO13"></a>
[SMO13]
L. Smolin (2013). My hero: Gottfried Wilhelm von Leibniz. The Guardian, 2013. 
<A HREF=https://www.theguardian.com/books/2013/may/10/my-hero-leibniz-lee-smolin>Link</A>.
<em>[Quote: "And this is just the one part of Leibniz's enormous legacy: the philosopher Stanley Rosen called him "the smartest person who ever lived"."]</em>


<P>
<a name="MAD86"></a>
[MAD86]
C. T. Rajagopal, M. S. Rangachari (1986). On medieval Keralese mathematics. Archive for History of Exact Sciences. 35 (2): 91-99.

<P>
<a name="MAD01"></a>
[MAD01]
D. F. Almeida, J. K. John, A. Zadorozhnyy (2001). Keralese mathematics: 
Its Possible Transmission to Europe and the Consequential Educational Implications. Journal of Natural Geometry 20, 77-104, 2001.

<P>
<a name="SON18"></a>
[SON18]
T. Sonar. The History of the Priority Dispute between Newton and Leibniz. Birkhaeuser, 2018.


<P>
<a name="MAD05"></a>
[MAD05]
Neither Newton nor Leibniz&mdash;The Pre-History of Calculus and Celestial Mechanics in Medieval Kerala.
S. Rajeev,
Univ. of Rochester, 2005.




<p><a name="LEI21"></a>
[LEI21] J. Schmidhuber (<A HREF="blog.html">AI Blog</A>, 2021). <A HREF=leibniz-father-computer-science-375.html>375th birthday of Leibniz, founder of computer science</A>.

<p><a name="LEI21a"></a>
[LEI21a]
J. Schmidhuber (2021). Der erste Informatiker. Wie Gottfried Wilhelm Leibniz den Computer erdachte. 
(The first computer scientist. How Gottfried Wilhelm Leibniz conceived the computer.) 
<A HREF="faz2021leibniz.pdf">Frankfurter Allgemeine Zeitung (FAZ), 17/5/2021</A>. FAZ online:
<A HREF="https://www.faz.net/aktuell/wirtschaft/digitec/gottfried-wilhelm-leibniz-war-der-erste-informatiker-17344093.html">19/5/2021</A>.

<p><a name="LEI21b"></a>
[LEI21b] J. Schmidhuber (<A HREF="blog.html">AI Blog</A>, 2021). <A HREF=leibniz-vater-informatik-375.html>375. Geburtstag des Herrn Leibniz, dem Vater der Informatik.</A>


<p><a name="ARC06"></a>
[ARC06]
J. Schmidhuber (2006).
<a href="archimedes.html">Archimedes&mdash;Greatest Scientist Ever?</a>

<p><a name="ALL2"></a>
[ALL2]
J. Schmidhuber (2000).
Algorithmic theories of everything.
ArXiv:
<A HREF=http://arXiv.org/abs/quant-ph/0011122>
quant-ph/ 0011122.
<A HREF="computeruniverse.html">More</a>.
</A> See also:
Hierarchies of generalized Kolmogorov complexities and nonenumerable universal measures computable in the limit. 
International Journal of Foundations of Computer Science 13(4):587-612, 2002.
<A HREF=https://sferics.idsia.ch/pub/juergen/ijfcspreprint.pdf>PDF</A>.
<A HREF="kolmogorov.html">More</a>.
See also: 
The Speed Prior: A New Simplicity Measure Yielding Near-Optimal Computable Predictions.
Proc. COLT 2002.
<A HREF=https://sferics.idsia.ch/pub/juergen/coltspeed.pdf>PDF</A>. <A HREF="speedprior.html">More</a>.

<p><p> 
<A HREF="goedelmachine.html"><IMG src="robohorsegm466.jpg" alt="Goedel Machine" align=right border=0></A>
<a name="GM6"></a>
[GM6]
J. Schmidhuber (2006).
G&ouml;del machines: 
Fully Self-Referential Optimal Universal Self-Improvers. 
In B. Goertzel and C. Pennachin, eds.: <em> Artificial
General Intelligence,</em> p. 199-226, 2006. 
<A HREF=https://sferics.idsia.ch/pub/juergen/gmAGI.pdf>PDF</A>.
Preprint 
<A HREF=http://arXiv.org/abs/cs.LO/0309048>arXiv:cs/0309048</A> (2003).
See also:
Ultimate Cognition <em> &agrave la</em> G&ouml;del.
<em>Cognitive Computation</em> 1(2):177-193, 2009.   <A HREF=ultimatecognition.pdf>PDF</A>.
<A HREF=goedelmachine.html>More</A>.




<p>
<a name="DL1"></a>
[DL1] J. Schmidhuber, 2015. 
Deep Learning in neural networks: An overview. Neural Networks, 61, 85-117. 
<A HREF=deep-learning-overview.html>More</A>.

<p><a name="DL2"></a>
[DL2] J. Schmidhuber, 2015. 
<A HREF=http://www.scholarpedia.org/article/Deep_Learning>Deep Learning</A>.
Scholarpedia, 10(11):32832.

<p><a name="MIR"></a>
[MIR] J. Schmidhuber (2019). <A HREF=deep-learning-miraculous-year-1990-1991.html>Deep Learning: Our Miraculous Year 1990-1991.</A> Preprint 
<A HREF=https://arxiv.org/abs/2005.05744>arXiv:2005.05744</A>, 2020.  

<p><a name="DEC"></a>
[DEC] J. Schmidhuber (2020). <A HREF=2010s-our-decade-of-deep-learning.html>The 2010s: Our Decade of Deep Learning / Outlook on the 2020s</A>. 




<P>
<a name="VAR13"></a>
[VAR13]
M. Y. Vardi (2013). Who begat computing?  Communications of the ACM, Vol. 56(1):5, Jan 2013.
<A HREF=https://cacm.acm.org/magazines/2013/1/158780-who-begat-computing/fulltext>Link</A>.



<P>
<a name="ZU36"></a>
[ZU36]
K. Zuse (1936).
Verfahren zur selbstt&auml;tigen Durchf&uuml;hrung von Rechnungen mit Hilfe von Rechenmaschinen. Patent application Z 23 139 / GMD Nr. 005/021, 1936. 
<em>[First patent application describing a general, practical, program-controlled computer.]</em>

<P>
<a name="ZU37"></a>
[ZU37]
K. Zuse (1937). Einf&uuml;hrung in die allgemeine Dyadik. <em>[Mentions the storage of program instructions  in the computer's memory.]</em>


<P>
<a name="ZU38"></a>
[ZU38]
K. Zuse (1938). Diary entry of 4 June 1938. 
<em>[Description of computer architectures that put both program instructions and data into storage&mdash;compare the later "von Neumann" architecture <a href="#NEU45">[NEU45]</a>.]</em>

<P>
<a name="ZU48"></a>
[ZU48]
K. Zuse (1948). &Uuml;ber den Plankalk&uuml;l als Mittel zur Formulierung schematisch kombinativer Aufgaben.Archiv der Mathematik 1(6), 441-449 (1948).
<A HREF=http://zuse.zib.de/file/1rUAfKDkirW8o3gT/d6/66/be/3a-501c-4637-9b2f-79d530d1cba1/0/original/b89b52d10f5472535d94c371f09b914e.pdf>PDF.</A>
<em>[Apparently the first practical design of an automatic theorem prover (based on Zuse's high-level programming language Plankalk&uuml;l).]</em>





<P>
<a name="NS56"></a>
[NS56]
A. Newell and H. Simon. 
The logic theory machine&mdash;A complex information processing system. 
IRE Transactions on Information Theory 2.3 (1956):61-79.

<P>
<a name="RO98"></a>
[RO98]
R. Rojas (1998). How to make Zuse's Z3 a universal computer. IEEE Annals of Computing, vol. 19:3, 1998.


<P>
<a name="BAU"></a>
[BAU]
F. L. Bauer, H. Woessner  (1972). The "Plankalk&uuml;l" of Konrad Zuse: A Forerunner of Today's Programming Languages. 

<P>
<a name="KNU"></a>
[KNU]
D. E. Knuth, L. T. Pardo (1976). The Early Development of Programming Languages. Stanford University, Computer Science Department.  
<A HREF=http://bitsavers.org/pdf/stanford/cs_techReports/STAN-CS-76-562_EarlyDevelPgmgLang_Aug76.pdf>PDF.</A>



<P>
<a name="SHA37"></a>
[SHA37]
C. E. Shannon (1938). A Symbolic Analysis of Relay and Switching Circuits. Trans. AIEE. 57 (12): 713-723. Based on his thesis, MIT, 1937.   

<P>
<a name="AI51"></a>
[AI51]
Les Machines a Calculer et la Pensee Humaine: Paris, 8.-13. Januar 1951, Colloques internationaux du Centre National de la Recherche Scientifique; no. 37, Paris 1953. 
[<em>H. Bruderer rightly calls that the first conference on AI.</em>]


<P>
<a name="BRU3"></a>
[BRU3]
H. Bruderer. Milestones in Analog and Digital Computing. 2 volumes, 3rd edition. Springer Nature Switzerland AG, 2020.


<P>
<a name="BAN"></a>
[BAN]
Banu Musa brothers (9th century). The book of ingenious devices (Kitab al-hiyal). Translated by D. R. Hill (1979),  Springer, p. 44, ISBN 90-277-0833-9.
<em>[Perhaps the Banu Musa music automaton was the world's first machine with a stored program.]</em>

<P>
<a name="KOE1"></a>
[KOE1]
[21]  T. Koetsier (2001). On the prehistory of programmable machines: musical automata, looms, calculators. Mechanism and Machine Theory, Elsevier, 36 (5): 589-603, 2001.

<P>
<a name="RAU1"></a>
[RAU1]
M. Rausch. Heron von Alexandria. Die Automatentheater und die Erfindung der ersten antiken Programmierung. Diplomica Verlag GmbH, Hamburg 2012.
<em>[Perhaps the world's first programmable machine was an automatic theatre made in the 1st century by Heron of Alexandria, who apparently also had the first known working steam engine.]</em>



<P>
<a name="SHA7a"></a>
[SHA7a]
N. Sharkey (2007). A programmable robot from AD 60. New Scientist, Sept 2017.


<P>
<a name="LIL1"></a>
[LIL1]
US Patent 1745175 by Austrian physicist Julius Edgar Lilienfeld for work done in Leipzig: "Method and apparatus for controlling electric current." First filed in Canada on 22.10.1925. <em>[The patent describes a field-effect transistor. Today, almost all transistors are field-effect transistors.]</em>

<P>
<a name="LIL2"></a>
[LIL2]
 US Patent 1900018 by Austrian physicist Julius Edgar Lilienfeld: "Device for controlling electric current." Filed on 28.03.1928. <em>[The patent describes a thin film field-effect transistor.]</em>

<P>
<a name="ZUS21"></a>
[ZUS21]
J. Schmidhuber (<A HREF="blog.html">AI Blog</A>, 2021). 80th anniversary celebrations: <A HREF=zuse-1941-first-general-computer.html>1941: Konrad Zuse completes the first working general computer, based on his 1936 patent application</A>.  

<P>
<a name="ZUS21a"></a>
[ZUS21a]
J. Schmidhuber (<A HREF="blog.html">AI Blog</A>, 2021). 80. Jahrestag: <A HREF=zuse-1941-erster-computer.html>1941: Konrad Zuse baut ersten funktionalen Allzweckrechner, basierend auf der Patentanmeldung von 1936</A>.  

<P>
<a name="ZUS21b"></a>
[ZUS21b]
J. Schmidhuber (2021).
Der Mann, der den Computererfunden hat. (The man who invented the computer.)
<A HREF="https://www.weltwoche.ch/ausgaben/2021-33/diese-woche/der-mann-der-den-computer-erfunden-hat-die-weltwoche-ausgabe-33-2021.html">Weltwoche, Nr. 33.21</A>, 19 August 2021. 
<A HREF="WeltwocheZuse.pdf">PDF</A>.






<br><font color=#ffffff>.</font>

<br><br>
<A HREF="computer-history1508x932.png"><IMG src="computer-history754x466.png" alt="Highlights of over 2000 years of computing history. Juergen Schmidhuber." border=0></A>


</td>
</tr>
</table>
</body>
 contentType 9 text/html url 77 https://people.idsia.ch:443/~juergen/leibniz-father-computer-science-375.html responseCode 3 200 