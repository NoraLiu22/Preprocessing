oouocsmakiekmoqkeapebivasgpkkecgdoqscssa length 5 60032 page 60032 <!DOCTYPE html>
<html>
  <head>

    <title>Scholia</title>
<meta charset="UTF-8">
<meta name="robots" content="index, nofollow">
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<meta name="og:url" content="https://scholia.toolforge.org/topic/Q79932" />
<meta name="og:site_name" content="Scholia" />
<meta name="og:image" content="/static/images/scholia_social_media.png" />

<meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="@WDScholia" />

    <!-- Bootstrap -->
    <link href="/static/css/bootstrap.min.css" rel="stylesheet">

<link rel="canonical" href="https://scholia.toolforge.org/topic/Q79932">

<link rel="stylesheet" type="text/css" href="/static/css/bootstrap.min.css">
<link rel="stylesheet" type="text/css" href="/static/jquery.dataTables.min.css">
<link rel="stylesheet" type="text/css" href="/static/css/scholia.css">
<link rel='stylesheet' type='text/css' href="/static/css/nightmode.css">
<!-- Generated with RealFaviconGenerator -->
<link rel="apple-touch-icon" sizes="180x180" href="/static/favicon/apple-touch-icon.png">
<link rel="icon" type="image/png" sizes="32x32" href="/static/favicon/favicon-32x32.png">
<link rel="icon" type="image/png" sizes="16x16" href="/static/favicon/favicon-16x16.png">
<link rel="manifest" href="/static/favicon/site.webmanifest">
<link rel="mask-icon" href="/static/favicon/safari-pinned-tab.svg" color="#09af8a">
<link rel="shortcut icon" href="/static/favicon/favicon.ico">
<meta name="apple-mobile-web-app-title" content="Scholia">
<meta name="application-name" content="Scholia">
<meta name="msapplication-TileColor" content="#09af8a">
<meta name="theme-color" content="#09af8a">


  </head>
  <body>
    
<nav class="navbar navbar-expand-lg" style="max-width: 1200px;">
  <a class="navbar-brand" href="/"><img
      src="/static/images/scholia_wordmark.svg" width="112px" height="24px"
      alt="Scholia"></a>
  <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent"
    aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>

  <div class="collapse navbar-collapse" id="navbarSupportedContent">
    <ul class="navbar-nav mr-auto">
	<li class="nav-item"><a class="nav-link" href="/author/">Author</a></li>
	<li class="nav-item dropdown">
    <a class="nav-link dropdown-toggle" href="#" id="workDropdown" role="button" data-toggle="dropdown"
      aria-haspopup="true" aria-expanded="false">
      Work
    </a>
    <div class="dropdown-menu" aria-labelledby="workDropdown">
      <a class="dropdown-item" href="/work/">Work</a>
      <a class="dropdown-item" href="/venue/">Venue</a>
      <a class="dropdown-item" href="/series/">Series</a>
      <a class="dropdown-item" href="/catalogue/">Catalogue</a>
      <a class="dropdown-item" href="/publisher/">Publisher</a>
      <a class="dropdown-item" href="/printer/">Printer</a>
    </div>
	</li>
	<li class="nav-item dropdown">
    <a class="nav-link dropdown-toggle" href="#" id="organisationDropdown" role="button" data-toggle="dropdown"
      aria-haspopup="true" aria-expanded="false">
      Organization
    </a>
    <div class="dropdown-menu" aria-labelledby="organisationDropdown">
      <a class="dropdown-item" href="/organization/">Organization</a>
      <a class="dropdown-item" href="/publisher/">Publisher</a>
      <a class="dropdown-item" href="/printer/">Printer</a>
      <a class="dropdown-item" href="/sponsor/">Sponsor</a>
    </div>
	</li>
	<li class="nav-item dropdown">
    <a class="nav-link dropdown-toggle" href="#" id="locationDropdown" role="button" data-toggle="dropdown"
      aria-haspopup="true" aria-expanded="false">
      Location
    </a>
    <div class="dropdown-menu" aria-labelledby="locationDropdown">
      <a class="dropdown-item" href="/location/">Location</a>
      <a class="dropdown-item" href="/country/">Country</a>
    </div>
	</li>
	<li class="nav-item dropdown">
    <a class="nav-link dropdown-toggle" href="#" id="eventDropdown" role="button" data-toggle="dropdown"
      aria-haspopup="true" aria-expanded="false">
      Event
    </a>
    <div class="dropdown-menu" aria-labelledby="eventDropdown">
      <a class="dropdown-item" href="/event/">Event</a>
      <a class="dropdown-item" href="/event-series/">Event series</a>
    </div>
	</li>
	<li class="nav-item dropdown">
    <a class="nav-link dropdown-toggle" href="#" id="projectDropdown" role="button" data-toggle="dropdown"
      aria-haspopup="true" aria-expanded="false">
      Project
    </a>
    <div class="dropdown-menu" aria-labelledby="projectDropdown">
      <a class="dropdown-item" href="/clinical-trial/">Clinical trial</a>
      <a class="dropdown-item" href="/project/">Project</a>
      <a class="dropdown-item" href="/wikiproject/">WikiProject</a>
    </div>

	</li>
	<li class="nav-item"><a class="nav-link" href="/award/">Award</a></li>
  <li class="nav-item dropdown">
    <a class="nav-link dropdown-toggle" href="#" id="topicDropdown" role="button" data-toggle="dropdown"
      aria-haspopup="true" aria-expanded="false">
      Topic
    </a>
    <div class="dropdown-menu" aria-labelledby="projectDropdown">
      <a class="dropdown-item" href="/topic/">General</a>
      <a class="dropdown-item" href="/disease/">Disease</a>
      <a class="dropdown-item" href="/taxon/">Taxon</a>
      <a class="dropdown-item" href="/gene/">Gene</a>
      <a class="dropdown-item" href="/protein/">Protein</a>
      <a class="dropdown-item" href="/pathway/">Pathway</a>
      <a class="dropdown-item" href="/chemical/">Chemical</a>
      <a class="dropdown-item" href="/chemical-element/">Chemical element</a>
      <a class="dropdown-item" href="/chemical-class/">Chemical class</a>
      <a class="dropdown-item" href="/lexeme/">Lexeme</a>
      <a class="dropdown-item" href="/ontology/">Ontology</a>
      <a class="dropdown-item" href="/software/">Software</a>
      <a class="dropdown-item" href="/use/">Use</a>
    </div>
  </li>
	<li class="nav-item dropdown">
    <a class="nav-link dropdown-toggle" href="#" id="toolsDropdown" role="button" data-toggle="dropdown"
      aria-haspopup="true" aria-expanded="false">
      Tools
    </a>
    <div class="dropdown-menu" aria-labelledby="toolsDropdown">
      <a class="dropdown-item" href="/id-to-quickstatements">Identifier to Quickstatements</a>
      <a class="dropdown-item" href="/q-to-bibliography-templates">Q to Bibliography templates</a>
      <a class="dropdown-item" href="/text-to-topics">Text to topics</a>
    </div>
	</li>
	<li class="nav-item dropdown">
    <a class="nav-link dropdown-toggle" href="#" id="helpDropdown" role="button" data-toggle="dropdown"
      aria-haspopup="true" aria-expanded="false">
      Help
    </a>
    <div class="dropdown-menu" aria-labelledby="helpDropdown">
      <a class="dropdown-item" href="/about">About</a>
      <a class="dropdown-item" href="/statistics">Statistics</a>
      <a class="dropdown-item" href="/faq">FAQ</a>
    </div>
	</li>
    
    </ul>
    
    <div class='nav nav-search'>
        <input class="form-control" type="text" id="searchterm" placeholder="Search..."/>
    </div>
    
  </div>
</nav>

    
<div class="content">
<div class="container d-flex justify-content-between">
    <div class="dropdown" id="aspect-chooser">
    </div>
    <div>
      
      <a id='curation-link' role="button" class="btn btn-outline-secondary d-none">Improve data</a>
      
    </div>
</div>
<div class="container">
    



<h1 id=h1>Topic</h1>

<div id="intro"></div>

<div id="wembedder"></div>

<div>
    <a href="https://reasonator.toolforge.org/?q=Q79932">
        <img alt="ORCID logo" src="/static/images/reasonator_logo.png" width="16" height="16" hspace="4">Reasonator</a>
    <a href="https://sqid.toolforge.org/#/view?id=Q79932">
        <img alt="ORCID logo" src="/static/images/sqid_logo.png" width="40" height="16" hspace="4">SQID</a>
</div>

<h2 id="context">The topic in context</h2>

<div class="embed-responsive embed-responsive-16by9">
    <iframe class="embed-responsive-item" id="context-iframe"></iframe>
</div>

<h2 id="recently-published-works">Recently published works on the topic <a href="/topic/Q79932/latest-works/rss"><img height="24" width="48" src="/static/images/rss-40674_320.png" alt="RSS icon" /></a></h2>

<table class="table table-hover" id="recently-published-works-table"></table>


<h2 id="publications-per-year">Publications per year</h2>

<div class="embed-responsive embed-responsive-16by9">
    <iframe class="embed-responsive-item" id="publications-per-year-iframe"></iframe>
</div>


<h2 id="earliest-published-works">Earliest published works on the topic</h2>

<table class="table table-hover" id="earliest-published-works-table"></table>


<h2 id="Authors">Authors</h2>


<h3 id="authors">Authors publishing about the topic</h3>

<table class="table table-hover" id="authors-table"></table>

<h3 id="author-scores">Author score</h3>

Authors scored according to field of work, publications within the topic
and citing works within the topic.

<div class="embed-responsive embed-responsive-4by3">
  <iframe class="embed-responsive-item" id="author-scores-graph-iframe"></iframe>
</div>

<table class="table table-hover" id="author-scores-table"></table>

Missing authors here?
Then go to the
<a href="/topic/Q79932/curation">curation</a>
page to resolve the author names.

<h3 id="coauthor-graph">Co-author graph</h3>

The 25 most prolific authors and some of their key co-authors.

<div class="embed-responsive embed-responsive-4by3">
    <iframe class="embed-responsive-item" id="coauthor-graph-iframe"></iframe>
</div>

<h3 id="author-awards">Awards received by authors who published on the topic</h3>

<table class="table table-hover" id="author-awards-table"></table>


<h2 id="Topics">Topics</h2>

<h3 id="topics">Co-occurring topics</h3>

<table class="table table-hover" id="topics-table"></table>

<h3 id="co-occurring">Co-occurring topics graph</h3>

Only a maximum of the 400 most often occuring links are shown.

<div class="embed-responsive embed-responsive-4by3">
    <iframe class="embed-responsive-item" id="co-occurring-iframe"></iframe>
</div>

<h3 id="co-occurring-map">Co-occurring topics map</h3>

<div class="embed-responsive embed-responsive-4by3">
    <iframe class="embed-responsive-item" id="co-occurring-map-iframe"></iframe>
</div>


<h2 id="uses">Uses</h2>

<table class="table table-hover" id="uses-table"></table>


<h2 id="venues">Venues and series publishing works about the topic</h2>

<table class="table table-hover" id="venues-table"></table>

<h2 id="Citations">Citations</h2>

<h3 id="top-cited">Works cited from works on the topic</h3>

<table class="table table-hover" id="top-cited-table"></table>

<h3 id="most-cited-authors">Authors cited from works on the topic</h3>

<table class="table table-hover" id="most-cited-authors-table"></table>

<h3 id="organization-map">Map of organizations associated with works about the topic</h3>

The colours indicate how many publications on the topic are associated with organizations in the given location, as detailed in the legend (top right).

<div class="embed-responsive embed-responsive-4by3">
    <iframe 
        class="embed-responsive-item" id="organization-map-iframe">
    </iframe>
</div>

<br>

<h3 id="country-citation-graph">Citation graph of works about the topic, aggregated by country</h3>

The graph indicates the countries associated with organizations whose authors have published works on the topic, and indicates the most cited countries (arrowheads) as well as the countries they are most frequently cited from.

<div class="embed-responsive embed-responsive-4by3">
    <iframe class="embed-responsive-item" id="country-citation-graph-iframe">
    </iframe>
</div>


</div>
</div>
<div class="container footer">
    <hr>
    Data from <a href="https://www.wikidata.org">Wikidata</a> and
    <a href="https://en.wikipedia.org">English Wikipedia</a>
    |
    Code from
    <a href="https://github.com/WDscholia/scholia">GitHub repository</a>
    |
    Hosted on   <a href="https://toolforge.org/">Wikimedia Toolforge</a>,
    a <a href="https://wikimediafoundation.org">Wikimedia Foundation</a> service
    |
    License for content: CC0 for data, CC-BY-SA for text and media
    |
    Report technical problems at Scholia's
    <a href="https://github.com/WDscholia/scholia/issues">Issues</a> GitHub page.
    |
    Follow us on <a href="https://wikis.world/@wdscholia">Mastodon</a>.
    <hr>
  </div>


    

    <script src="/static/jquery.min.js"></script>
    <script src="/static/js/popper.min.js"></script>
    <script src="/static/js/bootstrap.min.js"></script>

<script type="text/javascript" src="/static/d3.v5.min.js"></script>
<script type="text/javascript" src="/static/d3-scale-chromatic.v1.min.js"></script>
<script type="text/javascript" src="/static/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="/static/scholia.js"></script>

<script type="text/javascript" src="/static/bootstrap-autocomplete.min.js"></script>

<script type="text/javascript">
    
    var url = 'https://www.wikidata.org/w/api.php?action=wbgetentities&ids=' +
	       'Q79932' + 
	       '&format=json&callback=?';
    
    const currentAspect = window.location.pathname.split("/")[1];
     
    $.getJSON(url, function (data) {
	 var item = data.entities["Q79932"];
	 if ('en' in item.labels) {
	     var title = item.labels.en.value
	     $("#h1").text(title);
	     $(".self").text(title);
       $("title").text(title + " - Scholia");

	     
	 }
	 $("#h1").append(' (<a href="https://www.wikidata.org/wiki/Q79932">Q79932</a>)');

    

	if ("P18" in item.claims) {
        // Find P18 claim which is not deprecated
        const p18Claim = item.claims.P18.find(function (claim) {
            return claim.rank !== "deprecated";
        });

        if (undefined !== p18Claim) {
            var imageName = p18Claim.mainsnak.datavalue.value;
            // spaces must be replaced by underscores in the file name
            imageName = imageName.replaceAll(" ", "_")
            var imageNameMd5 = md5(imageName);
            var imageURL = "https://upload.wikimedia.org/wikipedia/commons/thumb/"
            imageURL += imageNameMd5[0] + "/" + imageNameMd5.slice(0,2) + "/"
            var filetype = imageName.match(/\.(\w+)$/);
            var extension = filetype[1].toLowerCase()
            if (extension === "tif" || extension === "tiff") {
              imageURL += encodeURIComponent(imageName) + "/lossy-page1-500px-" + encodeURIComponent(imageName) + ".jpg";
            } else if (extension === "svg") {
              imageURL += encodeURIComponent(imageName) + "/500px-" + encodeURIComponent(imageName) + ".png";
            } else {
              imageURL += encodeURIComponent(imageName) + "/500px-" + encodeURIComponent(imageName);
            }
            var itemImage = document.getElementById("item-image");
            if (itemImage) {
              itemImage.src = imageURL;
              itemImage.title = imageName.slice(0, imageName.lastIndexOf('.'));
              itemImage.setAttribute('alt', imageName);

              var link = document.createElement('a');
              link.href = "https://commons.wikimedia.org/wiki/File:" + encodeURIComponent(imageName);
              link.style = "max-width: 50%"
              var parent = itemImage.parentNode;
              parent.replaceChild(link, itemImage);
              link.appendChild(itemImage);
            }
        }
	}

	if ("P10286" in item.claims) {
	    var imageURL = item.claims.P10286[0].mainsnak.datavalue.value;
	    var itemImage = document.getElementById("item-image");
	    if (itemImage) {
            itemImage.src = imageURL;
        }
    }

	function socialMediaLink(detailsList, user, site, logo = '') {
	     var html = '';
	     if (logo) {
	        html += '<a href="' + site.url + '"><img alt="' + site.name + ' logo" src="';
	        html += logo.src + '" width="16" height="16" hspace="4" /></a> ';
	     }
	     html += '<a href="' + site.url + encodeURI(user.name) + '">';
	     html += user.prefix + escapeHTML(user.name) + '</a>';
	     detailsList.push(html);
	 }

	 function sortRank(a, b) {
	  const aRank = a["rank"];
	  const bRank = b["rank"];
	  if (aRank == bRank) {
	    return 0;
	  }
	  if (aRank == "preferred" || bRank == "deprecated") {
	    return -1;
	  }
	  if (bRank == "preferred" || aRank == "deprecated") {
	    return 1;
	  }
    return 0;
	}

	 var detailsList = Array();
	 if ("P496" in item.claims) {
	     var user = {name: item.claims.P496[0].mainsnak.datavalue.value, prefix: 'https://orcid.org/'};
		   var site = {name: "ORCID", url: "https://orcid.org/"};
		   var logo = {src: "/static/images/orcid.svg"};
		   socialMediaLink(detailsList, user, site, logo);
	 }

	 if ("P4033" in item.claims) {
	      var mastodonAccount = item.claims.P4033[0].mainsnak.datavalue.value;
	      var mastodonComponents = mastodonAccount.split("@");
	      if (mastodonComponents.length == 2) {
	        // Mastodon user URLs start with @
	        var user = { name: '@' + mastodonComponents[0], prefix: '' };
	        var site = { name: "Mastodon", url: 'https://' + mastodonComponents[1] + '/' };
	        var logo = { src: "/static/images/mastodon.svg" };
	        socialMediaLink(detailsList, user, site, logo);
	     }
	 }

	 if ("P2037" in item.claims) {
	     var user = {name: item.claims.P2037[0].mainsnak.datavalue.value, prefix: "@"};
	     var site = { name: "GitHub", url: "https://github.com/" };
	     var logo = { src: "/static/images/github.svg" };
	     socialMediaLink(detailsList, user, site, logo);
	 }

	 if ("P6782" in item.claims) {
	     var user = { name: item.claims.P6782[0].mainsnak.datavalue.value, prefix: 'https://ror.org/' };
	     var site = { name: "Research Organization Registry", url: 'https://ror.org/' };
	     var logo = { src: "/static/images/ror.svg" };
	     socialMediaLink(detailsList, user, site, logo);
	 }

	 if ("P2572" in item.claims) {
	     var user = { name: item.claims.P2572[0].mainsnak.datavalue.value, prefix: '#' };
	     var site = { name: "Hashtag hub", url: 'https://hashtags-hub.toolforge.org/' };
	     socialMediaLink(detailsList, user, site);
	 }

	 /* Official homepage */
	 if ("P856" in item.claims) {
	     var homepage = item.claims.P856.sort(sortRank)[0]
       var homepageURL = homepage.mainsnak.datavalue.value
	     detailsList.push('&nbsp;<a href="' + homepageURL + '">' + homepageURL + '</a>');
	 }

	 if (detailsList.length > 0) {
	     $('#details').append(detailsList.join(" | "));
	 }

	 try {
	     var doi = item.claims.P356[0].mainsnak.datavalue.value;
	     $("head").append( '<meta name="citation_doi" content="' + doi + '"/>' );
	 }
	 catch(e) {}
	 
	 /* BioSchemas annotation */
	 if (item.claims.P31 &&
	     ((item.claims.P31[0].mainsnak.datavalue.value.id == 'Q5'))) {
	   try { /* Person */
	       bioschemasAnnotation = {
	          "@context" : "https://schema.org",
	          "@type" : "Person" ,
	          "http://purl.org/dc/terms/conformsTo": { "@type": "CreativeWork", "@id": "https://bioschemas.org/profiles/Person/0.2-DRAFT-2019_07_19/" },
	          "description" : "A person" ,
	          "identifier" : "Q79932" ,
	          "mainEntityOfPage" : "http://www.wikidata.org/entity/Q79932"
	       }
	       if ('en' in item.labels) {
	         bioschemasAnnotation.name = item.labels.en.value;
	       }
	       $( '#bioschemas' ).append( JSON.stringify(bioschemasAnnotation) );
	    } catch(e) {}
	 } else if (item.claims.P31 &&
	     ((item.claims.P31[0].mainsnak.datavalue.value.id == 'Q47461491') ||
	      (item.claims.P31[0].mainsnak.datavalue.value.id == 'Q967847'))) {
	   try { /* ChemicalSubstance */
	       bioschemasAnnotation = {
	          "@context" : "https://schema.org",
	          "@type" : "ChemicalSubstance" ,
	          "http://purl.org/dc/terms/conformsTo": { "@type": "CreativeWork", "@id": "https://bioschemas.org/profiles/ChemicalSubstance/0.4-RELEASE/" },
	          "identifier" : "Q79932" ,
	          "url" : "http://www.wikidata.org/entity/Q79932"
	       }
	       if ('en' in item.labels) {
	         bioschemasAnnotation.name = item.labels.en.value;
	       }
	       $( '#bioschemas' ).append( JSON.stringify(bioschemasAnnotation) );
	    } catch(e) {}
	 } else if (item.claims.P225) {
             try { /* Taxon */
		 var taxonName = item.claims.P225[0].mainsnak.datavalue.value;
		 bioschemasAnnotation = {
	             "@context" : "https://schema.org",
	             "@type" : "Taxon" ,
	             "http://purl.org/dc/terms/conformsTo": { "@type": "CreativeWork", "@id": "https://bioschemas.org/profiles/Taxon/0.6-RELEASE/" },
	             "name" : taxonName ,
	             "url" : "http://www.wikidata.org/entity/Q79932"
		 }
		 if (item.claims.P105) {
	             var taxonRank = item.claims.P105[0].mainsnak.datavalue.value.id;
	             bioschemasAnnotation.taxonRank = "http://www.wikidata.org/entity/" + taxonRank ;
		 }
		 if (item.claims.P171) {
	             var parent = item.claims.P171[0].mainsnak.datavalue.value.id;
	             bioschemasAnnotation.parentTaxon = "http://www.wikidata.org/entity/" + parent ;
		 }
		 $( '#bioschemas' ).append( JSON.stringify(bioschemasAnnotation) );
		 // console.log(JSON.stringify(bioschemasAnnotation, "", 2))
	     } catch(e) {}
	 } else if (item.claims.P235) {
	     try { /* Chemical Compound */
		 var inchiKey = item.claims.P235[0].mainsnak.datavalue.value;
		 bioschemasAnnotation = {
	             "@context" : "https://schema.org",
	             "@type" : "MolecularEntity" ,
	             "http://purl.org/dc/terms/conformsTo": { "@type": "CreativeWork", "@id": "https://bioschemas.org/profiles/MolecularEntity/0.5-RELEASE/" },
	             "identifier" : "Q79932" ,
	             "inChIKey" : inchiKey ,
	             "url" : "http://www.wikidata.org/entity/Q79932"
		 }
		 if ('en' in item.labels) {
	         bioschemasAnnotation.name = item.labels.en.value;
         }
		 if (item.claims.P234 && item.claims.P234[0].mainsnak.datavalue) {
	             var inchi = item.claims.P234[0].mainsnak.datavalue.value;
	             bioschemasAnnotation.inChI = inchi ;
		 }
		 if (item.claims.P274 && item.claims.P274[0].mainsnak.datavalue) {
	             var chemformula = item.claims.P274[0].mainsnak.datavalue.value;
	             bioschemasAnnotation.molecularFormula = chemformula ;
		 }
		 if (item.claims.P2017 && item.claims.P2017[0].mainsnak.datavalue) {
	             var smiles = item.claims.P2017[0].mainsnak.datavalue.value;
	             bioschemasAnnotation.molecularFormula = smiles.replace("\"", "\'\'") ;
		 } else if (item.claims.P233 && item.claims.P233[0].mainsnak.datavalue) {
	             var smiles = item.claims.P233[0].mainsnak.datavalue.value;
	             bioschemasAnnotation.smiles = smiles.replace("\"", "\'\'") ;
		 }
		 $( '#bioschemas' ).append( JSON.stringify(bioschemasAnnotation) );
	     } catch(e) { console.error("Exception: " + e)
	     }
	 } else if (item.claims.P352) { // UniProt ID
	     try { /* Protein */
		 var uniprot = item.claims.P352[0].mainsnak.datavalue.value;
		 bioschemasAnnotation = {
	             "@context" : "https://schema.org",
	             "@type" : "Protein" ,
	             "http://purl.org/dc/terms/conformsTo": { "@type": "CreativeWork", "@id": "https://bioschemas.org/profiles/Protein/0.11-RELEASE/" },
	             "identifier" : "Q79932" ,
	             "url" : "http://www.wikidata.org/entity/Q79932" ,
	             "sameAs": "https://www.uniprot.org/uniprot/" + uniprot
		 }
		 if ('en' in item.labels) {
	       bioschemasAnnotation.name = item.labels.en.value;
         }
		 $( '#bioschemas' ).append( JSON.stringify(bioschemasAnnotation) );
	     } catch(e) { console.error("Exception: " + e)
	     }
	 } else if (item.claims.P351 || item.claims.P594) { // NCBI Gene or Ensembl
	     try { /* Gene */
		 bioschemasAnnotation = {
	             "@context" : "https://schema.org",
	             "@type" : "Gene" ,
	             "http://purl.org/dc/terms/conformsTo": { "@type": "CreativeWork", "@id": "https://bioschemas.org/profiles/Gene/0.7-RELEASE/" },
	             "identifier" : "Q79932" ,
	             "url" : "http://www.wikidata.org/entity/Q79932"
		 }
		 if ('en' in item.labels) {
	       bioschemasAnnotation.name = item.labels.en.value;
         }
		 counter = 0
		 bioschemasAnnotation.sameAs = []
		 if (item.claims.P351 && item.claims.P351[0].mainsnak.datavalue) {
	             var ncbi = item.claims.P351[0].mainsnak.datavalue.value;
	             bioschemasAnnotation.sameAs[counter] = "https://www.ncbi.nlm.nih.gov/gene/" + ncbi;
	             counter++
		 }
		 if (item.claims.P594 && item.claims.P594[0].mainsnak.datavalue) {
	             var ensembl = item.claims.P594[0].mainsnak.datavalue.value;
	             bioschemasAnnotation.sameAs[counter] = "http://identifiers.org/ensembl/" + ensembl;
		 }
		 $( '#bioschemas' ).append( JSON.stringify(bioschemasAnnotation) );
	     } catch(e) { console.error("Exception: " + e)
	     }
	 }
	 
	 /* English Wikipedia */
	 if ('enwiki' in item.sitelinks) {
	     var title = item.sitelinks.enwiki.title;
	     var wikipediaApiUrl = 'https://en.wikipedia.org/api/rest_v1/page/summary/' +
				   encodeURIComponent(title);
	     var wikipediaUrl = 'https://en.wikipedia.org/wiki/' + encodeURIComponent(title)

	     var headers = new Headers({"Api-User-Agent": "https://github.com/WDscholia/scholia"});

	     fetch(wikipediaApiUrl, {method: 'GET', headers: headers})
	     .then(response => response.json())
	     .then(data => {
	       var html = " (<a href=\"" + wikipediaUrl + "\">Read more on English Wikipedia</a>)";
		 $("#intro").text(data.extract).append(html);
	     }).catch(error => {
		 var html = "<a href=\"" + wikipediaUrl + "\">View on English Wikipedia</a>";
         $("#intro").append(html);
		 console.error('Could not get summary from enwiki: ', error);
	     });
	 }

	 
	 /* English Wikiversity */
	 if ('enwikiversity' in item.sitelinks) {
	     var enwikiversityTitle = item.sitelinks.enwikiversity.title;
	     var wikiversityApiUrl = 'https://en.wikiversity.org/w/api.php?' +
				     'action=query&prop=extracts&exsentences=3&exlimit=1&exintro=1&' + 
				     'explaintext=1&callback=?&format=json&titles=' +
				     encodeURIComponent(enwikiversityTitle);
	     var wikiversityUrl = 'https://en.wikiversity.org/wiki/' + encodeURIComponent(enwikiversityTitle)

	     $.getJSON(wikiversityApiUrl, function(data) {
		 var pages = data.query.pages;
		 var text = pages[Object.keys(pages)[0]].extract; 
		 if (text) {
		     var html = "... (from the <a href=\"" + wikiversityUrl + "\">English Wikiversity</a>)";
		 }
		 else {
		     var html = "Read on the <a href=\"" + wikiversityUrl + "\">English Wikiversity</a>";
		 }
		 $("#wikiversity-extract").text(text).append(html);
	     }).fail(function(d, textStatus, error) {
		 var html = "Read on the <a href=\"" + wikiversityUrl + "\">English Wikiversity</a>";
		 $("#wikiversity-extract").append(html);
		 console.error("getJSON failed, status: " + textStatus + ", error: "+error)
	     });
	 }

     });

    var curationElement = document.getElementById("curation-link");

    
      curationElement.href = "/" + currentAspect + "/Q79932/curation";
    
    curationElement.classList.remove("d-none");

     // this query opens the Wikidata item as a different aspect
     var endpointUrl = 'https://query.wikidata.org/sparql';
    if ("".length) {
        var query = `
    SELECT DISTINCT ?aspect 
    WHERE {
    { [] wdt:P17 wd:Q79932 . BIND("country" AS ?aspect) }
    UNION
    { wd:Q79932 wdt:P159? / wdt:P625 [] . BIND("location" AS ?aspect) } 
    UNION 
    { [] wdt:P1416 | wdt:P108 wd:Q79932 . BIND("organization" AS ?aspect) }
    }
    `;
    } else {
     var query = `
    SELECT DISTINCT ?aspect 
    WHERE {
    { [] wdt:P50 wd:Q79932 . BIND("author" AS ?aspect) }
    UNION 
    { [] wdt:P166 wd:Q79932 . BIND("award" AS ?aspect) }
    UNION
    { wd:Q79932 wdt:P31 / wdt:P279?  wd:Q22325163 . BIND("complex" AS ?aspect) }
    UNION 
    { [] wdt:P17 wd:Q79932 . BIND("country" AS ?aspect) }
    UNION
    { [] wdt:P972 wd:Q79932 . BIND("catalogue" AS ?aspect) }
    UNION
    { wd:Q79932 wdt:P235 [] . BIND("chemical" AS ?aspect) }
    UNION
    { wd:Q79932 ^wdt:P31/wdt:P235 [] . BIND("chemical-class" AS ?aspect) }
    UNION
    { wd:Q79932 wdt:P644 [] . BIND("gene" AS ?aspect) }
    UNION
    { wd:Q79932 wdt:P159? / wdt:P625 [] . BIND("location" AS ?aspect) } 
    UNION 
    { [] wdt:P1416 | wdt:P108 wd:Q79932 . BIND("organization" AS ?aspect) }
    UNION
    { wd:Q79932 wdt:P31 wd:Q2996394 . BIND("pathway" AS ?aspect) }
    UNION
    { wd:Q79932 wdt:P31 wd:Q4915012 . BIND("pathway" AS ?aspect) }
    UNION 
    { [] wdt:P872 wd:Q79932 . BIND("printer" AS ?aspect) }
    UNION
    { wd:Q79932 wdt:P31 wd:Q8054 . BIND("protein" AS ?aspect) }
    UNION
    { [] wdt:P123 wd:Q79932 . BIND("publisher" AS ?aspect) }
    UNION 
    { [] wdt:P179 wd:Q79932 . BIND("series" AS ?aspect) }
    UNION 
    { wd:Q79932 wdt:P31 / wdt:P279* wd:Q7397 . BIND("software" AS ?aspect) }
    UNION 
    { [] wdt:P859 wd:Q79932 . BIND("sponsor" AS ?aspect) }
    UNION
    { wd:Q79932 wdt:P225 [] . BIND("taxon" AS ?aspect) }
    UNION
    { [] wdt:P921 wd:Q79932 . BIND("topic" AS ?aspect) }
    UNION
    { [] wdt:P4510 wd:Q79932 . BIND("use" AS ?aspect) } 
    UNION
    { [] wdt:P1433 wd:Q79932 . BIND("venue" AS ?aspect) } 
    UNION
    { wd:Q79932 wdt:P50 | wdt:P2093 [] . BIND("work" AS ?aspect) }
    }
    `;
  }
     settings = {
	 headers: { Accept: 'application/sparql-results+json' },
	 data: { query: query }
     };
     
      $.ajax(endpointUrl, settings).then(function (data) {
        createDropdownButton("aspect-chooser", 'aspectMenuButton', currentAspect, data, "Q79932")

        if (data.results.bindings.length > 1) {
          addDropdownList("aspect-chooser", 'aspectMenuList', currentAspect, data)
        }
      }).then(function () {
        if ("".length) {
          var endpointUrl = 'https://query.wikidata.org/sparql';
          var query = "SELECT DISTINCT ?aspect WHERE {"
          query += '{ [] wdt:P921 wd:Q79932 . BIND("topic" AS ?aspect) }    }';

          settings = {
            headers: { Accept: 'application/sparql-results+json' },
            data: { query: query }
          };

          $.ajax(endpointUrl, settings).then(function (data) {
            var aspectLabel = " / <a href='/" + currentAspect + "/Q79932'>Q79932</a> / "   
            document.getElementById("aspect-chooser-label").innerHTML = aspectLabel;

            var currentSubAspect = window.location.pathname.split("/")[3];
            document.querySelectorAll("#aspectMenuList a").forEach((link) => link.href += "/" + currentSubAspect + "/")

            createDropdownButton("aspect-chooser", 'aspectMenuButton', currentSubAspect, data, "")

            if (data.results.bindings.length > 1) {
              addDropdownList("aspect-chooser", 'aspectMenuList', currentSubAspect, data)
            }
          }).fail(function (jqXHR, textStatus, errorThrown) {
            console.error("Subaspect chooser failed to generate. " + textStatus + " " + errorThrown)
          });
        }
      }).fail(function (jqXHR, textStatus, errorThrown) {
        console.error("Aspect chooser failed to generate. " + textStatus + " " + errorThrown)
      });

      function createDropdownButton(parent, id, currentAspect, data, q) {        
        var aspectDropdown = document.createElement('button');
        aspectDropdown.type = 'button';
        aspectDropdown.id = id;
        aspectDropdown.classList = 'btn btn-outline-secondary';

        // only show aspects which have a curation page with author-disambig or wikidata links
        var validCurationPages = ["author", "award", "organization", "topic", "venue"]
        

        if (data.results.bindings.length > 1) {
          aspectDropdown.classList.add('dropdown-toggle');
          aspectDropdown.setAttribute('data-toggle', 'dropdown');
          aspectDropdown.setAttribute('aria-haspopup', 'true');
          aspectDropdown.setAttribute('aria-expanded', 'false');
        }
        aspectDropdown.innerText = currentAspect;
        document.getElementById(parent).append(aspectDropdown);

        aspectDropdown.insertAdjacentHTML("afterend",
          '<span id="aspect-chooser-label" style="color: #6C757D; vertical-align: middle;margin: 2px;"> / '+ q + '</span>')
      }

      function addDropdownList(parent, id, currentAspect, data) {        
        var aspectDropdownMenu = document.createElement('div');
        aspectDropdownMenu.classList = 'dropdown-menu';
        aspectDropdownMenu.setAttribute('aria-labelledby', 'aspectMenuButton');
        aspectDropdownMenu.id = id

        data.results.bindings.forEach(function (entry) {
          var aspect = entry.aspect.value;
          if (aspect != currentAspect) {
            var dropdownItem = document.createElement('a');
            dropdownItem.classList = 'dropdown-item';
            dropdownItem.href = "/" + aspect + '/Q79932';
            
            dropdownItem.innerText = aspect;
            aspectDropdownMenu.append(dropdownItem);
          }
        });

        document.getElementById(parent).append(aspectDropdownMenu);
      }


     /* Wembedder */
     var wembedderUrl = "https://wembedder.toolforge.org/api/most-similar/Q79932";
     $.ajax({
	 url: wembedderUrl,
	 success: function (data) {
	     var html = `<hr><span data-toogle="tooltip" title="Related items from Wembedder knowledge graph embedding.">Related:</span> `; 
	     $( '#wembedder' ).append(html);

	     // Make list with results
	     data.most_similar.forEach(function(entry, idx, array) {
		 var listed_q = entry.item;
		 var language = 'en';

		 if (idx !== 0) {
		     $( '#wembedder' ).append( ' &middot; ');
		 }

		 var html = '<a href="../' + listed_q + '"><span id="wembedder-result-' + listed_q + '">' + listed_q + '</span></a> '
		 $( '#wembedder' ).append( html );

		 // Convert Q identifier to labels
                 $.getJSON("https://www.wikidata.org/w/api.php?callback=?", {
                     action: "wbgetentities",
                     ids: listed_q,
                     language: language,
                     uselang: language,
                     format: "json",
                     strictlanguage: true,
                 }, function (data) {
                     if (listed_q in data.entities) {
                         label = entityToLabel(data.entities[listed_q],
                                               language=language);
                         $('#wembedder-result-' + listed_q).empty();
                         $('#wembedder-result-' + listed_q).text(label);
                     }
		 });
	     });
	     $( '#wembedder' ).append( '<hr>' );
	 },
	 error: function (jqXHR, textStatus, errorThrown) {
         console.error("Wembedder failed. " + textStatus + " " + errorThrown)
	 },
     });
  

  

  $(document).ready(function () {
    $('#searchterm').autoComplete({
      minLength: 2,
      resolver: 'custom',
      events: {
        search: debounce((searchTerm, callback) => {
          var url = "https://www.wikidata.org/w/api.php?callback=?";
          var settings = {
            dataType: 'jsonp',
            data: {
              search: searchTerm,
              action: "wbsearchentities",
              language: "en",
              uselang: "en",
              format: "json",
              strictlanguage: true
            }
          };

          $.ajax(url, settings).then(function (data) {
            if (data.search.length) {
              let results = ['Show all results for "' + searchTerm + '"']
              for (let item of data.search) {
                results.push(item.label + " - " + item.description + " (" + item.title + ")");
              }
              callback(results)
            } else {
              callback([])
            }
          }).fail(function (jqXHR, textStatus, errorThrown) {
            callback(["Search failed"])
            console.error("Search failed. " + textStatus + " " + errorThrown)
          });
        }, 200)
      }
    });

    $("#searchterm").on("autocomplete.select", (event, item) => { handleSearch(item) });

    $("#searchterm").on("keydown", function (event) {
      switch (event.key) {
        case "Enter":
          handleSearch(this.value);
          break;
        default:
      }
    });

    $("#searchbutton").on("click", () => { handleSearch(document.getElementById("searchterm").value) })

    function handleSearch(item) {
      // headerSearch and authorIndexAutocomplete reference where the two formats come from
      let headerSearch =  item.match(/ \((Q\d+)\)$/);
      if (headerSearch) {
        window.location.href = "/" + headerSearch[1];
      } else {
        let authorIndexAutocomplete = item.match(/\/\w+\/Q\d+$/);
        if (authorIndexAutocomplete) {
          window.location.href = item;
        } else {
          let search_text = item.match(/Show all results for "(.+)"$/)
          if (search_text) {
            window.location.href = "/search?q=" + search_text[1];
          } else {
            window.location.href = "/search?q=" + item;
          }
        }
      }
    }

    function debounce(callback, wait) {
      let timeout;
      return (...args) => {
        clearTimeout(timeout);
        timeout = setTimeout(function () {
          callback.apply(this, args);
        }, wait);
      };
    }

     // Add table of content
  var headings = document.querySelectorAll("h2,h3");
  if (headings.length >= 3) {
    var tocParent = document.createElement("div");
    tocParent.className = "table-of-contents"

    var toc = document.createElement("div");

    tocTitle = document.createElement("b");
    tocTitle.innerText = "Table of Contents"
    toc.appendChild(tocTitle)

    var tocList = document.createElement("ul");
    var sublist = "";
    for (let i = 0; i < headings.length; i++) {
      const element = headings[i];
      if (!element.id) {
        element.id = element.innerText.replaceAll(" ", "-");
      }
      if (element.tagName === "H3" && !sublist) {
        var sublist = document.createElement("ul");
      }
      tocListItem = document.createElement("li");

      tocEntry = document.createElement("a");
      tocEntry.setAttribute("href", "#" + element.id);
      tocEntry.innerText = headings[i].innerText;

      tocListItem.appendChild(tocEntry);

      if (element.tagName === "H3") {
        sublist.appendChild(tocListItem);
        if (i == headings.length - 1) {
          tocList.appendChild(sublist);
        }
      } else {
        if (sublist) {
          tocList.appendChild(sublist);
          sublist = "";
        }
        tocList.appendChild(tocListItem);
      }
    }

    toc.appendChild(tocList)

    var itemImage = document.createElement("img");
    itemImage.id = "item-image";
    itemImage.alt = "";
    itemImage.href = "";
    itemImage.onclick = function () {
            window.location.href = itemImage.href;
    };	  

    tocParent.appendChild(toc);
    tocParent.appendChild(itemImage);
    document.querySelector("h2").insertAdjacentElement("beforebegin", tocParent)
    
    itemImage.height = toc.clientHeight
  }

    // Add anchor links to all headings
    var headers = document.querySelectorAll('h2[id], h3[id]')
    if (headers) {
      headers.forEach(element => {
        var title = element.innerText;
        element.removeChild(element.childNodes[0])
        element.insertAdjacentHTML('afterbegin', `<a href="#${element.id}" class="hlink"  ariaLabel="Anchor">${title}</a>`)
      })
    }

     

// recently-published-works table
sparqlToDataTable(`# tool: scholia
PREFIX target: <http://www.wikidata.org/entity/Q79932>

SELECT ?date ?work ?workLabel (CONCAT("/work/", SUBSTR(STR(?work), 32)) AS ?workUrl)
  ?topicsUrl ?topics 
WITH {
  SELECT DISTINCT ?work WHERE {
    ?work wdt:P921 / (wdt:P361+ | wdt:P1269+ | (wdt:P31* / wdt:P279*) ) target: .
  }
} AS %works
WITH {
  SELECT (MAX(?dates) as ?datetime) ?work (GROUP_CONCAT(DISTINCT ?topic_label; separator=" // ") AS ?topics) 
                                    (CONCAT("../topics/", GROUP_CONCAT(DISTINCT SUBSTR(STR(?topic), 32); separator=",")) AS ?topicsUrl) 
  WHERE {
    INCLUDE %works
    ?work wdt:P921 ?topic . 
    OPTIONAL { ?work wdt:P577 ?dates . }
    ?topic rdfs:label ?topic_label .  FILTER (lang(?topic_label) = 'en')
  }
  GROUP BY ?work
} AS %result
WHERE {
  INCLUDE %result

  # There is a problem with BC dates
  # BIND(xsd:date(?datetime) AS ?date)
  BIND(REPLACE(STR(?datetime), 'T.*', '') AS ?date)
    
  SERVICE wikibase:label { bd:serviceParam wikibase:language "en,da,de,es,fr,jp,nl,no,ru,sv,zh". }
}
GROUP BY ?date ?work ?workLabel ?topicsUrl ?topics
ORDER BY DESC(?date)
LIMIT 500
`,
"#recently-published-works-table", "topic_recently-published-works.sparql",
options={});
// earliest-published-works table
sparqlToDataTable(`# tool: scholia
PREFIX target: <http://www.wikidata.org/entity/Q79932>

SELECT ?date ?work ?workLabel (CONCAT("/work/", SUBSTR(STR(?work), 32)) AS ?workUrl)
?topicsUrl ?topics
WITH {
  SELECT DISTINCT ?work WHERE {
    ?work wdt:P921 / (wdt:P361+ | wdt:P1269+ | (wdt:P31* / wdt:P279*) ) target: .
  }
} AS %works
WITH {
  SELECT (MAX(?dates) as ?datetime) ?work (GROUP_CONCAT(DISTINCT ?topic_label; separator=" // ") AS ?topics) 
                                    (CONCAT("../topics/", GROUP_CONCAT(DISTINCT SUBSTR(STR(?topic), 32); separator=",")) AS ?topicsUrl) 
                                    WHERE {
    INCLUDE %works
    ?work wdt:P921 ?topic . 
    ?work wdt:P577 ?dates . 
	FILTER (!isBLANK(?dates)) .
    ?topic rdfs:label ?topic_label .  FILTER (lang(?topic_label) = 'en')
  }
  GROUP BY ?work
} AS %result
WHERE {
  INCLUDE %result

  # There is a problem with BC dates
  # BIND(xsd:date(?datetime) AS ?date)
  BIND(REPLACE(STR(?datetime), 'T.*', '') AS ?date)
    
  SERVICE wikibase:label { bd:serviceParam wikibase:language "en,da,de,es,fr,jp,nl,no,ru,sv,zh". }
}
GROUP BY ?date ?work ?workLabel ?topicsUrl ?topics
ORDER BY ASC(?date)
LIMIT 500
`,
"#earliest-published-works-table", "topic_earliest-published-works.sparql",
options={});
// authors table
sparqlToDataTable(`# tool: scholia
#defaultView:Table

PREFIX target: <http://www.wikidata.org/entity/Q79932>

SELECT
  ?count
  ?author ?authorLabel ?authorDescription (CONCAT("/author/", SUBSTR(STR(?author), 32)) AS ?authorUrl)
  (COALESCE(?orcid_, CONCAT("orcid-search/search/?searchQuery=", ?authorLabel)) AS ?orcid) 
WITH {
  SELECT
    ?author
    (count(?work) as ?count)
  WHERE {
    { ?work wdt:P921/wdt:P31*/wdt:P279* target: . }
    UNION
    { ?work wdt:P921/wdt:P361+ target: . }
    UNION
    { ?work wdt:P921/wdt:P1269+ target: . }
    ?work wdt:P50 ?author .
  }
  GROUP BY ?author
  ORDER BY DESC(?count)
  LIMIT 200
} AS %result
WHERE {
  INCLUDE %result
          
  # Include optional ORCID iD
  OPTIONAL { ?author wdt:P496 ?orcid_ . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language "en,da,de,es,fr,jp,nl,no,ru,sv,zh" . } 
}
ORDER BY DESC(?count)
`,
"#authors-table", "topic_authors.sparql",
options={});
// topics table
sparqlToDataTable(`# tool: scholia
#defaultView:Table

PREFIX target: <http://www.wikidata.org/entity/Q79932>

SELECT ?count (CONCAT("/topics/Q79932,", SUBSTR(STR(?topic), 32)) AS ?countUrl)
       ?topic ?topicLabel (CONCAT("/topic/", SUBSTR(STR(?topic), 32)) AS ?topicUrl)
       ?example_work ?example_workLabel (CONCAT("/work/", SUBSTR(STR(?example_work), 32)) AS ?example_workUrl)
WITH {
  SELECT (COUNT(?work) AS ?count) ?topic (SAMPLE(?work) AS ?example_work) WHERE {
    # Find works for the specific queried topic
	  ?work wdt:P921/( wdt:P31*/wdt:P279* | wdt:P361+ | wdt:P1269+) target: .
    
    # Find co-occuring topics
    ?work wdt:P921 ?topic .
    
    # Avoid listing the queried topic
      FILTER (target: != ?topic)
  }
  GROUP BY ?topic
} AS %result
WHERE {
  # Label the results
  INCLUDE %result
  SERVICE wikibase:label { bd:serviceParam wikibase:language "en,da,de,es,fr,jp,nl,no,ru,sv,zh" . } 
}
ORDER BY DESC(?count)
`,
"#topics-table", "topic_topics.sparql",
options={});
// author-scores table
sparqlToDataTable(`# tool: scholia
PREFIX target: <http://www.wikidata.org/entity/Q79932>

SELECT ?score 
?author ?authorLabel (CONCAT("/author/", SUBSTR(STR(?author), 32)) AS ?authorUrl)
?example_work ?example_workLabel (CONCAT("/work/", SUBSTR(STR(?example_work), 32)) AS ?example_workUrl)
WITH {
  SELECT
    (SUM(?score_) AS ?score)
    ?author
    (SAMPLE(?work) AS ?example_work)
  WHERE {
    { 
      ?author wdt:P101/wdt:P279* target: .
      BIND(20 AS ?score_)
    }
    UNION
    {
      SELECT (3 AS ?score_) ?author ?work WHERE {
        ?work wdt:P50 ?author ;
              wdt:P921/wdt:P279* target: .
      }
    }
    UNION
    {
      SELECT (1 AS ?score_) ?author ?work WHERE {
        ?work wdt:P50 ?author .
        ?citing_work wdt:P2860 ?work .
        ?citing_work wdt:P921/wdt:P279* target: .
      }
    }
  }
  GROUP BY ?author
  ORDER BY DESC(?score)
  LIMIT 200
} AS %results 
WHERE {
  INCLUDE %results
  SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en,da,de,es,jp,no,ru,sv,zh". }
}
ORDER BY DESC(?score)
`,
"#author-scores-table", "topic_author-scores.sparql",
options={});

// uses table
sparqlToDataTable(`# tool: scholia
PREFIX target: <http://www.wikidata.org/entity/Q79932>

SELECT
  ?count
  ?use ?useLabel (CONCAT("/use/", SUBSTR(STR(?use), 32)) AS ?useUrl)
  ("🔎" AS ?zoom)
  (CONCAT(SUBSTR(STR(target:), 32), "/use/", SUBSTR(STR(?use), 32)) AS ?zoomUrl)
  ?useDescription

  ?example_work ?example_workLabel
WITH {
  SELECT
    (COUNT(?work) AS ?count)
    ?use
    (SAMPLE(?work) AS ?example_work)
  {
    ?work wdt:P921 target: ;
          wdt:P4510 ?use .
  }
  GROUP BY ?use
} AS %result
WHERE {
  INCLUDE %result
  SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }
}
ORDER BY DESC(?count)
`,
"#uses-table", "topic_uses.sparql",
options={});


// venues table
sparqlToDataTable(`# tool: scholia
#defaultView:Table

PREFIX target: <http://www.wikidata.org/entity/Q79932>

SELECT ?count ?short_name 
?venue ?venueLabel (CONCAT("/venue/", SUBSTR(STR(?venue), 32)) AS ?venueUrl)
WITH {
  SELECT (count(?work) as ?count) ?venue (SAMPLE(?short_name_) AS ?short_name) WHERE {
    { ?work wdt:P921/wdt:P31*/wdt:P279* target: . }
    union { ?work wdt:P921/wdt:P361+ target: . }
    union { ?work wdt:P921/wdt:P1269+ target: . }
    ?work wdt:P1433/wdt:P179* ?venue .
    OPTIONAL { ?venue wdt:P1813 ?short_name_ . }
  }
  GROUP BY ?venue
} AS %result
WHERE {
  INCLUDE %result
  SERVICE wikibase:label { bd:serviceParam wikibase:language "en,da,de,es,fr,jp,nl,no,ru,sv,zh" . } 
}
ORDER BY DESC(?count)
LIMIT 200
`,
"#venues-table", "topic_venues.sparql",
options={});
// top-cited table
sparqlToDataTable(`# tool: scholia
#defaultView:Table

PREFIX target: <http://www.wikidata.org/entity/Q79932>

SELECT ?count 
?cited_work ?cited_workLabel (CONCAT("/work/", SUBSTR(STR(?cited_work), 32)) AS ?cited_workUrl)
WITH {
  SELECT (count(?work) as ?count) ?cited_work WHERE {
    { ?work wdt:P921/wdt:P31*/wdt:P279* target: . }
    union { ?work wdt:P921/wdt:P361+ target: . }
    union { ?work wdt:P921/wdt:P1269+ target: . }
    ?work wdt:P2860 ?cited_work .
  }
  GROUP BY ?cited_work
} AS %result
WHERE {
  INCLUDE %result
  SERVICE wikibase:label { bd:serviceParam wikibase:language "en,da,de,es,fr,jp,nl,no,ru,sv,zh" . } 
}
ORDER BY DESC(?count)
LIMIT 200
`,
"#top-cited-table", "topic_top-cited.sparql",
options={});
// most-cited-authors table
sparqlToDataTable(`# tool: scholia
PREFIX target: <http://www.wikidata.org/entity/Q79932>

SELECT ?number_of_citations 
?author ?authorLabel (CONCAT("/author/", SUBSTR(STR(?author), 32)) AS ?authorUrl)
?cited_work_example ?cited_work_exampleLabel (CONCAT("/work/", SUBSTR(STR(?cited_work_example), 32)) AS ?cited_work_exampleUrl)
WITH {
  # Find works about the topic
  SELECT DISTINCT ?work WHERE {
	  ?work wdt:P921 / (wdt:P361+ | wdt:P1269+ | (wdt:P31* / wdt:P279*) ) target: .
  }
} AS %works
WITH {
  # Find cited works
  SELECT (COUNT(?work) AS ?number_of_citations) ?author (SAMPLE(?cited_work) AS ?cited_work_example)
  WHERE {
    INCLUDE %works
    ?cited_work wdt:P50 ?author . 
    ?work wdt:P2860 ?cited_work .
  } 
  GROUP BY ?author
} AS %result
WHERE {
  # Label the results
  INCLUDE %result
  SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en" . }
} 
ORDER BY DESC(?number_of_citations)
LIMIT 200
`,
"#most-cited-authors-table", "topic_most-cited-authors.sparql",
options={});
// author-awards table
sparqlToDataTable(`# tool: scholia
PREFIX target: <http://www.wikidata.org/entity/Q79932>

SELECT ?count 
?award ?awardLabel (CONCAT("/award/", SUBSTR(STR(?award), 32)) AS ?awardUrl)
?recipients ?recipientsUrl
WITH {
  SELECT (COUNT(?researcher) AS ?count) ?award 
  (GROUP_CONCAT(DISTINCT ?researcher_label; separator=", ") AS ?recipients) 
  (CONCAT("../authors/", GROUP_CONCAT(DISTINCT SUBSTR(STR(?researcher), 32); separator=",")) AS ?recipientsUrl)
  WHERE {
    { 
      SELECT DISTINCT ?researcher ?award WHERE {
        hint:Query hint:optimizer "None" .
        ?work wdt:P921 target: .
        ?work wdt:P50 ?researcher .
        ?researcher wdt:P166 ?award .
      } 
      LIMIT 100
    }
    ?researcher rdfs:label ?researcher_label . FILTER (LANG(?researcher_label) = 'en')
  }
  GROUP BY ?award 
} AS %result
WHERE {
  INCLUDE %result
    ?award rdfs:label ?awardLabel . FILTER (LANG(?awardLabel) = 'en')
}
GROUP BY ?count ?award ?awardLabel ?recipients ?recipientsUrl
ORDER BY DESC(?count)
`,
"#author-awards-table", "topic_author-awards.sparql",
options={});
// context iframe
sparqlToIframe(`# tool: scholia
PREFIX target: <http://www.wikidata.org/entity/Q79932>

#defaultView:Graph
SELECT ?node ?nodeLabel ?nodeImage ?childNode ?childNodeLabel ?childNodeImage ?rgb 
WITH {
  SELECT DISTINCT ?property WHERE {
      ?property a wikibase:Property;
                wdt:P31 wd:Q18610173 ;
                wdt:P31 wd:Q26940804 . 
    }
} AS %properties
WITH {
  SELECT DISTINCT ?node ?childNode WHERE {
      BIND(target: AS ?node)
      ?node ?p ?i.
      ?childNode ?x ?p.
      ?childNode rdf:type wikibase:Property.
      FILTER(STRSTARTS(STR(?i), "http://www.wikidata.org/entity/Q"))
      FILTER(STRSTARTS(STR(?childNode), "http://www.wikidata.org/entity/P"))
    }
  LIMIT 5000
} AS %nodes
WITH {
  SELECT DISTINCT ?childNode ?node ?rgb WHERE {
      BIND("EFFBD8" AS ?rgb)
      target: ?p ?childNode.
      ?node ?x ?p.
      ?node rdf:type wikibase:Property.
      FILTER(STRSTARTS(STR(?childNode), "http://www.wikidata.org/entity/Q"))
    }
  LIMIT 5000
} AS %childNodes
WHERE {
  {
    INCLUDE %nodes
  }
  UNION
  {
    INCLUDE %childNodes
  }

  OPTIONAL { 
    INCLUDE %properties
    ?property wikibase:directClaim ?nodeclaim.
    ?node ?nodeclaim ?nodeImage. 
  }

  OPTIONAL { 
    INCLUDE %properties
    ?property wikibase:directClaim ?childNodeclaim.
    ?childNode ?childNodeclaim ?childNodeImage. 
  }
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }        
}`,
"#context-iframe", "topic_context.sparql");
// publications-per-year iframe
sparqlToIframe(`# tool: scholia
#defaultView:BarChart

PREFIX target: <http://www.wikidata.org/entity/Q79932>

SELECT
  (STR(?year_) AS ?year)
  (COUNT(?work) AS ?number_of_publications)

  # Work type used to color the bar chart
  ?type
WITH {
  # Find works with the topic. Also report the year
  SELECT
    ?work (MIN(?years) AS ?year_) (1 AS ?dummy) (SAMPLE(?article_type_) AS ?article_type)
  WHERE {
    ?work wdt:P921 / (wdt:P31*/wdt:P279* | wdt:P361+ | wdt:P1269+) target: .
    ?work wdt:P577 ?dates .
    BIND(YEAR(?dates) AS ?years) .

    ?work wdt:P31 ?article_type_ .
  }
  GROUP BY ?work 
} AS %works
WITH {
  SELECT ?year_ WHERE {
    # default values = 0
    ?year_item wdt:P31 wd:Q577 . 
    ?year_item wdt:P585 ?date .
    BIND(YEAR(?date) AS ?year_)
  }
} AS %default_counts
WITH {
  # Find earliest publication year
  SELECT (MIN(?year_) AS ?earliest_year) WHERE {
    INCLUDE %works
  }
  GROUP BY ?dummy
} AS %earliest  
WHERE {
  {
    INCLUDE %works
    ?article_type rdfs:label ?type . FILTER (LANG(?type) = "en")
  }
  UNION
  {
    INCLUDE %default_counts
    BIND("_" AS ?type)
  }
  INCLUDE %earliest
  BIND(YEAR(NOW()) AS ?this_year)
  FILTER (?year_ >= ?earliest_year && ?year_ <= ?this_year && ?year_ >= YEAR("1900-01-01"^^xsd:dateTime))
}
GROUP BY ?year_ ?type
ORDER BY ?year`,
"#publications-per-year-iframe", "topic_publications-per-year.sparql");
// coauthor-graph iframe
sparqlToIframe(`# tool: scholia
#defaultView:Graph

PREFIX target: <http://www.wikidata.org/entity/Q79932>

SELECT ?author1 ?author1Label ?rgb ?author2 ?author2Label
WITH {
  # Find works with the topic
  SELECT ?work WHERE {
    ?work wdt:P921 / (wdt:P31* / wdt:P279* | wdt:P361+ | wdt:P1269+) target: .
  }
} AS %works
WITH {
  # Limit the number of authors
  SELECT (COUNT(?work) AS ?count1) ?author1 WHERE {
    INCLUDE %works
    ?work wdt:P50 ?author1 .
  }
  GROUP BY ?author1
  ORDER BY DESC(?count1)
  LIMIT 25
} AS %authors1
WITH {
  # Limit the number of coauthors
  SELECT DISTINCT ?author2 ?author1  (COUNT(?work) AS ?count2)  WHERE {
    INCLUDE %works
    INCLUDE %authors1
    ?work wdt:P50 ?author1 , ?author2 .
    FILTER (?author1 != ?author2) 
  }
  GROUP BY ?author2 ?author1 
  ORDER BY DESC(?count2)
  LIMIT 250
} AS %authors2
WHERE {
#  INCLUDE %authors1
  INCLUDE %authors2
  OPTIONAL { ?author1 wdt:P21 ?gender1 . }
  BIND( IF(?gender1 = wd:Q6581097, "3182BD", "E6550D") AS ?rgb)
  SERVICE wikibase:label {
    bd:serviceParam wikibase:language "en,fr,de,ru,es,zh,jp".
  }
}`,
"#coauthor-graph-iframe", "topic_coauthor-graph.sparql");
// co-occurring iframe
sparqlToIframe(`# tool: scholia
#defaultView:Graph

PREFIX target: <http://www.wikidata.org/entity/Q79932>

SELECT
  ?topic1 ?topic1Label ?topic2 ?topic2Label
WITH {
  SELECT
    (COUNT(DISTINCT ?work) AS ?count) ?topic1 ?topic2
  WHERE {
    # Find works that are marked with main subject of the topic.
    ?work wdt:P921 / ( wdt:P31*/wdt:P279* | wdt:P361+ | wdt:P1269+ ) target: .
    
    # Identify co-occuring topics. 
    ?work wdt:P921 ?topic1, ?topic2 . 

    # Exclude the topic it self
    FILTER (target: != ?topic1 && target: != ?topic2 && ?topic1 != ?topic2)
  }
  GROUP BY ?topic1 ?topic2
  ORDER BY DESC(?count)

  # There a performance problems in the browser: We cannot show large graphs,
  # so we put a limit on the number of links displayed.
  LIMIT 400

} AS %results
WHERE {
  INCLUDE %results
  
  # Label the results
  SERVICE wikibase:label {
    bd:serviceParam wikibase:language "en,da,de,es,fr,jp,nl,no,ru,sv,zh".
  }
}
`,
"#co-occurring-iframe", "topic_co-occurring.sparql");
// co-occurring-map iframe
sparqlToIframe(`# tool: scholia
#defaultView:Map

PREFIX target: <http://www.wikidata.org/entity/Q79932>

SELECT
  ?location ?locationLabel
  ?geo
  ?example_work ?example_workLabel
WITH {
  SELECT
    ?location ?geo
    (SAMPLE(?work) AS ?example_work)
  WHERE {
    # Find works that are marked with main subject of the topic.
    ?work wdt:P921 / ( wdt:P31*/wdt:P279* | wdt:P361+ | wdt:P1269+ ) target: .
    
    # Identify co-occuring topic that is geo-locatable. 
    ?work wdt:P921 ?location .
    ?location wdt:P625 ?geo .
  }
  GROUP BY ?location ?geo
} AS %results
WHERE {
  INCLUDE %results
  
  # Label the results
  SERVICE wikibase:label {
    bd:serviceParam wikibase:language "en,da,de,es,fr,jp,nl,no,ru,sv,zh".
  }
}`,
"#co-occurring-map-iframe", "topic_co-occurring-map.sparql");
// author-scores-graph iframe
sparqlToIframe(`# tool: scholia
#defaultView:BubbleChart

PREFIX target: <http://www.wikidata.org/entity/Q79932>

SELECT ?score ?author ?authorLabel
WITH {
  SELECT 
    ?author
    (SUM(?score_) AS ?score)
  WHERE {
    { 
      ?author wdt:P101/wdt:P279* target: .
      BIND(20 AS ?score_)
    }
    UNION
    {
      SELECT (3 AS ?score_) ?author WHERE {
        ?work wdt:P50 ?author ;
              wdt:P921/wdt:P279* target: .
      }
    }
    UNION
    {
      SELECT (1 AS ?score_) ?author WHERE {
        ?cited_work wdt:P50 ?author .
        ?citing_work wdt:P2860 ?cited_work .
        ?citing_work wdt:P921/wdt:P279* target: .
      }
    }
  }
  GROUP BY ?author
  ORDER BY DESC(?score)
  LIMIT 200
} AS %results 
WHERE {
  INCLUDE %results
  SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en,da,de,es,jp,no,ru,sv,zh". }
}
ORDER BY DESC(?score)
LIMIT 200`,
"#author-scores-graph-iframe", "topic_author-scores-graph.sparql");
// organization-map iframe
sparqlToIframe(`# tool: scholia
#defaultView:Map

PREFIX target: <http://www.wikidata.org/entity/Q79932>

SELECT ?organization ?organizationLabel ?geo ?count ?layer
WITH {
  SELECT DISTINCT ?work WHERE {
  # Works on the topic
    ?work wdt:P921 / (wdt:P361+ | wdt:P1269+ | (wdt:P31* / wdt:P279*) ) target: .
  }
  LIMIT 20000
} AS %works
WITH {
  SELECT DISTINCT ?organization ?geo (COUNT(DISTINCT ?work) AS ?count) WHERE {
    INCLUDE %works
    # Authors who have published works on the topic
    ?work wdt:P50 ?author . 
    ?author ( wdt:P108 | wdt:P463 | wdt:P1416 ) / wdt:P361* ?organization . 
    # Use the headquarters location by default but keep the coordinate location as a fallback
    OPTIONAL{?organization p:P159/pq:P625 ?hq_geo}
    OPTIONAL{?organization wdt:P625 ?coord_geo}
    BIND(IF(BOUND(?hq_geo), ?hq_geo, ?coord_geo) AS ?geo) .
    FILTER(BOUND(?geo)) .
  }
  GROUP BY ?organization ?geo
  ORDER BY DESC (?count)
  LIMIT 2000
} AS %organizations
WHERE {
  INCLUDE %organizations
  BIND(IF( (?count < 1), "No results", IF((?count < 2), "1 result", IF((?count < 11), "1 < results ≤ 10", IF((?count < 101), "10 < results ≤ 100", IF((?count < 1001), "100 < results ≤ 1000", IF((?count < 10001), "1000 < results ≤ 10000", "10000 or more results") ) ) ) )) AS ?layer )
  SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }        
 }
ORDER BY DESC (?count)`,
"#organization-map-iframe", "topic_organization-map.sparql");
// country-citation-graph iframe
sparqlToIframe(`# tool: scholia
PREFIX target: <http://www.wikidata.org/entity/Q79932> 

#defaultView:Graph
SELECT DISTINCT ?citing_country ?citing_countryLabel ?citing_flag ?cited_country ?cited_countryLabel ?cited_flag
WITH {
  SELECT DISTINCT ?cited_country ?citing_country (COUNT(?citing_country) AS ?count)
                                  WHERE {
    ?citing_work wdt:P50 ?citing_author . 
    ?citing_work wdt:P921 target: .
    ?cited_work wdt:P921 target: .
    ?citing_work wdt:P2860 ?cited_work . 
    ?cited_work wdt:P50 ?cited_author .  
    FILTER (?citing_work != ?cited_work)
    FILTER NOT EXISTS {
      ?citing_work wdt:P50 ?author .
      ?citing_work wdt:P2860 ?cited_work .
      ?cited_work  wdt:P50 ?author .
    }
    ?citing_author (wdt:P108|wdt:P1416) ?citing_organization . 
    ?cited_author (wdt:P108|wdt:P1416) ?cited_organization . 
    ?cited_organization wdt:P17 ?cited_country.
    ?citing_organization wdt:P17 ?citing_country.
    FILTER (?citing_country != ?cited_country)
  }
  GROUP BY ?cited_country ?citing_country
  ORDER BY DESC(?count)
  LIMIT 42 # Adjust number of connections to display
} AS %results
WHERE {
  INCLUDE %results
  ?cited_country wdt:P41 ?cited_flag . 
  ?citing_country wdt:P41 ?citing_flag . 
 SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }        
 }`,
"#country-citation-graph-iframe", "topic_country-citation-graph.sparql");

 });

</script>


  </body>
</html>
 contentType 9 text/html url 46 https://scholia.toolforge.org:443/topic/Q79932 responseCode 3 200 