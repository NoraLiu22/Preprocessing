osdqdsqchaemocieesjammegeaggkscsqefaisjq length 5 43871 page 43871 <!DOCTYPE html>

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />

    <title>Authentication and Access Controls &#8212; Cordra  documentation</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/alabaster.css" />
    <link rel="stylesheet" type="text/css" href="../_static/minimal-fixes.css" />
    <script data-url_root="../" id="documentation_options" src="../_static/documentation_options.js"></script>
    <script src="../_static/doctools.js"></script>
    <script src="../_static/sphinx_highlight.js"></script>
    <link rel="index" title="Index" href="../genindex.html" />
    <link rel="search" title="Search" href="../search.html" />
    <link rel="next" title="Lifecycle Hooks" href="javascript-lifecycle-hooks.html" />
    <link rel="prev" title="Payloads" href="payloads.html" />
    <link rel="shortcut icon" href="../_static/img/favicon.ico" type="image/x-icon">
    <link href='https://fonts.googleapis.com/css?family=Montserrat:400,700%7COpen+Sans:300,400,700,800' rel='stylesheet' />
    <link href='https://fonts.googleapis.com/css?family=Rasa:400,700%7COpen+Sans:300,400,700,800' rel='stylesheet' />
    <link rel="stylesheet" href="../_static/libs/font-awesome/css/font-awesome.min.css"></link>
    <link rel="stylesheet" href="../_static/libs/bootstrap/dist/css/bootstrap.min.css"></link>
    <link rel="stylesheet" href="../_static/icons/nucleo.css"></link>
    <link rel="stylesheet" href="../_static/libs/animate.css/animate.min.css"></link>
    <link rel="stylesheet" href="../_static/css/bootstrap.min.css"></link>
    <link rel="stylesheet" href="../_static/css/blog.css"></link>
    <link rel="stylesheet" href="../_static/css/buttons.css"></link>
    <link rel="stylesheet" href="../_static/css/colors.css"></link>
    <link rel="stylesheet" href="../_static/css/footers.css"></link>
    <link rel="stylesheet" href="../_static/css/widgets.css"></link>
    <link rel="stylesheet" href="../_static/css/nav.css"></link>
    <link rel="stylesheet" href="../_static/css/preloader.css"></link>
    <link rel="stylesheet" href="../_static/css/custom.css"></link>
    <link rel="stylesheet" href="../_static/css/ui.css"></link>

  </head><body>
<!-- BEGIN LATERAL NAVIGATION -->
<aside id="aside-nav">
    <div id="main-aside-navigation">
        <div class="main-nav-wrapper">
            <div class="close-aside-nav">
                <i class="nc-icon-outline ui-1_simple-remove"></i>
            </div>
            <div id="aside-logo">
                    <a href="/index.html" data-logo-light="../_static/img/cordra-light.png" data-logo-dark="../_static/img/cordra-primary-blue.png">
                    <img width="170" height="166" src="../_static/img/cordra-primary-blue.png" alt="logo">
                </a>
            </div>
            <nav id="main-aside-menu">
                <ul>
                    <li class="submenu">
                        <a href="/cordra.html">What's Cordra?</a>
                    </li>
                    <li class="submenu">
                        <a href="/getstarted.html">Get Started</a>
                    </li>
                    <li class="submenu">
                        <a href="/download.html">Download</a>
                    </li>
                    <li class="submenu">
                        <a href="/documentation/introduction/introduction.html">Developer Resources</a>
                    </li>
                    <li class="submenu">
                        <a href="/standards.html">Standards</a>
                    </li>
                    <li class="submenu">
                        <a href="../search.html">Search</a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</aside>
<!-- END LATERAL NAVIGATION -->

<!-- BEGIN MAIN NAVIGATION -->
<header id="header">
    <div id="main-navigation">
        <div class="main-nav-wrapper">
            <div class="container-fluid">
                <div class="nav-left">
                    <div id="logo">
                        <a href="/index.html" data-logo-light="../_static/img/cordra-light.png" data-logo-dark="../_static/img/cordra-primary-blue.png">
                        <img width="145" height="36" src="../_static/img/cordra-primary-blue.png" alt="logo">
                        </a>
                    </div>
                </div>
                <div class="nav-right">
                    <nav id="main-menu">
                        <ul>
                            <li class="mega-menu menu-layouts">
                                <a href="/cordra.html">What's Cordra?</a>
                            </li>
                            <li class="mega-menu menu-layouts">
                                <a href="/getstarted.html">Get Started</a>
                            </li>
                            <li>
                                <a href="/download.html">Download</a>
                            </li>
                            <li class="mega-menu">
                                <a href="/documentation/introduction/introduction.html">Developer Resources</a>
                            </li>
                            <li class="mega-menu">
                                <a href="/standards.html">Standards</a>
                            </li>
                            <li class="mega-menu">
                                <a href="../search.html">Search</a>
                            </li>
                        </ul>
                    </nav>
                    <ul class="nav-tools">
                        <li class="mobile-menu-btn">
                            <button class="toggle-menu" data-toggle="mobile-menu" data-effect="hover">
                                <span class="menu-label label-left">Menu</span>
                                <i class="nc-icon-outline ui-2_menu-35"></i>
                            </button>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</header>
<!-- END MAIN NAVIGATION -->


  <div class="document">
    
      <div class="sphinxsidebar" role="navigation" aria-label="main navigation">
        <div class="sphinxsidebarwrapper">
<div id="searchbox" style="display: none" role="search">
  <h3 id="searchlabel">Quick search</h3>
    <div class="searchformwrapper">
    <form class="search" action="../search.html" method="get">
      <input type="text" name="q" aria-labelledby="searchlabel" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false"/>
      <input type="submit" value="Go" />
    </form>
    </div>
</div>
<script>document.getElementById('searchbox').style.display = "block"</script><h3>Navigation</h3>
<ul class="current">
<li class="toctree-l1"><a class="reference external" href="https://hdl.handle.net/20.1000/129">Developer Resources (in PDF)</a></li>
<li class="toctree-l1"><a class="reference internal" href="../introduction/index.html">Cordra Software</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../introduction/introduction.html">Introduction to Cordra</a></li>
<li class="toctree-l2"><a class="reference internal" href="../introduction/release-notes.html">Release Notes</a></li>
<li class="toctree-l2"><a class="reference internal" href="../introduction/system-requirements.html">System Requirements</a></li>
</ul>
</li>
<li class="toctree-l1 current"><a class="reference internal" href="index.html">Application Design</a><ul class="current">
<li class="toctree-l2"><a class="reference internal" href="introduction.html">Introduction</a></li>
<li class="toctree-l2"><a class="reference internal" href="identifiers.html">Identifiers</a></li>
<li class="toctree-l2"><a class="reference internal" href="schemas.html">Schemas/Types</a></li>
<li class="toctree-l2"><a class="reference internal" href="design-object.html">Design Object</a></li>
<li class="toctree-l2"><a class="reference internal" href="payloads.html">Payloads</a></li>
<li class="toctree-l2 current"><a class="current reference internal" href="#">Authentication and Access Controls</a></li>
<li class="toctree-l2"><a class="reference internal" href="javascript-lifecycle-hooks.html">Lifecycle Hooks</a></li>
<li class="toctree-l2"><a class="reference internal" href="type-methods.html">Type Methods</a></li>
<li class="toctree-l2"><a class="reference internal" href="java-hooks-and-methods.html">Java Hooks and Methods</a></li>
<li class="toctree-l2"><a class="reference internal" href="handle-integration.html">Handle Integration</a></li>
<li class="toctree-l2"><a class="reference internal" href="object-versioning.html">Digital Object Versioning</a></li>
<li class="toctree-l2"><a class="reference internal" href="object-hashing.html">Digital Object Hashing</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../api/index.html">APIs</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../api/introduction.html">Introduction</a></li>
<li class="toctree-l2"><a class="reference internal" href="../api/doip.html">DOIP and Examples</a></li>
<li class="toctree-l2"><a class="reference internal" href="../api/doip-api-for-http-clients.html">DOIP API for HTTP Clients</a></li>
<li class="toctree-l2"><a class="reference internal" href="../api/rest-api.html">HTTP REST API and Examples</a></li>
<li class="toctree-l2"><a class="reference internal" href="../api/search.html">Query Syntax</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../client/index.html">Clients</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../client/introduction.html">Introduction</a></li>
<li class="toctree-l2"><a class="reference internal" href="../client/rest-java.html">REST - Java</a></li>
<li class="toctree-l2"><a class="reference internal" href="../client/javascript.html">REST - JavaScript</a></li>
<li class="toctree-l2"><a class="reference internal" href="../client/doip-java.html">DOIP - Java</a></li>
<li class="toctree-l2"><a class="reference internal" href="../client/third-party.html">Third Party Clients</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../configuration/index.html">Configuration</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../configuration/introduction.html">Introduction</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/single-instance-deployment.html">Deploying Single-Instance Cordra</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/single-instance-production.html">Production Single Instance Deployment</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/distributed-deployment.html">Deploying Cordra as a Distributed System</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/reindexing.html">Reindexing</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/logs-management.html">Managing Cordra Logs</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/storage-backends.html">Configuring Storage Backend</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/indexing-backends.html">Configuring Indexing Backend</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/sessions-manager.html">Distributed Sessions Manager</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/user-management.html">Managing Users and Groups</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/admin-user-interface.html">Administrative UI</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/enabling-tls.html">Enabling TLS</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/https.html">Configuring HTTPS Keys</a></li>
<li class="toctree-l2"><a class="reference internal" href="../configuration/migration.html">Migration across Cordra Environments</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../extensions/index.html">Extensions and Applications</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../extensions/calling-java-from-javascript.html">Calling Java from JavaScript</a></li>
<li class="toctree-l2"><a class="reference internal" href="../extensions/document-repository.html">Document Repository</a></li>
<li class="toctree-l2"><a class="reference internal" href="../extensions/medical-records-application.html">Medical Records Application</a></li>
<li class="toctree-l2"><a class="reference internal" href="../extensions/person-registry.html">Person Registry</a></li>
<li class="toctree-l2"><a class="reference internal" href="../extensions/user-registration.html">User Registration</a></li>
<li class="toctree-l2"><a class="reference internal" href="../extensions/object-linking.html">Digital Object Linking</a></li>
<li class="toctree-l2"><a class="reference internal" href="../extensions/oai-pmh.html">OAI-PMH in Cordra</a></li>
<li class="toctree-l2"><a class="reference internal" href="../extensions/sending-emails.html">Sending Emails</a></li>
<li class="toctree-l2"><a class="reference internal" href="../extensions/external-authentication-provider.html">External Authentication Provider</a></li>
<li class="toctree-l2"><a class="reference internal" href="../extensions/collab-prototype.html">Collab Prototype Software</a></li>
<li class="toctree-l2"><a class="reference internal" href="../extensions/neo4j-as-an-additional-index.html">Neo4j as an Additional Index</a></li>
<li class="toctree-l2"><a class="reference internal" href="../extensions/partial-replication-aggregation.html">Partial Replication/Aggregation</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../tools/index.html">Tools</a><ul>
<li class="toctree-l2"><a class="reference internal" href="../tools/import-export.html">Import and Export Tools</a></li>
</ul>
</li>
</ul>


        </div>
      </div>
      <div class="documentwrapper">
        <div class="bodywrapper">
          

          <div class="body" role="main">
            
  <section id="authentication-and-access-controls">
<span id="aa"></span><h1>Authentication and Access Controls<a class="headerlink" href="#authentication-and-access-controls" title="Permalink to this heading">¶</a></h1>
<p>The Cordra software has a built-in access control framework. Each object may have an Access Control List (ACL)
listing users and groups permitted to read and/or write the object. Additional ACLs configured in different places
provide defaults and specify which users and groups may create objects of that type. Both users and groups are
represented as objects, with a group being a collection of user object identifiers. Also, users and groups are
not specific <code class="docutils literal notranslate"><span class="pre">types</span></code> in the system, but rather decorations around other types of objects that make those objects
behave like users and groups for purposes of ACLs. The rest of the documentation may refer to objects as user objects
and group objects, but those cases imply this nuance.</p>
<p>Cordra comes with pre-defined user and group objects, but it is possible to modify those or create your own.
For more information, see <a class="reference internal" href="../configuration/user-management.html#usermanagement"><span class="std std-ref">Managing Users and Groups</span></a>.</p>
<p>See <a class="reference internal" href="../api/rest-api.html#as-user"><span class="std std-ref">As-User</span></a> for authenticating as one user but performing actions on behalf of another user.
See <a class="reference internal" href="javascript-lifecycle-hooks.html#authenticate"><span class="std std-ref">Authenticate Hook</span></a> for the lifecycle hook allowing customization of authentication.</p>
<section id="authentication">
<h2>Authentication<a class="headerlink" href="#authentication" title="Permalink to this heading">¶</a></h2>
<p>Users can authenticate using passwords or public/private key pairs over the REST API or DOIP.
In the REST API, users can authenticate using HTTP Basic Auth for passwords and
HTTP Bearer JWT token for keys. An access token API is also available in REST. See <a class="reference internal" href="../api/rest-api.html#tokenapi"><span class="std std-ref">Access Token API</span></a> for more details.</p>
<p>The system enforces uniqueness of usernames for user objects. Since these objects are like any other object
in the Cordra system, the properties associated with user objects can be changed according to the needs of any
particular administrative environment; for instance, users can be associated with email addresses or phone numbers.</p>
<p>Administrators, associated with the special username <code class="docutils literal notranslate"><span class="pre">admin</span></code> can authenticate using passwords and/or keys.
If authenticating over keys, the public key for the admin user should be managed in the Design object under
a property called <code class="docutils literal notranslate"><span class="pre">adminPublicKey</span></code>.</p>
<div class="admonition warning">
<p class="admonition-title">Warning</p>
<p>As of Cordra v2.0.0, all authentication requests must be made over
a secure HTTPS connection. To allow authentication over insecure channels, you can add
“allowInsecureAuthentication”:true to the Cordra design object.</p>
</div>
<p>See <a class="reference internal" href="javascript-lifecycle-hooks.html#authenticate"><span class="std std-ref">Authenticate Hook</span></a> for the lifecycle hook allowing customization of authentication.</p>
<section id="authentication-via-passwords">
<h3>Authentication via Passwords<a class="headerlink" href="#authentication-via-passwords" title="Permalink to this heading">¶</a></h3>
<p>User passwords are managed as part of the user objects. However, passwords are hashed and salted and
stored separately from the rest of the information managed by the object. As such, the value of the
password property within the JSON data is always the empty string when the object is resolved.</p>
<p>Password authentication (such as HTTP Basic Auth, or via <a class="reference internal" href="../api/rest-api.html#tokenapi"><span class="std std-ref">Access Token API</span></a>) allows specifying either a username, or
the Cordra object id of the user object. (If the two possible interpretations
indicate two different Cordra objects, the Cordra object id will be used.)</p>
<p>Cordra matches the password supplied by the user against the stored password, as part of user authentication.</p>
</section>
<section id="authentication-via-keys">
<span id="auth-with-keys"></span><h3>Authentication via Keys<a class="headerlink" href="#authentication-via-keys" title="Permalink to this heading">¶</a></h3>
<p>Cordra offers a more secure way to authenticate users. Users can also authenticate using public/private key pairs
where the public keys are stored in either Cordra objects or Handle records.</p>
<p>Specifically, the public key may be stored as a JSON Web Key (JWK) as part of a user object or may be stored in an
HS_PUBKEY value on a Handle record. In order to store a public key in a Cordra object that can be used for authentication,
the schema for the type of object containing the public key needs the Cordra-specific schema attribute
“auth”: “publicKey”. When authenticating using a public key on a Cordra object, either the username or the
Cordra object id may be specified as the issuer in the Authorization header. (If the two possible interpretations
indicate two different Cordra objects, the issuer will be interpreted as a Cordra object id.)
When authenticating with an
HS_PUBKEY in a handle record, the handle of the record should be used as the issuer in the Authorization header.
See below for how to specify the issuer syntactically.</p>
<p>To authenticate, users should send an Authorization header where the value of the header is
Bearer followed by a serialized JSON Web Signature:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>Authorization: Bearer eyJhbGciOiJSUzI1NiJ9.eyJ...
</pre></div>
</div>
<p>The JWS must be a self-issued JWT with at least an <code class="docutils literal notranslate"><span class="pre">&quot;iss&quot;</span></code> claim (the
identity that is authenticating), and an <code class="docutils literal notranslate"><span class="pre">&quot;exp&quot;</span></code> claim at most one hour in the future (a minimum of a few minutes
to avoid clock skew issues would generally suffice).  If the <code class="docutils literal notranslate"><span class="pre">&quot;sub&quot;</span></code> claim is present it must be identical with the
<code class="docutils literal notranslate"><span class="pre">&quot;iss&quot;</span></code> claim.</p>
<p>The JWT can use other safeguards to protect replay attacks. For example, the JWT can optionally include a <code class="docutils literal notranslate"><span class="pre">&quot;jti&quot;</span></code>
claim by the client, so Cordra will know to prevent reuse of the same JWT for subsequent requests.
(Note: Cordra instances deployed for a distributed setup do not currently support the jti claim.)</p>
<p>The JWT can also optionally have an <code class="docutils literal notranslate"><span class="pre">&quot;aud&quot;</span></code> claim, which contains an identifier for the Cordra instance, to prevent
the reuse of the authentication claim at other Cordra instances. Cordra can be configured with identities allowed
in the <code class="docutils literal notranslate"><span class="pre">&quot;aud&quot;</span></code> claim in the Design object’s <code class="docutils literal notranslate"><span class="pre">&quot;ids&quot;</span></code> property. This can be added in the Cordra UI, or set on
startup by including a <code class="docutils literal notranslate"><span class="pre">repoInit.json</span></code> file in the Cordra data directory with the following contents:</p>
<div class="highlight-js notranslate"><div class="highlight"><pre><span></span><span class="p">{</span>
<span class="w">  </span><span class="s2">&quot;design&quot;</span><span class="o">:</span><span class="w"> </span><span class="p">{</span>
<span class="w">    </span><span class="s2">&quot;ids&quot;</span><span class="o">:</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="s2">&quot;20.500.123/cordra&quot;</span><span class="w"> </span><span class="p">]</span>
<span class="w">  </span><span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>For more information on editing the Design object, see <a class="reference internal" href="design-object.html#design-object"><span class="std std-ref">Design Object</span></a>.</p>
<p>In general, the <code class="docutils literal notranslate"><span class="pre">&quot;exp&quot;</span></code>, <code class="docutils literal notranslate"><span class="pre">&quot;jti&quot;</span></code>, and <code class="docutils literal notranslate"><span class="pre">&quot;aud&quot;</span></code> restrictions are to prevent reuse of the authentication claims,
but as long as the suggested authentication claim is sent over TLS, it is already more secure than sending a password
because no secrets are exchanged in this Bearer method compared to the passwords case, but rather the possession
of secrets is claimed with expiration time to bound the use of those claims indefinitely.</p>
<p>Example JWT for Bearer authentication:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>{
    &quot;iss&quot;: &quot;20.500.123/admin&quot;,
    &quot;sub&quot;: &quot;20.500.123/admin&quot;,
    &quot;jti&quot;: &quot;5d21776da77adb89528d&quot;,
    &quot;aud&quot;: &quot;20.500.123/cordra&quot;,
    &quot;exp&quot;: 1533139594
}
</pre></div>
</div>
<p>For further information about the claims used in the JWT for Cordra keypair authentication, see
<a class="reference external" href="https://tools.ietf.org/html/rfc7519">RFC 7519</a>.</p>
</section>
</section>
<section id="authorization">
<span id="id1"></span><h2>Authorization<a class="headerlink" href="#authorization" title="Permalink to this heading">¶</a></h2>
<p>Authorization is enabled primarily using access control lists (ACLs) as defined below. In some situations,
contextual access to objects where information beyond the user or group id should be considered for providing object
access. Please refer to <a class="reference internal" href="type-methods.html#type-methods"><span class="std std-ref">Type Methods</span></a> for leveraging lifecycle hooks to handle those special authorization situations.
Furthermore, ACLs are distinguished in terms of read operations and write operations. For enabling access controls at
a finer operation granularity than reads or writes, <a class="reference internal" href="type-methods.html#type-methods"><span class="std std-ref">Type Methods</span></a> should be leveraged.</p>
<p>Type level ACLs can be specified in two places: On the Type objects directly in the <code class="docutils literal notranslate"><span class="pre">authConfig</span></code> property or on the
design authConfig object.</p>
<p>For ACL-based authorization, a single inheritance structure is followed: ACLs specified at the <em>object</em> level overrides
the ACLs specified at the <em>type</em> level directly on the Type objects, which override type level ACLs on the design object,
which override ACLs specified at the <em>system</em> level. Overrides are complete replacements, not merges. Priority of ACL
overrides may be represented graphically as follows:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>Instance ACLs -&gt; Type object ACLs -&gt; design object type level ACLs -&gt; system level ACLs
</pre></div>
</div>
<p>Additionally in place of specifying a JSON structure in the <code class="docutils literal notranslate"><span class="pre">authConfig</span></code> property directly on a Type object you can
implement a JavaScript hook named <code class="docutils literal notranslate"><span class="pre">getAuthConfig</span></code> in the JavaScript for that type.</p>
<p>The design object (of type CordraDesign) and Type objects (of type Schema) do not have separate Type objects.
In addition to the global design authConfig object, ACLs for these types can be defined under a property
“builtInTypes” of the design object, specifically “builtInTypes.CordraDesign.authConfig” and “builtInTypes.Schema.authConfig”.
See <a class="reference internal" href="design-object.html#design-object"><span class="std std-ref">Design Object</span></a>.</p>
<p>Both user object identifiers and group object identifiers play a role here.
For more information on creating users and groups using the Cordra UI, see <a class="reference internal" href="../configuration/user-management.html#usermanagement"><span class="std std-ref">Managing Users and Groups</span></a>.</p>
<p>Authorization is controlled by access control lists. Each ACL is an array of strings. Those strings could be the
handle identifiers of specific users or specific groups or they could be one of a set of ACL keywords below. If the ACL is
left blank, then only admin can perform the operation. In the context of ACL-based authorizations, operations are
categorized as only read and write.</p>
<table class="docutils align-default">
<thead>
<tr class="row-odd"><th class="head"><p>ACL Keyword</p></th>
<th class="head"><p>Description</p></th>
</tr>
</thead>
<tbody>
<tr class="row-even"><td><p>public</p></td>
<td><p>Anyone can perform the operation.
They do not need to be
authenticated.</p></td>
</tr>
<tr class="row-odd"><td><p>authenticated</p></td>
<td><p>Any authenticated user can
perform the operation. This only
applies to users with user objects
in Cordra, not to arbitrary
handle-identified users who
authenticate using public/private
keypair. The handle-identified
users should be explicitly given
access outside of the keywords
described here.</p></td>
</tr>
<tr class="row-even"><td><p>creator</p></td>
<td><p>Only the creator of the object
can perform the operation.</p></td>
</tr>
<tr class="row-odd"><td><p>self</p></td>
<td><p>Only a user with the same id as
the object of interest can perform the
operation. Typically used on
defaultAclWrite setting on user objects.</p></td>
</tr>
</tbody>
</table>
<p>Each object has an ACL for readers and an ACL for writers. Readers can also view the ACLs; writers can also
modify the ACLs.</p>
<p>Example:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>{
    &quot;readers&quot;: [
        &quot;20.5000.215/73675debcd8a436be48e&quot;
    ],
    &quot;writers&quot;: [
        &quot;20.5000.215/73675debcd8a436be48e&quot;
    ]
}
</pre></div>
</div>
<p>In addition to being able to specify an explicit access control list on instances of individual objects, each type
can have default ACLs for objects of that type, as well as an ACL indicating who can create new objects of that
type. The type-level read and write ACLs apply only to objects which do not specify their own object-level ACLs.
Finally, the software can be configured with default ACLs which apply across all types which do not specify their
own ACLs.</p>
<p>The administrative configuration APIs are authorized only for the special user “admin”. See <a class="reference internal" href="../api/rest-api.html#adminapi"><span class="std std-ref">Administrative APIs</span></a>.</p>
<p>Cordra allows access to the ACLs (represented as JSON) of an object, with two properties <code class="docutils literal notranslate"><span class="pre">readers</span></code> and <code class="docutils literal notranslate"><span class="pre">writers</span></code>,
each an array of strings. The type-level and default ACLs are configured by specifying a JSON
structure as well.</p>
<p>Example:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>{
    &quot;schemaAcls&quot;: {
        &quot;User&quot;: {
            &quot;defaultAclRead&quot;: [ &quot;public&quot; ],
            &quot;defaultAclWrite&quot;: [ &quot;self&quot; ],
            &quot;aclCreate&quot;: []
        },
        &quot;Document&quot;: {
            &quot;defaultAclRead&quot;: [ &quot;public&quot; ],
            &quot;defaultAclWrite&quot;: [ &quot;creator&quot; ],
            &quot;aclCreate&quot;: [ &quot;public&quot; ]
        }
    },
    &quot;defaultAcls&quot;: {
        &quot;defaultAclRead&quot;: [ &quot;public&quot; ],
        &quot;defaultAclWrite&quot;: [ &quot;creator&quot; ],
        &quot;aclCreate&quot;: []
    }
}
</pre></div>
</div>
<p><strong>NOTE:</strong> The JSON representation of ACL has changed in Cordra v2. In v1, they were called <code class="docutils literal notranslate"><span class="pre">read</span></code> and <code class="docutils literal notranslate"><span class="pre">write</span></code>. In
v2, the properties are called <code class="docutils literal notranslate"><span class="pre">readers</span></code> and <code class="docutils literal notranslate"><span class="pre">writers</span></code> respectively.</p>
<section id="authorization-for-type-methods">
<span id="authorizationschemamethods"></span><h3>Authorization for Type Methods<a class="headerlink" href="#authorization-for-type-methods" title="Permalink to this heading">¶</a></h3>
<p>Type methods are Cordra’s way of enabling custom operations to be added to the system. And these operations or methods
can be enabled in the context of a given type; hence the name <em>Type methods</em>. See <a class="reference internal" href="type-methods.html#type-methods"><span class="std std-ref">Type Methods</span></a> for more details.</p>
<p>In addition to restricting who can read or write to an object, ACLs can also be defined who can execute these methods.
ACLs for calling Type methods can be defined on the <code class="docutils literal notranslate"><span class="pre">&quot;schemaAcls&quot;</span></code> or <code class="docutils literal notranslate"><span class="pre">&quot;defaultAcls&quot;</span></code> of the global authorization
configuration. The property <code class="docutils literal notranslate"><span class="pre">&quot;aclMethods&quot;</span></code> determines the authorization. If <code class="docutils literal notranslate"><span class="pre">&quot;aclMethods&quot;</span></code> is missing on the
<code class="docutils literal notranslate"><span class="pre">&quot;schemaAcls&quot;</span></code> entry for the type in question, or on the <code class="docutils literal notranslate"><span class="pre">&quot;defaultAcls&quot;</span></code> if there is no such entry,
then Cordra assumes that all authorized writers of the instance object
(for an instance method) or the schema/type object (for a static method) are authorized to call the method.</p>
<p>The property <code class="docutils literal notranslate"><span class="pre">&quot;aclMethods&quot;</span></code> is an object with properties <code class="docutils literal notranslate"><span class="pre">&quot;instance&quot;</span></code> and <code class="docutils literal notranslate"><span class="pre">&quot;static&quot;</span></code>, each a map from method name
to ACL, as well as a property <code class="docutils literal notranslate"><span class="pre">&quot;default&quot;</span></code>, an object with properties <code class="docutils literal notranslate"><span class="pre">&quot;instance&quot;</span></code> and <code class="docutils literal notranslate"><span class="pre">&quot;static&quot;</span></code>, each an ACL.
The default method ACLs apply to methods which are not named explicitly under <code class="docutils literal notranslate"><span class="pre">&quot;instance&quot;</span></code> or <code class="docutils literal notranslate"><span class="pre">&quot;static&quot;</span></code>.</p>
<p>Method ACLs can use the additional keywords <code class="docutils literal notranslate"><span class="pre">&quot;readers&quot;</span></code> and <code class="docutils literal notranslate"><span class="pre">&quot;writers&quot;</span></code>, which authorize respectively all the
authorized readers or writers of the instance object (for an instance method) or schema object (for a static method).
In the absence of any <code class="docutils literal notranslate"><span class="pre">&quot;aclMethods&quot;</span></code> entry, all methods are considered to have ACL <code class="docutils literal notranslate"><span class="pre">[</span> <span class="pre">&quot;writers&quot;</span> <span class="pre">]</span></code>.  If
<code class="docutils literal notranslate"><span class="pre">&quot;aclMethods&quot;</span></code> is defined but a method is missing and no default is defined, it is considered to have ACL <code class="docutils literal notranslate"><span class="pre">[</span> <span class="pre">]</span></code>
(admin access only).</p>
<p>Example:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>{
    &quot;schemaAcls&quot;: {
        &quot;User&quot;: {
            &quot;defaultAclRead&quot;: [ &quot;public&quot; ],
            &quot;defaultAclWrite&quot;: [ &quot;self&quot; ],
            &quot;aclCreate&quot;: []
        },
        &quot;Document&quot;: {
            &quot;defaultAclRead&quot;: [ &quot;public&quot; ],
            &quot;defaultAclWrite&quot;: [ &quot;creator&quot; ],
            &quot;aclCreate&quot;: [ &quot;public&quot; ],
            &quot;aclMethods&quot;: {
                &quot;static&quot;: {
                    &quot;exampleStaticMethod&quot;: [ &quot;public&quot; ]
                },
                &quot;instance&quot;: {
                    &quot;exampleInstanceMethod&quot;: [ &quot;authenticated&quot; ]
                },
                &quot;default&quot;: {
                    &quot;instance&quot;: [ &quot;writers&quot; ]
                }
            }
        }
    },
    &quot;defaultAcls&quot;: {
        &quot;defaultAclRead&quot;: [ &quot;public&quot; ],
        &quot;defaultAclWrite&quot;: [ &quot;creator&quot; ],
        &quot;aclCreate&quot;: []
    }
}
</pre></div>
</div>
<p>In this example, static method <code class="docutils literal notranslate"><span class="pre">&quot;exampleStaticMethod&quot;</span></code> on type Document can be called by anyone, even anonymously;
instance method <code class="docutils literal notranslate"><span class="pre">&quot;exampleInstanceMethod&quot;</span></code> on objects of type Document can be called by any authenticated user. Other
instance methods on objects of type Document can only be called by authorized writers of the object. Since the
<code class="docutils literal notranslate"><span class="pre">&quot;static&quot;</span></code> property on <code class="docutils literal notranslate"><span class="pre">&quot;default&quot;</span></code> is missing, other static methods can only be called by admin. On types other than
Document, all methods can be called by authorized writers.</p>
<p>An ACL for a specific instance of an object can define the callers of a method. Specifying such a methods ACL on an
of an object overrides type-level method ACLs for the methods specified.  Other methods will still use
type-level method ACLs.</p>
<p>Example:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>{
    &quot;readers&quot;: [
        &quot;public&quot;
    ],
    &quot;writers&quot;: [
        &quot;20.5000.215/73675debcd8a436be48e&quot;
    ],
    &quot;methods&quot;: {
        &quot;exampleInstanceMethod&quot;: [
            &quot;20.5000.215/73675debcd8a436be48e&quot;
        ]
    }
}
</pre></div>
</div>
<p>If there is no <code class="docutils literal notranslate"><span class="pre">aclMethods</span></code> defined at the type level for an object writers are permitted to call any operation on an
object instance.</p>
<p>If there are <code class="docutils literal notranslate"><span class="pre">writers</span></code> defined at the instance level and there are callers for a method defined at the instance level
then the method callers are permitted to call the method even if they are not in the <code class="docutils literal notranslate"><span class="pre">writers</span></code> list.</p>
</section>
<section id="restricting-access-to-payloads">
<h3>Restricting Access to Payloads<a class="headerlink" href="#restricting-access-to-payloads" title="Permalink to this heading">¶</a></h3>
<p>The property <code class="docutils literal notranslate"><span class="pre">payloadReaders</span></code> can also be set on the instance ACLs. If <code class="docutils literal notranslate"><span class="pre">payloadReaders</span></code> is missing then any user who
is permitted to read or write to the object has implied permission to also read the payload. However if
<code class="docutils literal notranslate"><span class="pre">payloadReaders</span></code> is not missing then in order to read a payload a user must be in the <code class="docutils literal notranslate"><span class="pre">payloadReaders</span></code> list AND be
permitted to read or write to the object.</p>
<p>Example:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>{
    &quot;readers&quot;: [
        &quot;test/user2&quot;
    ],
    &quot;writers&quot;: [
        &quot;test/user1&quot;,
    ],
    &quot;payloadReaders&quot;: [
        &quot;test/user1&quot;
    ]
}
</pre></div>
</div>
<p>In the above example test/user1 and test/user2 can read the object, test/user1 can write to the object and only
test/user1 can read the bytes of the payload attached to the object.</p>
<p>It is also possible restrict access to payloads at the type level by setting the property <code class="docutils literal notranslate"><span class="pre">defaultAclPayloadRead</span></code>
as a sibling to the other type level ACLs.</p>
</section>
</section>
</section>


          </div>
          
        </div>
      </div>
    <div class="clearer"></div>
  </div>

<!-- BEGIN FOOTER -->
<footer id="footer">
    <div id="footer-main" class="container-large">
        <div class="row">
            <div class="col-lg-4 col-md-4 col-sm-4">
                <div class="widget widget-text">
                    <h3 class="widget-title">Who are we?</h3>
                    <!-- <img width="200" height="50" class="footer-logo" src="_static/img/logo/cordra-light.png" alt="logo"> -->
                    <p>CNRI is a not-for-profit organization formed in 1986 to undertake, foster, and promote research on information infrastructure in the public interest.</p>
                    <p><i class="nc-icon-outline ui-1_home-minimal"></i> Corporation for National Research Initiatives</p>
                    <p><i class="nc-icon-outline location_position-marker"></i> 1895 Preston White Drive, Suite 100, Reston, Virginia 20191, USA</p>
                </div>
            </div>
            <div class="col-lg-4 col-md-4 col-sm-4 hidden-xs-down">
                <div class="widget widget-links">
                    <div class="widget-title">
                        <h3 class="widget-title">Quick Links</h3>
                    </div>
                    <ul>
                        <li>
                            <a href="/cordra.html">What's Cordra</a>
                        </li>
                        <li>
                            <a href="/download.html">Download</a>
                        </li>
                        <li>
                            <a href="/documentation/introduction/introduction.html">Developer Resources</a>
                        </li>
                        <li>
                            <a href="/download.html#section-licenses">Licenses</a>
                        </li>
                        <li>
                            <a href="/privacypolicy.html">Privacy Policy</a>
                        </li>
                    </ul>
                </div>
            </div>
            <div class="col-lg-4 col-md-4 hidden-md-down">
                <div class="widget">
                    <h3 class="widget-title">Contact Us</h3>
                    <p>Drop us an
                        <span class="f-18 c-white w-700 font-handwriting">
                            <a href="#" onclick="document.getElementById('emailAddress').style.display = 'block'; return false;" class="c-white">email.</a>
                            <span id="emailAddress" style="display: none;" class="c-white text-sm w-100">support@cordra.org</span>
                        </span>
                    </p>
                    <p>Join us on <a href="https://hdl.handle.net/20.5000/cordra-slack" target="_blank"><img width="100px" height="100px" src="../_static/img/slack_white.png" alt="Slack" class="m-l--10" /></a><span
                            class="f-18 c-white w-700 font-handwriting m-l--10">.</span></p>
                </div>
            </div>
        </div>
    </div>
    <div id="footer-bottom">
        <div class="container-large">
            <div class="row">
                <div class="col-sm-12 t-center">
                    <p class="copyright">Copyright&copy; 2020. Corporation for National Resesarch Initiatives. Cordra&reg; is a trademark of Corporation for National Research Initiatives.</p>
                </div>
            </div>
        </div>
    </div>
</footer>
<!-- END FOOTER -->

  </body>
</html> contentType 9 text/html url 87 https://www.cordra.org:443/documentation/design/authentication-and-access-controls.html responseCode 3 200 