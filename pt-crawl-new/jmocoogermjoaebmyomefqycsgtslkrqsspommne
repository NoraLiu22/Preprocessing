jmocoogermjoaebmyomefqycsgtslkrqsspommne length 5 57171 page 57171 
<html>
<head>
<title>r12925 MediaWiki - Code Review archive</title>
<meta charset="utf-8">
<link rel="stylesheet" href="../ext.codereview.styles.css"/>
</head>
<body>
<h1>r12925 MediaWiki - Code Review archive</h1>
<div id="mw-content-text" class="mw-body-content"><form action="/wiki/Special:Code/MediaWiki/12925" method="post"><table class="mw-codereview-meta"><tr><td>Repository:</td><td><a href="https://www.mediawiki.org/wiki/Special:Code/MediaWiki" title="Special:Code/MediaWiki">MediaWiki</a></td></tr>
<tr><td>Revision:</td><td>&lt;&#160;<a href="./12924.html" title="Special:Code/MediaWiki/12924">r12924</a>‎ | <b>r12925</b> | <a href="./12926.html" title="Special:Code/MediaWiki/12926">r12926</a>&#160;&gt;</td></tr>
<tr><td>Date:</td><td>04:41, 1 February 2006</td></tr>
<tr><td>Author:</td><td><a href="https://www.mediawiki.org/wiki/Special:Code/MediaWiki/author/timstarling" title="Special:Code/MediaWiki/author/timstarling">timstarling</a></td></tr>
<tr><td>Status:</td><td>old</td></tr>
<tr><td>Tags:</td><td></td></tr>
<tr><td>Comment:</td><td><div class="mw-codereview-message">Various improvements to interwiki transclusion. Introduced {{raw:..}}, to force raw transclusion when subst: isn't in use. Referer header set in wfGetHTTP(), this could be for weak (honour-bound) detection of the external site, for statistics or license notices.</div></td></tr>
<tr><td>Modified paths:</td><td><div class='mw-codereview-paths mw-content-ltr'><ul>
<li><b>/trunk/phase3/RELEASE-NOTES</b> (modified) (<a href="https://www.mediawiki.org/w/index.php?title=Special:Code/MediaWiki&amp;path=%2Ftrunk%2Fphase3%2FRELEASE-NOTES" title="Special:Code/MediaWiki">history</a>)</li>
<li><b>/trunk/phase3/includes/HttpFunctions.php</b> (modified) (<a href="https://www.mediawiki.org/w/index.php?title=Special:Code/MediaWiki&amp;path=%2Ftrunk%2Fphase3%2Fincludes%2FHttpFunctions.php" title="Special:Code/MediaWiki">history</a>)</li>
<li><b>/trunk/phase3/includes/MagicWord.php</b> (modified) (<a href="https://www.mediawiki.org/w/index.php?title=Special:Code/MediaWiki&amp;path=%2Ftrunk%2Fphase3%2Fincludes%2FMagicWord.php" title="Special:Code/MediaWiki">history</a>)</li>
<li><b>/trunk/phase3/includes/Parser.php</b> (modified) (<a href="https://www.mediawiki.org/w/index.php?title=Special:Code/MediaWiki&amp;path=%2Ftrunk%2Fphase3%2Fincludes%2FParser.php" title="Special:Code/MediaWiki">history</a>)</li>
<li><b>/trunk/phase3/includes/Title.php</b> (modified) (<a href="https://www.mediawiki.org/w/index.php?title=Special:Code/MediaWiki&amp;path=%2Ftrunk%2Fphase3%2Fincludes%2FTitle.php" title="Special:Code/MediaWiki">history</a>)</li>
<li><b>/trunk/phase3/languages/Language.php</b> (modified) (<a href="https://www.mediawiki.org/w/index.php?title=Special:Code/MediaWiki&amp;path=%2Ftrunk%2Fphase3%2Flanguages%2FLanguage.php" title="Special:Code/MediaWiki">history</a>)</li>
</ul></div>
</td></tr>
</table>
<h2>Diff <small>[<a href="https://www.mediawiki.org/w/index.php?title=Special:Code/MediaWiki/12925&amp;action=purge" title="Special:Code/MediaWiki/12925">purge</a>]</small></h2><div class='mw-codereview-diff' id='mw-codereview-diff'><table class="mw-codereview-diff"><tr id="1" class="patchedfile"><td colspan="3">Index: trunk/phase3/includes/MagicWord.php</td></tr>



<tr id="5"><td class="linenumbers">—</td><td class="linenumbers">—</td><td class="chunkdelimiter"><span>@@ -69,6 +69,7 @@</span></td></tr>
<tr id="6"><td class="linenumbers">70</td><td class="linenumbers">70</td><td class="unchanged"><span> 	'MAG_UC',</span></td></tr>
<tr id="7"><td class="linenumbers">71</td><td class="linenumbers">71</td><td class="unchanged"><span> 	'MAG_FULLPAGENAME',</span></td></tr>
<tr id="8"><td class="linenumbers">72</td><td class="linenumbers">72</td><td class="unchanged"><span> 	'MAG_FULLPAGENAMEE',</span></td></tr>
<tr id="9"><td class="linenumbers"> </td><td class="linenumbers">73</td><td class="ins"><ins>+	'MAG_RAW',</ins></td></tr>
<tr id="10"><td class="linenumbers">73</td><td class="linenumbers">74</td><td class="unchanged"><span> );</span></td></tr>
<tr id="11"><td class="linenumbers">74</td><td class="linenumbers">75</td><td class="unchanged"><span> if ( ! defined( 'MEDIAWIKI_INSTALL' ) )</span></td></tr>
<tr id="12"><td class="linenumbers">75</td><td class="linenumbers">76</td><td class="unchanged"><span> 	wfRunHooks( 'MagicWordMagicWords', array( &amp;$magicWords ) );</span></td></tr>
<tr id="13" class="patchedfile"><td colspan="3">Index: trunk/phase3/includes/Title.php</td></tr>



<tr id="17"><td class="linenumbers">—</td><td class="linenumbers">—</td><td class="chunkdelimiter"><span>@@ -494,7 +494,7 @@</span></td></tr>
<tr id="18"><td class="linenumbers">495</td><td class="linenumbers">495</td><td class="unchanged"><span> 	function isTrans() {</span></td></tr>
<tr id="19"><td class="linenumbers">496</td><td class="linenumbers">496</td><td class="unchanged"><span> 		global $wgTitleInterwikiCache, $wgDBname;</span></td></tr>
<tr id="20"><td class="linenumbers">497</td><td class="linenumbers">497</td><td class="unchanged"><span> </span></td></tr>
<tr id="21"><td class="linenumbers">498</td><td class="linenumbers"> </td><td class="del"><del>-		if ($this->mInterwiki == '' || !$this->isLocal())</del></td></tr>
<tr id="22"><td class="linenumbers"> </td><td class="linenumbers">498</td><td class="ins"><ins>+		if ($this->mInterwiki == '')</ins></td></tr>
<tr id="23"><td class="linenumbers">499</td><td class="linenumbers">499</td><td class="unchanged"><span> 			return false;</span></td></tr>
<tr id="24"><td class="linenumbers">500</td><td class="linenumbers">500</td><td class="unchanged"><span> 		# Make sure key is loaded into cache</span></td></tr>
<tr id="25"><td class="linenumbers">501</td><td class="linenumbers">501</td><td class="unchanged"><span> 		$this->getInterwikiLink( $this->mInterwiki );</span></td></tr>
<tr id="26"><td class="linenumbers">—</td><td class="linenumbers">—</td><td class="chunkdelimiter"><span>@@ -752,6 +752,13 @@</span></td></tr>
<tr id="27"><td class="linenumbers">753</td><td class="linenumbers">753</td><td class="unchanged"><span> </span></td></tr>
<tr id="28"><td class="linenumbers">754</td><td class="linenumbers">754</td><td class="unchanged"><span> 		if ( $this->isExternal() ) {</span></td></tr>
<tr id="29"><td class="linenumbers">755</td><td class="linenumbers">755</td><td class="unchanged"><span> 			$url = $this->getFullURL();</span></td></tr>
<tr id="30"><td class="linenumbers"> </td><td class="linenumbers">756</td><td class="ins"><ins>+			if ( $query ) {</ins></td></tr>
<tr id="31"><td class="linenumbers"> </td><td class="linenumbers">757</td><td class="ins"><ins>+				// This is currently only used for edit section links in the </ins></td></tr>
<tr id="32"><td class="linenumbers"> </td><td class="linenumbers">758</td><td class="ins"><ins>+				// context of interwiki transclusion. In theory we should </ins></td></tr>
<tr id="33"><td class="linenumbers"> </td><td class="linenumbers">759</td><td class="ins"><ins>+				// append the query to the end of any existing query string,</ins></td></tr>
<tr id="34"><td class="linenumbers"> </td><td class="linenumbers">760</td><td class="ins"><ins>+				// but interwiki transclusion is already broken in that case.</ins></td></tr>
<tr id="35"><td class="linenumbers"> </td><td class="linenumbers">761</td><td class="ins"><ins>+				$url .= "?$query";</ins></td></tr>
<tr id="36"><td class="linenumbers"> </td><td class="linenumbers">762</td><td class="ins"><ins>+			}</ins></td></tr>
<tr id="37"><td class="linenumbers">756</td><td class="linenumbers">763</td><td class="unchanged"><span> 		} else {</span></td></tr>
<tr id="38"><td class="linenumbers">757</td><td class="linenumbers">764</td><td class="unchanged"><span> 			$dbkey = wfUrlencode( $this->getPrefixedDBkey() );</span></td></tr>
<tr id="39"><td class="linenumbers">758</td><td class="linenumbers">765</td><td class="unchanged"><span> 			if ( $query == '' ) {</span></td></tr>
<tr id="40"><td class="linenumbers">—</td><td class="linenumbers">—</td><td class="chunkdelimiter"><span>@@ -1344,6 +1351,13 @@</span></td></tr>
<tr id="41"><td class="linenumbers">1345</td><td class="linenumbers">1352</td><td class="unchanged"><span> 						# Do another namespace split...</span></td></tr>
<tr id="42"><td class="linenumbers">1346</td><td class="linenumbers">1353</td><td class="unchanged"><span> 						continue;</span></td></tr>
<tr id="43"><td class="linenumbers">1347</td><td class="linenumbers">1354</td><td class="unchanged"><span> 					}</span></td></tr>
<tr id="44"><td class="linenumbers"> </td><td class="linenumbers">1355</td><td class="ins"><ins>+</ins></td></tr>
<tr id="45"><td class="linenumbers"> </td><td class="linenumbers">1356</td><td class="ins"><ins>+					# If there's an initial colon after the interwiki, that also </ins></td></tr>
<tr id="46"><td class="linenumbers"> </td><td class="linenumbers">1357</td><td class="ins"><ins>+					# resets the default namespace</ins></td></tr>
<tr id="47"><td class="linenumbers"> </td><td class="linenumbers">1358</td><td class="ins"><ins>+					if ( $t !== '' &amp;&amp; $t[0] == ':' ) {</ins></td></tr>
<tr id="48"><td class="linenumbers"> </td><td class="linenumbers">1359</td><td class="ins"><ins>+						$this->mNamespace = NS_MAIN;</ins></td></tr>
<tr id="49"><td class="linenumbers"> </td><td class="linenumbers">1360</td><td class="ins"><ins>+						$t = substr( $t, 1 );</ins></td></tr>
<tr id="50"><td class="linenumbers"> </td><td class="linenumbers">1361</td><td class="ins"><ins>+					}</ins></td></tr>
<tr id="51"><td class="linenumbers">1348</td><td class="linenumbers">1362</td><td class="unchanged"><span> 				}</span></td></tr>
<tr id="52"><td class="linenumbers">1349</td><td class="linenumbers">1363</td><td class="unchanged"><span> 				# If there's no recognized interwiki or namespace,</span></td></tr>
<tr id="53"><td class="linenumbers">1350</td><td class="linenumbers">1364</td><td class="unchanged"><span> 				# then let the colon expression be part of the title.</span></td></tr>
<tr id="54" class="patchedfile"><td colspan="3">Index: trunk/phase3/includes/HttpFunctions.php</td></tr>



<tr id="58"><td class="linenumbers">—</td><td class="linenumbers">—</td><td class="chunkdelimiter"><span>@@ -9,7 +9,7 @@</span></td></tr>
<tr id="59"><td class="linenumbers">10</td><td class="linenumbers">10</td><td class="unchanged"><span>  * if $timeout is 'default', $wgHTTPTimeout is used</span></td></tr>
<tr id="60"><td class="linenumbers">11</td><td class="linenumbers">11</td><td class="unchanged"><span>  */</span></td></tr>
<tr id="61"><td class="linenumbers">12</td><td class="linenumbers">12</td><td class="unchanged"><span> function wfGetHTTP( $url, $timeout = 'default' ) {</span></td></tr>
<tr id="62"><td class="linenumbers">13</td><td class="linenumbers"> </td><td class="del"><del>-	global $wgHTTPTimeout, $wgHTTPProxy, $wgVersion;</del></td></tr>
<tr id="63"><td class="linenumbers"> </td><td class="linenumbers">13</td><td class="ins"><ins>+	global $wgHTTPTimeout, $wgHTTPProxy, $wgVersion, $wgTitle, $wgCommandLineMode;</ins></td></tr>
<tr id="64"><td class="linenumbers">14</td><td class="linenumbers">14</td><td class="unchanged"><span> </span></td></tr>
<tr id="65"><td class="linenumbers">15</td><td class="linenumbers">15</td><td class="unchanged"><span> 	# Use curl if available</span></td></tr>
<tr id="66"><td class="linenumbers">16</td><td class="linenumbers">16</td><td class="unchanged"><span> 	if ( function_exists( 'curl_init' ) ) {</span></td></tr>
<tr id="67"><td class="linenumbers">—</td><td class="linenumbers">—</td><td class="chunkdelimiter"><span>@@ -25,6 +25,16 @@</span></td></tr>
<tr id="68"><td class="linenumbers">26</td><td class="linenumbers">26</td><td class="unchanged"><span> 		}</span></td></tr>
<tr id="69"><td class="linenumbers">27</td><td class="linenumbers">27</td><td class="unchanged"><span> 		curl_setopt( $c, CURLOPT_TIMEOUT, $timeout );</span></td></tr>
<tr id="70"><td class="linenumbers">28</td><td class="linenumbers">28</td><td class="unchanged"><span> 		curl_setopt( $c, CURLOPT_USERAGENT, "MediaWiki/$wgVersion" );</span></td></tr>
<tr id="71"><td class="linenumbers"> </td><td class="linenumbers">29</td><td class="ins"><ins>+</ins></td></tr>
<tr id="72"><td class="linenumbers"> </td><td class="linenumbers">30</td><td class="ins"><ins>+		# Set the referer to $wgTitle, even in command-line mode</ins></td></tr>
<tr id="73"><td class="linenumbers"> </td><td class="linenumbers">31</td><td class="ins"><ins>+		# This is useful for interwiki transclusion, where the foreign</ins></td></tr>
<tr id="74"><td class="linenumbers"> </td><td class="linenumbers">32</td><td class="ins"><ins>+		# server wants to know what the referring page is.</ins></td></tr>
<tr id="75"><td class="linenumbers"> </td><td class="linenumbers">33</td><td class="ins"><ins>+		# $_SERVER['REQUEST_URI'] gives a less reliable indication of the </ins></td></tr>
<tr id="76"><td class="linenumbers"> </td><td class="linenumbers">34</td><td class="ins"><ins>+		# referring page.</ins></td></tr>
<tr id="77"><td class="linenumbers"> </td><td class="linenumbers">35</td><td class="ins"><ins>+		if ( is_object( $wgTitle ) ) {</ins></td></tr>
<tr id="78"><td class="linenumbers"> </td><td class="linenumbers">36</td><td class="ins"><ins>+			curl_setopt( $c, CURLOPT_REFERER, $wgTitle->getFullURL() );</ins></td></tr>
<tr id="79"><td class="linenumbers"> </td><td class="linenumbers">37</td><td class="ins"><ins>+		}</ins></td></tr>
<tr id="80"><td class="linenumbers"> </td><td class="linenumbers">38</td><td class="ins"><ins>+</ins></td></tr>
<tr id="81"><td class="linenumbers">29</td><td class="linenumbers">39</td><td class="unchanged"><span> 		ob_start();</span></td></tr>
<tr id="82"><td class="linenumbers">30</td><td class="linenumbers">40</td><td class="unchanged"><span> 		curl_exec( $c );</span></td></tr>
<tr id="83"><td class="linenumbers">31</td><td class="linenumbers">41</td><td class="unchanged"><span> 		$text = ob_get_contents();</span></td></tr>
<tr id="84" class="patchedfile"><td colspan="3">Index: trunk/phase3/includes/Parser.php</td></tr>



<tr id="88"><td class="linenumbers">—</td><td class="linenumbers">—</td><td class="chunkdelimiter"><span>@@ -2253,9 +2253,10 @@</span></td></tr>
<tr id="89"><td class="linenumbers">2254</td><td class="linenumbers">2254</td><td class="unchanged"><span> 	 *</span></td></tr>
<tr id="90"><td class="linenumbers">2255</td><td class="linenumbers">2255</td><td class="unchanged"><span> 	 * @param string $tex The text to transform</span></td></tr>
<tr id="91"><td class="linenumbers">2256</td><td class="linenumbers">2256</td><td class="unchanged"><span> 	 * @param array $args Key-value pairs representing template parameters to substitute</span></td></tr>
<tr id="92"><td class="linenumbers"> </td><td class="linenumbers">2257</td><td class="ins"><ins>+	 * @param bool $argsOnly Only do argument (triple-brace) expansion, not double-brace expansion</ins></td></tr>
<tr id="93"><td class="linenumbers">2257</td><td class="linenumbers">2258</td><td class="unchanged"><span> 	 * @access private</span></td></tr>
<tr id="94"><td class="linenumbers">2258</td><td class="linenumbers">2259</td><td class="unchanged"><span> 	 */</span></td></tr>
<tr id="95"><td class="linenumbers">2259</td><td class="linenumbers"> </td><td class="del"><del>-	function replaceVariables( $text, $args = array() ) {</del></td></tr>
<tr id="96"><td class="linenumbers"> </td><td class="linenumbers">2260</td><td class="ins"><ins>+	function replaceVariables( $text, $args = array(), $argsOnly = false ) {</ins></td></tr>
<tr id="97"><td class="linenumbers">2260</td><td class="linenumbers">2261</td><td class="unchanged"><span> 		# Prevent too big inclusions</span></td></tr>
<tr id="98"><td class="linenumbers">2261</td><td class="linenumbers">2262</td><td class="unchanged"><span> 		if( strlen( $text ) > MAX_INCLUDE_SIZE ) {</span></td></tr>
<tr id="99"><td class="linenumbers">2262</td><td class="linenumbers">2263</td><td class="unchanged"><span> 			return $text;</span></td></tr>
<tr id="100"><td class="linenumbers">—</td><td class="linenumbers">—</td><td class="chunkdelimiter"><span>@@ -2268,7 +2269,9 @@</span></td></tr>
<tr id="101"><td class="linenumbers">2269</td><td class="linenumbers">2270</td><td class="unchanged"><span> 		array_push( $this->mArgStack, $args );</span></td></tr>
<tr id="102"><td class="linenumbers">2270</td><td class="linenumbers">2271</td><td class="unchanged"><span> </span></td></tr>
<tr id="103"><td class="linenumbers">2271</td><td class="linenumbers">2272</td><td class="unchanged"><span> 		$braceCallbacks = array();</span></td></tr>
<tr id="104"><td class="linenumbers">2272</td><td class="linenumbers"> </td><td class="del"><del>-		$braceCallbacks[2] = array( &amp;$this, 'braceSubstitution' );</del></td></tr>
<tr id="105"><td class="linenumbers"> </td><td class="linenumbers">2273</td><td class="ins"><ins>+		if ( !$argsOnly ) {</ins></td></tr>
<tr id="106"><td class="linenumbers"> </td><td class="linenumbers">2274</td><td class="ins"><ins>+			$braceCallbacks[2] = array( &amp;$this, 'braceSubstitution' );</ins></td></tr>
<tr id="107"><td class="linenumbers"> </td><td class="linenumbers">2275</td><td class="ins"><ins>+		}</ins></td></tr>
<tr id="108"><td class="linenumbers">2273</td><td class="linenumbers">2276</td><td class="unchanged"><span> 		if ( $this->mOutputType == OT_HTML || $this->mOutputType == OT_WIKI ) {</span></td></tr>
<tr id="109"><td class="linenumbers">2274</td><td class="linenumbers">2277</td><td class="unchanged"><span> 			$braceCallbacks[3] = array( &amp;$this, 'argSubstitution' );</span></td></tr>
<tr id="110"><td class="linenumbers">2275</td><td class="linenumbers">2278</td><td class="unchanged"><span> 		}</span></td></tr>
<tr id="111"><td class="linenumbers">—</td><td class="linenumbers">—</td><td class="chunkdelimiter"><span>@@ -2356,12 +2359,16 @@</span></td></tr>
<tr id="112"><td class="linenumbers">2357</td><td class="linenumbers">2360</td><td class="unchanged"><span> 		$fname = 'Parser::braceSubstitution';</span></td></tr>
<tr id="113"><td class="linenumbers">2358</td><td class="linenumbers">2361</td><td class="unchanged"><span> 		wfProfileIn( $fname );</span></td></tr>
<tr id="114"><td class="linenumbers">2359</td><td class="linenumbers">2362</td><td class="unchanged"><span> </span></td></tr>
<tr id="115"><td class="linenumbers">2360</td><td class="linenumbers"> </td><td class="del"><del>-		$found = false;</del></td></tr>
<tr id="116"><td class="linenumbers">2361</td><td class="linenumbers"> </td><td class="del"><del>-		$nowiki = false;</del></td></tr>
<tr id="117"><td class="linenumbers">2362</td><td class="linenumbers"> </td><td class="del"><del>-		$noparse = false;</del></td></tr>
<tr id="118"><td class="linenumbers">2363</td><td class="linenumbers"> </td><td class="del"><del>-		$replaceHeadings = false;</del></td></tr>
<tr id="119"><td class="linenumbers">2364</td><td class="linenumbers"> </td><td class="del"><del>-		$isHTML = false;</del></td></tr>
<tr id="120"><td class="linenumbers"> </td><td class="linenumbers">2363</td><td class="ins"><ins>+		# Flags </ins></td></tr>
<tr id="121"><td class="linenumbers"> </td><td class="linenumbers">2364</td><td class="ins"><ins>+		$found = false;             # $text has been filled</ins></td></tr>
<tr id="122"><td class="linenumbers"> </td><td class="linenumbers">2365</td><td class="ins"><ins>+		$nowiki = false;            # wiki markup in $text should be escaped</ins></td></tr>
<tr id="123"><td class="linenumbers"> </td><td class="linenumbers">2366</td><td class="ins"><ins>+		$noparse = false;           # Unsafe HTML tags should not be stripped, etc.</ins></td></tr>
<tr id="124"><td class="linenumbers"> </td><td class="linenumbers">2367</td><td class="ins"><ins>+		$noargs = false;            # Don't replace triple-brace arguments in $text</ins></td></tr>
<tr id="125"><td class="linenumbers"> </td><td class="linenumbers">2368</td><td class="ins"><ins>+		$replaceHeadings = false;   # Make the edit section links go to the template not the article</ins></td></tr>
<tr id="126"><td class="linenumbers"> </td><td class="linenumbers">2369</td><td class="ins"><ins>+		$isHTML = false;            # $text is HTML, armour it against wikitext transformation</ins></td></tr>
<tr id="127"><td class="linenumbers"> </td><td class="linenumbers">2370</td><td class="ins"><ins>+		$forceRawInterwiki = false; # Force interwiki transclusion to be done in raw mode not rendered</ins></td></tr>
<tr id="128"><td class="linenumbers">2365</td><td class="linenumbers">2371</td><td class="unchanged"><span> </span></td></tr>
<tr id="129"><td class="linenumbers"> </td><td class="linenumbers">2372</td><td class="ins"><ins>+		# Title object, where $text came from</ins></td></tr>
<tr id="130"><td class="linenumbers">2366</td><td class="linenumbers">2373</td><td class="unchanged"><span> 		$title = NULL;</span></td></tr>
<tr id="131"><td class="linenumbers">2367</td><td class="linenumbers">2374</td><td class="unchanged"><span> </span></td></tr>
<tr id="132"><td class="linenumbers">2368</td><td class="linenumbers">2375</td><td class="unchanged"><span> 		$linestart = '';</span></td></tr>
<tr id="133"><td class="linenumbers">—</td><td class="linenumbers">—</td><td class="chunkdelimiter"><span>@@ -2378,6 +2385,7 @@</span></td></tr>
<tr id="134"><td class="linenumbers">2379</td><td class="linenumbers">2386</td><td class="unchanged"><span> 				$text = $replaceWith;</span></td></tr>
<tr id="135"><td class="linenumbers">2380</td><td class="linenumbers">2387</td><td class="unchanged"><span> 				$found = true;</span></td></tr>
<tr id="136"><td class="linenumbers">2381</td><td class="linenumbers">2388</td><td class="unchanged"><span> 				$noparse = true;</span></td></tr>
<tr id="137"><td class="linenumbers"> </td><td class="linenumbers">2389</td><td class="ins"><ins>+				$noargs = true;</ins></td></tr>
<tr id="138"><td class="linenumbers">2382</td><td class="linenumbers">2390</td><td class="unchanged"><span> 			}</span></td></tr>
<tr id="139"><td class="linenumbers">2383</td><td class="linenumbers">2391</td><td class="unchanged"><span> 		}</span></td></tr>
<tr id="140"><td class="linenumbers">2384</td><td class="linenumbers">2392</td><td class="unchanged"><span> </span></td></tr>
<tr id="141"><td class="linenumbers">—</td><td class="linenumbers">—</td><td class="chunkdelimiter"><span>@@ -2395,10 +2403,11 @@</span></td></tr>
<tr id="142"><td class="linenumbers">2396</td><td class="linenumbers">2404</td><td class="unchanged"><span> 				$text = $piece['text'];</span></td></tr>
<tr id="143"><td class="linenumbers">2397</td><td class="linenumbers">2405</td><td class="unchanged"><span> 				$found = true;</span></td></tr>
<tr id="144"><td class="linenumbers">2398</td><td class="linenumbers">2406</td><td class="unchanged"><span> 				$noparse = true;</span></td></tr>
<tr id="145"><td class="linenumbers"> </td><td class="linenumbers">2407</td><td class="ins"><ins>+				$noargs = true;</ins></td></tr>
<tr id="146"><td class="linenumbers">2399</td><td class="linenumbers">2408</td><td class="unchanged"><span> 			}</span></td></tr>
<tr id="147"><td class="linenumbers">2400</td><td class="linenumbers">2409</td><td class="unchanged"><span> 		}</span></td></tr>
<tr id="148"><td class="linenumbers">2401</td><td class="linenumbers">2410</td><td class="unchanged"><span> </span></td></tr>
<tr id="149"><td class="linenumbers">2402</td><td class="linenumbers"> </td><td class="del"><del>-		# MSG, MSGNW and INT</del></td></tr>
<tr id="150"><td class="linenumbers"> </td><td class="linenumbers">2411</td><td class="ins"><ins>+		# MSG, MSGNW, INT and RAW</ins></td></tr>
<tr id="151"><td class="linenumbers">2403</td><td class="linenumbers">2412</td><td class="unchanged"><span> 		if ( !$found ) {</span></td></tr>
<tr id="152"><td class="linenumbers">2404</td><td class="linenumbers">2413</td><td class="unchanged"><span> 			# Check for MSGNW:</span></td></tr>
<tr id="153"><td class="linenumbers">2405</td><td class="linenumbers">2414</td><td class="unchanged"><span> 			$mwMsgnw =&amp; MagicWord::get( MAG_MSGNW );</span></td></tr>
<tr id="154"><td class="linenumbers">—</td><td class="linenumbers">—</td><td class="chunkdelimiter"><span>@@ -2409,7 +2418,13 @@</span></td></tr>
<tr id="155"><td class="linenumbers">2410</td><td class="linenumbers">2419</td><td class="unchanged"><span> 				$mwMsg =&amp; MagicWord::get( MAG_MSG );</span></td></tr>
<tr id="156"><td class="linenumbers">2411</td><td class="linenumbers">2420</td><td class="unchanged"><span> 				$mwMsg->matchStartAndRemove( $part1 );</span></td></tr>
<tr id="157"><td class="linenumbers">2412</td><td class="linenumbers">2421</td><td class="unchanged"><span> 			}</span></td></tr>
<tr id="158"><td class="linenumbers">2413</td><td class="linenumbers"> </td><td class="del"><del>-</del></td></tr>
<tr id="159"><td class="linenumbers"> </td><td class="linenumbers">2422</td><td class="ins"><ins>+			</ins></td></tr>
<tr id="160"><td class="linenumbers"> </td><td class="linenumbers">2423</td><td class="ins"><ins>+			# Check for RAW:</ins></td></tr>
<tr id="161"><td class="linenumbers"> </td><td class="linenumbers">2424</td><td class="ins"><ins>+			$mwRaw =&amp; MagicWord::get( MAG_RAW );</ins></td></tr>
<tr id="162"><td class="linenumbers"> </td><td class="linenumbers">2425</td><td class="ins"><ins>+			if ( $mwRaw->matchStartAndRemove( $part1 ) ) {</ins></td></tr>
<tr id="163"><td class="linenumbers"> </td><td class="linenumbers">2426</td><td class="ins"><ins>+				$forceRawInterwiki = true;</ins></td></tr>
<tr id="164"><td class="linenumbers"> </td><td class="linenumbers">2427</td><td class="ins"><ins>+			}</ins></td></tr>
<tr id="165"><td class="linenumbers"> </td><td class="linenumbers">2428</td><td class="ins"><ins>+			</ins></td></tr>
<tr id="166"><td class="linenumbers">2414</td><td class="linenumbers">2429</td><td class="unchanged"><span> 			# Check if it is an internal message</span></td></tr>
<tr id="167"><td class="linenumbers">2415</td><td class="linenumbers">2430</td><td class="unchanged"><span> 			$mwInt =&amp; MagicWord::get( MAG_INT );</span></td></tr>
<tr id="168"><td class="linenumbers">2416</td><td class="linenumbers">2431</td><td class="unchanged"><span> 			if ( $mwInt->matchStartAndRemove( $part1 ) ) {</span></td></tr>
<tr id="169"><td class="linenumbers">—</td><td class="linenumbers">—</td><td class="chunkdelimiter"><span>@@ -2515,12 +2530,13 @@</span></td></tr>
<tr id="170"><td class="linenumbers">2516</td><td class="linenumbers">2531</td><td class="unchanged"><span> </span></td></tr>
<tr id="171"><td class="linenumbers">2517</td><td class="linenumbers">2532</td><td class="unchanged"><span> 		# Did we encounter this template already? If yes, it is in the cache</span></td></tr>
<tr id="172"><td class="linenumbers">2518</td><td class="linenumbers">2533</td><td class="unchanged"><span> 		# and we need to check for loops.</span></td></tr>
<tr id="173"><td class="linenumbers">2519</td><td class="linenumbers"> </td><td class="del"><del>-		if ( !$found &amp;&amp; isset( $this->mTemplates[$part1] ) ) {</del></td></tr>
<tr id="174"><td class="linenumbers"> </td><td class="linenumbers">2534</td><td class="ins"><ins>+		if ( !$found &amp;&amp; isset( $this->mTemplates[$piece['title']] ) ) {</ins></td></tr>
<tr id="175"><td class="linenumbers">2520</td><td class="linenumbers">2535</td><td class="unchanged"><span> 			$found = true;</span></td></tr>
<tr id="176"><td class="linenumbers">2521</td><td class="linenumbers">2536</td><td class="unchanged"><span> </span></td></tr>
<tr id="177"><td class="linenumbers">2522</td><td class="linenumbers">2537</td><td class="unchanged"><span> 			# Infinite loop test</span></td></tr>
<tr id="178"><td class="linenumbers">2523</td><td class="linenumbers">2538</td><td class="unchanged"><span> 			if ( isset( $this->mTemplatePath[$part1] ) ) {</span></td></tr>
<tr id="179"><td class="linenumbers">2524</td><td class="linenumbers">2539</td><td class="unchanged"><span> 				$noparse = true;</span></td></tr>
<tr id="180"><td class="linenumbers"> </td><td class="linenumbers">2540</td><td class="ins"><ins>+				$noargs = true;</ins></td></tr>
<tr id="181"><td class="linenumbers">2525</td><td class="linenumbers">2541</td><td class="unchanged"><span> 				$found = true;</span></td></tr>
<tr id="182"><td class="linenumbers">2526</td><td class="linenumbers">2542</td><td class="unchanged"><span> 				$text = $linestart .</span></td></tr>
<tr id="183"><td class="linenumbers">2527</td><td class="linenumbers">2543</td><td class="unchanged"><span> 					'{{' . $part1 . '}}' .</span></td></tr>
<tr id="184"><td class="linenumbers">—</td><td class="linenumbers">—</td><td class="chunkdelimiter"><span>@@ -2528,7 +2544,7 @@</span></td></tr>
<tr id="185"><td class="linenumbers">2529</td><td class="linenumbers">2545</td><td class="unchanged"><span> 				wfDebug( "$fname: template loop broken at '$part1'\n" );</span></td></tr>
<tr id="186"><td class="linenumbers">2530</td><td class="linenumbers">2546</td><td class="unchanged"><span> 			} else {</span></td></tr>
<tr id="187"><td class="linenumbers">2531</td><td class="linenumbers">2547</td><td class="unchanged"><span> 				# set $text to cached message.</span></td></tr>
<tr id="188"><td class="linenumbers">2532</td><td class="linenumbers"> </td><td class="del"><del>-				$text = $linestart . $this->mTemplates[$part1];</del></td></tr>
<tr id="189"><td class="linenumbers"> </td><td class="linenumbers">2548</td><td class="ins"><ins>+				$text = $linestart . $this->mTemplates[$piece['title']];</ins></td></tr>
<tr id="190"><td class="linenumbers">2533</td><td class="linenumbers">2549</td><td class="unchanged"><span> 			}</span></td></tr>
<tr id="191"><td class="linenumbers">2534</td><td class="linenumbers">2550</td><td class="unchanged"><span> 		}</span></td></tr>
<tr id="192"><td class="linenumbers">2535</td><td class="linenumbers">2551</td><td class="unchanged"><span> </span></td></tr>
<tr id="193"><td class="linenumbers">—</td><td class="linenumbers">—</td><td class="chunkdelimiter"><span>@@ -2553,6 +2569,7 @@</span></td></tr>
<tr id="194"><td class="linenumbers">2554</td><td class="linenumbers">2570</td><td class="unchanged"><span> 							if ( is_string( $text ) ) {</span></td></tr>
<tr id="195"><td class="linenumbers">2555</td><td class="linenumbers">2571</td><td class="unchanged"><span> 								$found = true;</span></td></tr>
<tr id="196"><td class="linenumbers">2556</td><td class="linenumbers">2572</td><td class="unchanged"><span> 								$noparse = true;</span></td></tr>
<tr id="197"><td class="linenumbers"> </td><td class="linenumbers">2573</td><td class="ins"><ins>+								$noargs = true;</ins></td></tr>
<tr id="198"><td class="linenumbers">2557</td><td class="linenumbers">2574</td><td class="unchanged"><span> 								$isHTML = true;</span></td></tr>
<tr id="199"><td class="linenumbers">2558</td><td class="linenumbers">2575</td><td class="unchanged"><span> 								$this->disableCache();</span></td></tr>
<tr id="200"><td class="linenumbers">2559</td><td class="linenumbers">2576</td><td class="unchanged"><span> 							}</span></td></tr>
<tr id="201"><td class="linenumbers">—</td><td class="linenumbers">—</td><td class="chunkdelimiter"><span>@@ -2571,23 +2588,26 @@</span></td></tr>
<tr id="202"><td class="linenumbers">2572</td><td class="linenumbers">2589</td><td class="unchanged"><span> 						$text = '[['.$title->getPrefixedText().']]';</span></td></tr>
<tr id="203"><td class="linenumbers">2573</td><td class="linenumbers">2590</td><td class="unchanged"><span> 						$found = true;</span></td></tr>
<tr id="204"><td class="linenumbers">2574</td><td class="linenumbers">2591</td><td class="unchanged"><span> 					}</span></td></tr>
<tr id="205"><td class="linenumbers">2575</td><td class="linenumbers"> </td><td class="del"><del>-</del></td></tr>
<tr id="206"><td class="linenumbers">2576</td><td class="linenumbers"> </td><td class="del"><del>-					# Template cache array insertion</del></td></tr>
<tr id="207"><td class="linenumbers">2577</td><td class="linenumbers"> </td><td class="del"><del>-					if( $found ) {</del></td></tr>
<tr id="208"><td class="linenumbers">2578</td><td class="linenumbers"> </td><td class="del"><del>-						$this->mTemplates[$part1] = $text;</del></td></tr>
<tr id="209"><td class="linenumbers">2579</td><td class="linenumbers"> </td><td class="del"><del>-						$text = $linestart . $text;</del></td></tr>
<tr id="210"><td class="linenumbers">2580</td><td class="linenumbers"> </td><td class="del"><del>-					}</del></td></tr>
<tr id="211"><td class="linenumbers">2581</td><td class="linenumbers">2592</td><td class="unchanged"><span> 				} elseif ( $title->isTrans() ) {</span></td></tr>
<tr id="212"><td class="linenumbers">2582</td><td class="linenumbers">2593</td><td class="unchanged"><span> 					// Interwiki transclusion</span></td></tr>
<tr id="213"><td class="linenumbers">2583</td><td class="linenumbers"> </td><td class="del"><del>-					if ( $this->mOutputType == OT_HTML ) {</del></td></tr>
<tr id="214"><td class="linenumbers"> </td><td class="linenumbers">2594</td><td class="ins"><ins>+					if ( $this->mOutputType == OT_HTML &amp;&amp; !$forceRawInterwiki ) {</ins></td></tr>
<tr id="215"><td class="linenumbers">2584</td><td class="linenumbers">2595</td><td class="unchanged"><span> 						$text = $this->interwikiTransclude( $title, 'render' );</span></td></tr>
<tr id="216"><td class="linenumbers">2585</td><td class="linenumbers">2596</td><td class="unchanged"><span> 						$isHTML = true;</span></td></tr>
<tr id="217"><td class="linenumbers">2586</td><td class="linenumbers">2597</td><td class="unchanged"><span> 						$noparse = true;</span></td></tr>
<tr id="218"><td class="linenumbers">2587</td><td class="linenumbers">2598</td><td class="unchanged"><span> 					} else {</span></td></tr>
<tr id="219"><td class="linenumbers">2588</td><td class="linenumbers">2599</td><td class="unchanged"><span> 						$text = $this->interwikiTransclude( $title, 'raw' );</span></td></tr>
<tr id="220"><td class="linenumbers"> </td><td class="linenumbers">2600</td><td class="ins"><ins>+						$replaceHeadings = true;</ins></td></tr>
<tr id="221"><td class="linenumbers">2589</td><td class="linenumbers">2601</td><td class="unchanged"><span> 					}</span></td></tr>
<tr id="222"><td class="linenumbers">2590</td><td class="linenumbers">2602</td><td class="unchanged"><span> 					$found = true;</span></td></tr>
<tr id="223"><td class="linenumbers">2591</td><td class="linenumbers">2603</td><td class="unchanged"><span> 				}</span></td></tr>
<tr id="224"><td class="linenumbers"> </td><td class="linenumbers">2604</td><td class="ins"><ins>+				</ins></td></tr>
<tr id="225"><td class="linenumbers"> </td><td class="linenumbers">2605</td><td class="ins"><ins>+				# Template cache array insertion</ins></td></tr>
<tr id="226"><td class="linenumbers"> </td><td class="linenumbers">2606</td><td class="ins"><ins>+				# Use the original $piece['title'] not the mangled $part1, so that</ins></td></tr>
<tr id="227"><td class="linenumbers"> </td><td class="linenumbers">2607</td><td class="ins"><ins>+				# modifiers such as RAW: produce separate cache entries</ins></td></tr>
<tr id="228"><td class="linenumbers"> </td><td class="linenumbers">2608</td><td class="ins"><ins>+				if( $found ) {</ins></td></tr>
<tr id="229"><td class="linenumbers"> </td><td class="linenumbers">2609</td><td class="ins"><ins>+					$this->mTemplates[$piece['title']] = $text;</ins></td></tr>
<tr id="230"><td class="linenumbers"> </td><td class="linenumbers">2610</td><td class="ins"><ins>+					$text = $linestart . $text;</ins></td></tr>
<tr id="231"><td class="linenumbers"> </td><td class="linenumbers">2611</td><td class="ins"><ins>+				}</ins></td></tr>
<tr id="232"><td class="linenumbers">2592</td><td class="linenumbers">2612</td><td class="unchanged"><span> 			}</span></td></tr>
<tr id="233"><td class="linenumbers">2593</td><td class="linenumbers">2613</td><td class="unchanged"><span> 		}</span></td></tr>
<tr id="234"><td class="linenumbers">2594</td><td class="linenumbers">2614</td><td class="unchanged"><span> </span></td></tr>
<tr id="235"><td class="linenumbers">—</td><td class="linenumbers">—</td><td class="chunkdelimiter"><span>@@ -2595,52 +2615,61 @@</span></td></tr>
<tr id="236"><td class="linenumbers">2596</td><td class="linenumbers">2616</td><td class="unchanged"><span> 		# Only for HTML output</span></td></tr>
<tr id="237"><td class="linenumbers">2597</td><td class="linenumbers">2617</td><td class="unchanged"><span> 		if ( $nowiki &amp;&amp; $found &amp;&amp; $this->mOutputType == OT_HTML ) {</span></td></tr>
<tr id="238"><td class="linenumbers">2598</td><td class="linenumbers">2618</td><td class="unchanged"><span> 			$text = wfEscapeWikiText( $text );</span></td></tr>
<tr id="239"><td class="linenumbers">2599</td><td class="linenumbers"> </td><td class="del"><del>-		} elseif ( ($this->mOutputType == OT_HTML || $this->mOutputType == OT_WIKI) &amp;&amp; $found &amp;&amp; !$noparse) {</del></td></tr>
<tr id="240"><td class="linenumbers">2600</td><td class="linenumbers"> </td><td class="del"><del>-			# Clean up argument array</del></td></tr>
<tr id="241"><td class="linenumbers">2601</td><td class="linenumbers"> </td><td class="del"><del>-			$assocArgs = array();</del></td></tr>
<tr id="242"><td class="linenumbers">2602</td><td class="linenumbers"> </td><td class="del"><del>-			$index = 1;</del></td></tr>
<tr id="243"><td class="linenumbers">2603</td><td class="linenumbers"> </td><td class="del"><del>-			foreach( $args as $arg ) {</del></td></tr>
<tr id="244"><td class="linenumbers">2604</td><td class="linenumbers"> </td><td class="del"><del>-				$eqpos = strpos( $arg, '=' );</del></td></tr>
<tr id="245"><td class="linenumbers">2605</td><td class="linenumbers"> </td><td class="del"><del>-				if ( $eqpos === false ) {</del></td></tr>
<tr id="246"><td class="linenumbers">2606</td><td class="linenumbers"> </td><td class="del"><del>-					$assocArgs[$index++] = $arg;</del></td></tr>
<tr id="247"><td class="linenumbers">2607</td><td class="linenumbers"> </td><td class="del"><del>-				} else {</del></td></tr>
<tr id="248"><td class="linenumbers">2608</td><td class="linenumbers"> </td><td class="del"><del>-					$name = trim( substr( $arg, 0, $eqpos ) );</del></td></tr>
<tr id="249"><td class="linenumbers">2609</td><td class="linenumbers"> </td><td class="del"><del>-					$value = trim( substr( $arg, $eqpos+1 ) );</del></td></tr>
<tr id="250"><td class="linenumbers">2610</td><td class="linenumbers"> </td><td class="del"><del>-					if ( $value === false ) {</del></td></tr>
<tr id="251"><td class="linenumbers">2611</td><td class="linenumbers"> </td><td class="del"><del>-						$value = '';</del></td></tr>
<tr id="252"><td class="linenumbers"> </td><td class="linenumbers">2619</td><td class="ins"><ins>+		} elseif ( ($this->mOutputType == OT_HTML || $this->mOutputType == OT_WIKI) &amp;&amp; $found ) {</ins></td></tr>
<tr id="253"><td class="linenumbers"> </td><td class="linenumbers">2620</td><td class="ins"><ins>+			if ( !$noargs ) {</ins></td></tr>
<tr id="254"><td class="linenumbers"> </td><td class="linenumbers">2621</td><td class="ins"><ins>+				# Clean up argument array</ins></td></tr>
<tr id="255"><td class="linenumbers"> </td><td class="linenumbers">2622</td><td class="ins"><ins>+				$assocArgs = array();</ins></td></tr>
<tr id="256"><td class="linenumbers"> </td><td class="linenumbers">2623</td><td class="ins"><ins>+				$index = 1;</ins></td></tr>
<tr id="257"><td class="linenumbers"> </td><td class="linenumbers">2624</td><td class="ins"><ins>+				foreach( $args as $arg ) {</ins></td></tr>
<tr id="258"><td class="linenumbers"> </td><td class="linenumbers">2625</td><td class="ins"><ins>+					$eqpos = strpos( $arg, '=' );</ins></td></tr>
<tr id="259"><td class="linenumbers"> </td><td class="linenumbers">2626</td><td class="ins"><ins>+					if ( $eqpos === false ) {</ins></td></tr>
<tr id="260"><td class="linenumbers"> </td><td class="linenumbers">2627</td><td class="ins"><ins>+						$assocArgs[$index++] = $arg;</ins></td></tr>
<tr id="261"><td class="linenumbers"> </td><td class="linenumbers">2628</td><td class="ins"><ins>+					} else {</ins></td></tr>
<tr id="262"><td class="linenumbers"> </td><td class="linenumbers">2629</td><td class="ins"><ins>+						$name = trim( substr( $arg, 0, $eqpos ) );</ins></td></tr>
<tr id="263"><td class="linenumbers"> </td><td class="linenumbers">2630</td><td class="ins"><ins>+						$value = trim( substr( $arg, $eqpos+1 ) );</ins></td></tr>
<tr id="264"><td class="linenumbers"> </td><td class="linenumbers">2631</td><td class="ins"><ins>+						if ( $value === false ) {</ins></td></tr>
<tr id="265"><td class="linenumbers"> </td><td class="linenumbers">2632</td><td class="ins"><ins>+							$value = '';</ins></td></tr>
<tr id="266"><td class="linenumbers"> </td><td class="linenumbers">2633</td><td class="ins"><ins>+						}</ins></td></tr>
<tr id="267"><td class="linenumbers"> </td><td class="linenumbers">2634</td><td class="ins"><ins>+						if ( $name !== false ) {</ins></td></tr>
<tr id="268"><td class="linenumbers"> </td><td class="linenumbers">2635</td><td class="ins"><ins>+							$assocArgs[$name] = $value;</ins></td></tr>
<tr id="269"><td class="linenumbers"> </td><td class="linenumbers">2636</td><td class="ins"><ins>+						}</ins></td></tr>
<tr id="270"><td class="linenumbers">2612</td><td class="linenumbers">2637</td><td class="unchanged"><span> 					}</span></td></tr>
<tr id="271"><td class="linenumbers">2613</td><td class="linenumbers"> </td><td class="del"><del>-					if ( $name !== false ) {</del></td></tr>
<tr id="272"><td class="linenumbers">2614</td><td class="linenumbers"> </td><td class="del"><del>-						$assocArgs[$name] = $value;</del></td></tr>
<tr id="273"><td class="linenumbers">2615</td><td class="linenumbers"> </td><td class="del"><del>-					}</del></td></tr>
<tr id="274"><td class="linenumbers">2616</td><td class="linenumbers">2638</td><td class="unchanged"><span> 				}</span></td></tr>
<tr id="275"><td class="linenumbers"> </td><td class="linenumbers">2639</td><td class="ins"><ins>+</ins></td></tr>
<tr id="276"><td class="linenumbers"> </td><td class="linenumbers">2640</td><td class="ins"><ins>+				# Add a new element to the templace recursion path</ins></td></tr>
<tr id="277"><td class="linenumbers"> </td><td class="linenumbers">2641</td><td class="ins"><ins>+				$this->mTemplatePath[$part1] = 1;</ins></td></tr>
<tr id="278"><td class="linenumbers">2617</td><td class="linenumbers">2642</td><td class="unchanged"><span> 			}</span></td></tr>
<tr id="279"><td class="linenumbers">2618</td><td class="linenumbers">2643</td><td class="unchanged"><span> </span></td></tr>
<tr id="280"><td class="linenumbers">2619</td><td class="linenumbers"> </td><td class="del"><del>-			# Add a new element to the templace recursion path</del></td></tr>
<tr id="281"><td class="linenumbers">2620</td><td class="linenumbers"> </td><td class="del"><del>-			$this->mTemplatePath[$part1] = 1;</del></td></tr>
<tr id="282"><td class="linenumbers"> </td><td class="linenumbers">2644</td><td class="ins"><ins>+			if ( !$noparse ) {</ins></td></tr>
<tr id="283"><td class="linenumbers"> </td><td class="linenumbers">2645</td><td class="ins"><ins>+				# If there are any &lt;onlyinclude> tags, only include them</ins></td></tr>
<tr id="284"><td class="linenumbers"> </td><td class="linenumbers">2646</td><td class="ins"><ins>+				if ( in_string( '&lt;onlyinclude>', $text ) &amp;&amp; in_string( '&lt;/onlyinclude>', $text ) ) {</ins></td></tr>
<tr id="285"><td class="linenumbers"> </td><td class="linenumbers">2647</td><td class="ins"><ins>+					preg_match_all( '/&lt;onlyinclude>(.*?)\n?&lt;\/onlyinclude>/s', $text, $m );</ins></td></tr>
<tr id="286"><td class="linenumbers"> </td><td class="linenumbers">2648</td><td class="ins"><ins>+					$text = '';</ins></td></tr>
<tr id="287"><td class="linenumbers"> </td><td class="linenumbers">2649</td><td class="ins"><ins>+					foreach ($m[1] as $piece)</ins></td></tr>
<tr id="288"><td class="linenumbers"> </td><td class="linenumbers">2650</td><td class="ins"><ins>+						$text .= $piece;</ins></td></tr>
<tr id="289"><td class="linenumbers"> </td><td class="linenumbers">2651</td><td class="ins"><ins>+				}</ins></td></tr>
<tr id="290"><td class="linenumbers"> </td><td class="linenumbers">2652</td><td class="ins"><ins>+				# Remove &lt;noinclude> sections and &lt;includeonly> tags</ins></td></tr>
<tr id="291"><td class="linenumbers"> </td><td class="linenumbers">2653</td><td class="ins"><ins>+				$text = preg_replace( '/&lt;noinclude>.*?&lt;\/noinclude>/s', '', $text );</ins></td></tr>
<tr id="292"><td class="linenumbers"> </td><td class="linenumbers">2654</td><td class="ins"><ins>+				$text = strtr( $text, array( '&lt;includeonly>' => '' , '&lt;/includeonly>' => '' ) );</ins></td></tr>
<tr id="293"><td class="linenumbers">2621</td><td class="linenumbers">2655</td><td class="unchanged"><span> </span></td></tr>
<tr id="294"><td class="linenumbers">2622</td><td class="linenumbers"> </td><td class="del"><del>-			# If there are any &lt;onlyinclude> tags, only include them</del></td></tr>
<tr id="295"><td class="linenumbers">2623</td><td class="linenumbers"> </td><td class="del"><del>-			if ( in_string( '&lt;onlyinclude>', $text ) &amp;&amp; in_string( '&lt;/onlyinclude>', $text ) ) {</del></td></tr>
<tr id="296"><td class="linenumbers">2624</td><td class="linenumbers"> </td><td class="del"><del>-				preg_match_all( '/&lt;onlyinclude>(.*?)\n?&lt;\/onlyinclude>/s', $text, $m );</del></td></tr>
<tr id="297"><td class="linenumbers">2625</td><td class="linenumbers"> </td><td class="del"><del>-				$text = '';</del></td></tr>
<tr id="298"><td class="linenumbers">2626</td><td class="linenumbers"> </td><td class="del"><del>-				foreach ($m[1] as $piece)</del></td></tr>
<tr id="299"><td class="linenumbers">2627</td><td class="linenumbers"> </td><td class="del"><del>-					$text .= $piece;</del></td></tr>
<tr id="300"><td class="linenumbers">2628</td><td class="linenumbers"> </td><td class="del"><del>-			}</del></td></tr>
<tr id="301"><td class="linenumbers">2629</td><td class="linenumbers"> </td><td class="del"><del>-			# Remove &lt;noinclude> sections and &lt;includeonly> tags</del></td></tr>
<tr id="302"><td class="linenumbers">2630</td><td class="linenumbers"> </td><td class="del"><del>-			$text = preg_replace( '/&lt;noinclude>.*?&lt;\/noinclude>/s', '', $text );</del></td></tr>
<tr id="303"><td class="linenumbers">2631</td><td class="linenumbers"> </td><td class="del"><del>-			$text = strtr( $text, array( '&lt;includeonly>' => '' , '&lt;/includeonly>' => '' ) );</del></td></tr>
<tr id="304"><td class="linenumbers"> </td><td class="linenumbers">2656</td><td class="ins"><ins>+				if( $this->mOutputType == OT_HTML ) {</ins></td></tr>
<tr id="305"><td class="linenumbers"> </td><td class="linenumbers">2657</td><td class="ins"><ins>+					# Strip &lt;nowiki>, &lt;pre>, etc.</ins></td></tr>
<tr id="306"><td class="linenumbers"> </td><td class="linenumbers">2658</td><td class="ins"><ins>+					$text = $this->strip( $text, $this->mStripState );</ins></td></tr>
<tr id="307"><td class="linenumbers"> </td><td class="linenumbers">2659</td><td class="ins"><ins>+					$text = Sanitizer::removeHTMLtags( $text, array( &amp;$this, 'replaceVariables' ), $assocArgs );</ins></td></tr>
<tr id="308"><td class="linenumbers"> </td><td class="linenumbers">2660</td><td class="ins"><ins>+				}</ins></td></tr>
<tr id="309"><td class="linenumbers"> </td><td class="linenumbers">2661</td><td class="ins"><ins>+				$text = $this->replaceVariables( $text, $assocArgs );</ins></td></tr>
<tr id="310"><td class="linenumbers">2632</td><td class="linenumbers">2662</td><td class="unchanged"><span> </span></td></tr>
<tr id="311"><td class="linenumbers">2633</td><td class="linenumbers"> </td><td class="del"><del>-			if( $this->mOutputType == OT_HTML ) {</del></td></tr>
<tr id="312"><td class="linenumbers">2634</td><td class="linenumbers"> </td><td class="del"><del>-				# Strip &lt;nowiki>, &lt;pre>, etc.</del></td></tr>
<tr id="313"><td class="linenumbers">2635</td><td class="linenumbers"> </td><td class="del"><del>-				$text = $this->strip( $text, $this->mStripState );</del></td></tr>
<tr id="314"><td class="linenumbers">2636</td><td class="linenumbers"> </td><td class="del"><del>-				$text = Sanitizer::removeHTMLtags( $text, array( &amp;$this, 'replaceVariables' ), $assocArgs );</del></td></tr>
<tr id="315"><td class="linenumbers"> </td><td class="linenumbers">2663</td><td class="ins"><ins>+				# If the template begins with a table or block-level</ins></td></tr>
<tr id="316"><td class="linenumbers"> </td><td class="linenumbers">2664</td><td class="ins"><ins>+				# element, it should be treated as beginning a new line.</ins></td></tr>
<tr id="317"><td class="linenumbers"> </td><td class="linenumbers">2665</td><td class="ins"><ins>+				if (!$piece['lineStart'] &amp;&amp; preg_match('/^({\\||:|;|#|\*)/', $text)) {</ins></td></tr>
<tr id="318"><td class="linenumbers"> </td><td class="linenumbers">2666</td><td class="ins"><ins>+					$text = "\n" . $text;</ins></td></tr>
<tr id="319"><td class="linenumbers"> </td><td class="linenumbers">2667</td><td class="ins"><ins>+				}</ins></td></tr>
<tr id="320"><td class="linenumbers"> </td><td class="linenumbers">2668</td><td class="ins"><ins>+			} elseif ( !$noargs ) {</ins></td></tr>
<tr id="321"><td class="linenumbers"> </td><td class="linenumbers">2669</td><td class="ins"><ins>+				# $noparse and !$noargs</ins></td></tr>
<tr id="322"><td class="linenumbers"> </td><td class="linenumbers">2670</td><td class="ins"><ins>+				# Just replace the arguments, not any double-brace items</ins></td></tr>
<tr id="323"><td class="linenumbers"> </td><td class="linenumbers">2671</td><td class="ins"><ins>+				# This is used for rendered interwiki transclusion</ins></td></tr>
<tr id="324"><td class="linenumbers"> </td><td class="linenumbers">2672</td><td class="ins"><ins>+				$text = $this->replaceVariables( $text, $assocArgs, true );</ins></td></tr>
<tr id="325"><td class="linenumbers">2637</td><td class="linenumbers">2673</td><td class="unchanged"><span> 			}</span></td></tr>
<tr id="326"><td class="linenumbers">2638</td><td class="linenumbers"> </td><td class="del"><del>-			$text = $this->replaceVariables( $text, $assocArgs );</del></td></tr>
<tr id="327"><td class="linenumbers">2639</td><td class="linenumbers"> </td><td class="del"><del>-</del></td></tr>
<tr id="328"><td class="linenumbers">2640</td><td class="linenumbers"> </td><td class="del"><del>-			# If the template begins with a table or block-level</del></td></tr>
<tr id="329"><td class="linenumbers">2641</td><td class="linenumbers"> </td><td class="del"><del>-			# element, it should be treated as beginning a new line.</del></td></tr>
<tr id="330"><td class="linenumbers">2642</td><td class="linenumbers"> </td><td class="del"><del>-			if (!$piece['lineStart'] &amp;&amp; preg_match('/^({\\||:|;|#|\*)/', $text)) {</del></td></tr>
<tr id="331"><td class="linenumbers">2643</td><td class="linenumbers"> </td><td class="del"><del>-				$text = "\n" . $text;</del></td></tr>
<tr id="332"><td class="linenumbers">2644</td><td class="linenumbers"> </td><td class="del"><del>-			}</del></td></tr>
<tr id="333"><td class="linenumbers">2645</td><td class="linenumbers">2674</td><td class="unchanged"><span> 		}</span></td></tr>
<tr id="334"><td class="linenumbers">2646</td><td class="linenumbers">2675</td><td class="unchanged"><span> 		# Prune lower levels off the recursion check path</span></td></tr>
<tr id="335"><td class="linenumbers">2647</td><td class="linenumbers">2676</td><td class="unchanged"><span> 		$this->mTemplatePath = $lastPathLevel;</span></td></tr>
<tr id="336" class="patchedfile"><td colspan="3">Index: trunk/phase3/RELEASE-NOTES</td></tr>



<tr id="340"><td class="linenumbers">—</td><td class="linenumbers">—</td><td class="chunkdelimiter"><span>@@ -258,6 +258,7 @@</span></td></tr>
<tr id="341"><td class="linenumbers">259</td><td class="linenumbers">259</td><td class="unchanged"><span>   character before doing anything with them. This prevents certain kinds of</span></td></tr>
<tr id="342"><td class="linenumbers">260</td><td class="linenumbers">260</td><td class="unchanged"><span>   spam filter evasion.</span></td></tr>
<tr id="343"><td class="linenumbers">261</td><td class="linenumbers">261</td><td class="unchanged"><span> * (bug 4783) : Fix for "{{ns:0}} does not render"</span></td></tr>
<tr id="344"><td class="linenumbers"> </td><td class="linenumbers">262</td><td class="ins"><ins>+* Improved support for interwiki transclusion</ins></td></tr>
<tr id="345"><td class="linenumbers">262</td><td class="linenumbers">263</td><td class="unchanged"><span> </span></td></tr>
<tr id="346"><td class="linenumbers">263</td><td class="linenumbers">264</td><td class="unchanged"><span> Upload:</span></td></tr>
<tr id="347"><td class="linenumbers">264</td><td class="linenumbers">265</td><td class="unchanged"><span> * (bug 2527) Always set destination filename when new file is selected</span></td></tr>
<tr id="348" class="patchedfile"><td colspan="3">Index: trunk/phase3/languages/Language.php</td></tr>



<tr id="352"><td class="linenumbers">—</td><td class="linenumbers">—</td><td class="chunkdelimiter"><span>@@ -253,10 +253,11 @@</span></td></tr>
<tr id="353"><td class="linenumbers">254</td><td class="linenumbers">254</td><td class="unchanged"><span> 	MAG_PLURAL               => array( 0,    'PLURAL:'                ),</span></td></tr>
<tr id="354"><td class="linenumbers">255</td><td class="linenumbers">255</td><td class="unchanged"><span> 	MAG_FULLURL              => array( 0,    'FULLURL:'               ),</span></td></tr>
<tr id="355"><td class="linenumbers">256</td><td class="linenumbers">256</td><td class="unchanged"><span> 	MAG_FULLURLE             => array( 0,    'FULLURLE:'              ),</span></td></tr>
<tr id="356"><td class="linenumbers">257</td><td class="linenumbers"> </td><td class="del"><del>-	MAG_LCFIRST		 => array( 0,    'LCFIRST:'               ),</del></td></tr>
<tr id="357"><td class="linenumbers">258</td><td class="linenumbers"> </td><td class="del"><del>-	MAG_UCFIRST		 => array( 0,    'UCFIRST:'               ),</del></td></tr>
<tr id="358"><td class="linenumbers">259</td><td class="linenumbers"> </td><td class="del"><del>-	MAG_LC			 => array( 0,    'LC:'                    ),</del></td></tr>
<tr id="359"><td class="linenumbers">260</td><td class="linenumbers"> </td><td class="del"><del>-	MAG_UC			 => array( 0,    'UC:'                    ),</del></td></tr>
<tr id="360"><td class="linenumbers"> </td><td class="linenumbers">257</td><td class="ins"><ins>+	MAG_LCFIRST              => array( 0,    'LCFIRST:'               ),</ins></td></tr>
<tr id="361"><td class="linenumbers"> </td><td class="linenumbers">258</td><td class="ins"><ins>+	MAG_UCFIRST              => array( 0,    'UCFIRST:'               ),</ins></td></tr>
<tr id="362"><td class="linenumbers"> </td><td class="linenumbers">259</td><td class="ins"><ins>+	MAG_LC                   => array( 0,    'LC:'                    ),</ins></td></tr>
<tr id="363"><td class="linenumbers"> </td><td class="linenumbers">260</td><td class="ins"><ins>+	MAG_UC                   => array( 0,    'UC:'                    ),</ins></td></tr>
<tr id="364"><td class="linenumbers"> </td><td class="linenumbers">261</td><td class="ins"><ins>+	MAG_RAW                  => array( 0,    'RAW:'                   ),</ins></td></tr>
<tr id="365"><td class="linenumbers">261</td><td class="linenumbers">262</td><td class="unchanged"><span> );</span></td></tr>
<tr id="366"><td class="linenumbers">262</td><td class="linenumbers">263</td><td class="unchanged"><span> </span></td></tr>
<tr id="367"><td class="linenumbers">263</td><td class="linenumbers">264</td><td class="unchanged"><span> if (!$wgCachedMessageArrays) {</span></td></tr>
</table>
</div>
<h2 id='code-changes'>Status &amp; tagging log</h2>
<ul class='mw-codereview-changes'><li>01:58, 13 October 2010&#160;<a href="https://www.mediawiki.org/wiki/User:%F0%9F%98%82" class="mw-userlink" title="User:😂"><bdi>😂</bdi></a> <span class="mw-usertoollinks">(<a href="https://www.mediawiki.org/wiki/User_talk:%F0%9F%98%82" class="mw-usertoollinks-talk" title="User talk:😂">talk</a> | <a href="https://www.mediawiki.org/wiki/Special:Contributions/%F0%9F%98%82" class="mw-usertoollinks-contribs" title="Special:Contributions/😂">contribs</a>)</span>&#160;changed the <b>status</b> of r12925 <i>[<b>removed:</b> new&#160;<b>added:</b> old]</i></li></ul></form></div>
</body>
</html>
 contentType 9 text/html url 64 https://static-codereview.wikimedia.org:443/MediaWiki/12925.html responseCode 3 200 