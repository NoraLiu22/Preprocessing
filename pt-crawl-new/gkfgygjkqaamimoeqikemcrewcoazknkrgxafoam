gkfgygjkqaamimoeqikemcrewcoazknkrgxafoam length 5 62943 page 62943 <!DOCTYPE html>
<html>
  <head>

    <title>Scholia</title>
<meta charset="UTF-8">
<meta name="robots" content="index, nofollow">
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<meta name="og:url" content="https://scholia.toolforge.org/author/Q26876" />
<meta name="og:site_name" content="Scholia" />
<meta name="og:image" content="/static/images/scholia_social_media.png" />

<meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="@WDScholia" />

    <!-- Bootstrap -->
    <link href="/static/css/bootstrap.min.css" rel="stylesheet">

<link rel="canonical" href="https://scholia.toolforge.org/author/Q26876">

<link rel="stylesheet" type="text/css" href="/static/css/bootstrap.min.css">
<link rel="stylesheet" type="text/css" href="/static/jquery.dataTables.min.css">
<link rel="stylesheet" type="text/css" href="/static/css/scholia.css">
<link rel='stylesheet' type='text/css' href="/static/css/nightmode.css">
<!-- Generated with RealFaviconGenerator -->
<link rel="apple-touch-icon" sizes="180x180" href="/static/favicon/apple-touch-icon.png">
<link rel="icon" type="image/png" sizes="32x32" href="/static/favicon/favicon-32x32.png">
<link rel="icon" type="image/png" sizes="16x16" href="/static/favicon/favicon-16x16.png">
<link rel="manifest" href="/static/favicon/site.webmanifest">
<link rel="mask-icon" href="/static/favicon/safari-pinned-tab.svg" color="#09af8a">
<link rel="shortcut icon" href="/static/favicon/favicon.ico">
<meta name="apple-mobile-web-app-title" content="Scholia">
<meta name="application-name" content="Scholia">
<meta name="msapplication-TileColor" content="#09af8a">
<meta name="theme-color" content="#09af8a">


  </head>
  <body>
    
<nav class="navbar navbar-expand-lg" style="max-width: 1200px;">
  <a class="navbar-brand" href="/"><img
      src="/static/images/scholia_wordmark.svg" width="112px" height="24px"
      alt="Scholia"></a>
  <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent"
    aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>

  <div class="collapse navbar-collapse" id="navbarSupportedContent">
    <ul class="navbar-nav mr-auto">
	<li class="nav-item"><a class="nav-link" href="/author/">Author</a></li>
	<li class="nav-item dropdown">
    <a class="nav-link dropdown-toggle" href="#" id="workDropdown" role="button" data-toggle="dropdown"
      aria-haspopup="true" aria-expanded="false">
      Work
    </a>
    <div class="dropdown-menu" aria-labelledby="workDropdown">
      <a class="dropdown-item" href="/work/">Work</a>
      <a class="dropdown-item" href="/venue/">Venue</a>
      <a class="dropdown-item" href="/series/">Series</a>
      <a class="dropdown-item" href="/catalogue/">Catalogue</a>
      <a class="dropdown-item" href="/publisher/">Publisher</a>
      <a class="dropdown-item" href="/printer/">Printer</a>
    </div>
	</li>
	<li class="nav-item dropdown">
    <a class="nav-link dropdown-toggle" href="#" id="organisationDropdown" role="button" data-toggle="dropdown"
      aria-haspopup="true" aria-expanded="false">
      Organization
    </a>
    <div class="dropdown-menu" aria-labelledby="organisationDropdown">
      <a class="dropdown-item" href="/organization/">Organization</a>
      <a class="dropdown-item" href="/publisher/">Publisher</a>
      <a class="dropdown-item" href="/printer/">Printer</a>
      <a class="dropdown-item" href="/sponsor/">Sponsor</a>
    </div>
	</li>
	<li class="nav-item dropdown">
    <a class="nav-link dropdown-toggle" href="#" id="locationDropdown" role="button" data-toggle="dropdown"
      aria-haspopup="true" aria-expanded="false">
      Location
    </a>
    <div class="dropdown-menu" aria-labelledby="locationDropdown">
      <a class="dropdown-item" href="/location/">Location</a>
      <a class="dropdown-item" href="/country/">Country</a>
    </div>
	</li>
	<li class="nav-item dropdown">
    <a class="nav-link dropdown-toggle" href="#" id="eventDropdown" role="button" data-toggle="dropdown"
      aria-haspopup="true" aria-expanded="false">
      Event
    </a>
    <div class="dropdown-menu" aria-labelledby="eventDropdown">
      <a class="dropdown-item" href="/event/">Event</a>
      <a class="dropdown-item" href="/event-series/">Event series</a>
    </div>
	</li>
	<li class="nav-item dropdown">
    <a class="nav-link dropdown-toggle" href="#" id="projectDropdown" role="button" data-toggle="dropdown"
      aria-haspopup="true" aria-expanded="false">
      Project
    </a>
    <div class="dropdown-menu" aria-labelledby="projectDropdown">
      <a class="dropdown-item" href="/clinical-trial/">Clinical trial</a>
      <a class="dropdown-item" href="/project/">Project</a>
      <a class="dropdown-item" href="/wikiproject/">WikiProject</a>
    </div>

	</li>
	<li class="nav-item"><a class="nav-link" href="/award/">Award</a></li>
  <li class="nav-item dropdown">
    <a class="nav-link dropdown-toggle" href="#" id="topicDropdown" role="button" data-toggle="dropdown"
      aria-haspopup="true" aria-expanded="false">
      Topic
    </a>
    <div class="dropdown-menu" aria-labelledby="projectDropdown">
      <a class="dropdown-item" href="/topic/">General</a>
      <a class="dropdown-item" href="/disease/">Disease</a>
      <a class="dropdown-item" href="/taxon/">Taxon</a>
      <a class="dropdown-item" href="/gene/">Gene</a>
      <a class="dropdown-item" href="/protein/">Protein</a>
      <a class="dropdown-item" href="/pathway/">Pathway</a>
      <a class="dropdown-item" href="/chemical/">Chemical</a>
      <a class="dropdown-item" href="/chemical-element/">Chemical element</a>
      <a class="dropdown-item" href="/chemical-class/">Chemical class</a>
      <a class="dropdown-item" href="/lexeme/">Lexeme</a>
      <a class="dropdown-item" href="/ontology/">Ontology</a>
      <a class="dropdown-item" href="/software/">Software</a>
      <a class="dropdown-item" href="/use/">Use</a>
    </div>
  </li>
	<li class="nav-item dropdown">
    <a class="nav-link dropdown-toggle" href="#" id="toolsDropdown" role="button" data-toggle="dropdown"
      aria-haspopup="true" aria-expanded="false">
      Tools
    </a>
    <div class="dropdown-menu" aria-labelledby="toolsDropdown">
      <a class="dropdown-item" href="/id-to-quickstatements">Identifier to Quickstatements</a>
      <a class="dropdown-item" href="/q-to-bibliography-templates">Q to Bibliography templates</a>
      <a class="dropdown-item" href="/text-to-topics">Text to topics</a>
    </div>
	</li>
	<li class="nav-item dropdown">
    <a class="nav-link dropdown-toggle" href="#" id="helpDropdown" role="button" data-toggle="dropdown"
      aria-haspopup="true" aria-expanded="false">
      Help
    </a>
    <div class="dropdown-menu" aria-labelledby="helpDropdown">
      <a class="dropdown-item" href="/about">About</a>
      <a class="dropdown-item" href="/statistics">Statistics</a>
      <a class="dropdown-item" href="/faq">FAQ</a>
    </div>
	</li>
    
    </ul>
    
    <div class='nav nav-search'>
        <input class="form-control" type="text" id="searchterm" placeholder="Search..."/>
    </div>
    
  </div>
</nav>

    
<div class="content">
<div class="container d-flex justify-content-between">
    <div class="dropdown" id="aspect-chooser">
    </div>
    <div>
      
      <a id='curation-link' role="button" class="btn btn-outline-secondary d-none">Improve data</a>
      
    </div>
</div>
<div class="container">
    

<h1 id="h1">Author</h1>
<script type="application/ld+json" id="bioschemas"></script>

<div id="intro"></div>

<div id="wembedder"></div>

<div id="details"></div>

<h2 id="list-of-publications">List of publications <a href="/author/Q26876/latest-works/rss"><img height="24" width="48" src="/static/images/rss-40674_320.png" alt="RSS icon" /></a></h2>

<table class="table table-hover" id="list-of-publications-table"></table>


<!--      SourceMD does currently not work

div>


    Missing publications? 
    
    <a href="https://query.wikidata.org/#select%20%2a%20where%20%7B%20%3Fwork%20wdt%3AP2093%20%3Fauthorname%20.%20filter%28regex%28%3Fauthorname%2C%20%27%5ET.%2bSwift%24%27%29%29%20%7D%20limit%201">Search for unlinked works on Wikidata</a>
    or
    add new ones with <a href="https://sourcemd.toolforge.org/">sourcemd</a>.
    
    
</div -->


<h3 id="publications-per-year">Number of publications per year</h3>

<div class="embed-responsive embed-responsive-16by9">
    <iframe class="embed-responsive-item" id="publications-per-year-iframe"></iframe>
</div>


<h3 id="pages-per-year">Number of pages per year</h3>

(Only articles with number of pages set are displayed)

<div class="embed-responsive embed-responsive-16by9">
    <iframe class="embed-responsive-item" id="pages-per-year-iframe"></iframe>
</div>

<h2>Topics</h2>


<h3 id="topic-scores">Topic scores</h3>

Topics based on a weighting between fields of work,
topics of authored works and topics of citing works.  

<div class="embed-responsive embed-responsive-4by3">
    <iframe class="embed-responsive-item" id="topic-scores-iframe"></iframe>
</div>


<h3 id="topics">Topics of authored works</h3>

<table class="table table-hover" id="topics-table"></table>

<h3 id="topics-works">Topics-works matrix</h3>

<div id="topics-works-matrix"></div>


<h2 id="use">Use</h3>

Resources used in authored works.

<table class="table table-hover" id="use-table"></table>


<h2 id="venue-statistics">Venue statistics</h2>

<div class="embed-responsive embed-responsive-4by3">
    <iframe class="embed-responsive-item" id="venue-statistics-chart-iframe"></iframe>
</div>

<table class="table table-hover" id="venue-statistics-table"></table>

<h2 id="review-statistics">Review statistics</h2>
<p>This author has reviewed for the following journals.</p>
<table class="table table-hover" id="review-statistics-table"></table>

<h2 id="coauthors" data-toogle="tooltip" title="Co-author graph for the author (up to 1000 links)">Co-author graph</h2>

<div class="embed-responsive embed-responsive-4by3">
    <iframe class="embed-responsive-item" id="coauthors-iframe"></iframe>
</div>

Are co-authors missing here? You can help curate them via the <a href="/author/Q26876/curation">curation</a> page.

<h2 id="coauthor-map">Co-author map</h2>

<div class="embed-responsive embed-responsive-4by3">
    <iframe class="embed-responsive-item" id="coauthor-map-iframe"></iframe>
</div>


<h2 id="other-locations">Other locations</h2>

<div class="embed-responsive embed-responsive-4by3">
    <iframe class="embed-responsive-item" id="other-locations-iframe"></iframe>
</div>


<h2 id="timeline">Timeline</h2>


<div class="embed-responsive embed-responsive-16by9">
    <iframe class="embed-responsive-item" id="timeline-iframe"></iframe>
</div>

<h2 id="academic-tree">Academic tree</h2>

<div class="embed-responsive embed-responsive-4by3">
    <iframe class="embed-responsive-item" id="academic-tree-iframe"></iframe>
</div>


<h2 id="citation-statistics">Citation statistics</h2>

<h3 id="most-cited-works">Most cited works</h3>

Works of the author ordered according to number of citations received.

<table class="table table-hover" id="most-cited-works-table"></table>


<h3 id="citations-by-year">Citations by year</h3>

<div class="embed-responsive embed-responsive-16by9">
    <iframe class="embed-responsive-item" id="citations-by-year-iframe"></iframe>
</div>


<h3 id="most-citing-authors">Citing authors</h3>

Authors that cite the author (excluding self citations).

<table class="table table-hover" id="most-citing-authors-table"></table>

Are citing authors missing here? You can help curate them via the <a href="/author/Q26876/curation">curation</a> page.

<h2 id="associated-images">Associated images</h2>

<div class="embed-responsive embed-responsive-4by3">
    <iframe class="embed-responsive-item" id="associated-images-iframe"></iframe>
</div>


<h2 id="events">Events</h2>

Conferences, workshops and other events the author has attended or otherwise been associated with.

<table class="table table-hover table-striped" id="events-table"></table>


</div>
</div>
<div class="container footer">
    <hr>
    Data from <a href="https://www.wikidata.org">Wikidata</a> and
    <a href="https://en.wikipedia.org">English Wikipedia</a>
    |
    Code from
    <a href="https://github.com/WDscholia/scholia">GitHub repository</a>
    |
    Hosted on   <a href="https://toolforge.org/">Wikimedia Toolforge</a>,
    a <a href="https://wikimediafoundation.org">Wikimedia Foundation</a> service
    |
    License for content: CC0 for data, CC-BY-SA for text and media
    |
    Report technical problems at Scholia's
    <a href="https://github.com/WDscholia/scholia/issues">Issues</a> GitHub page.
    |
    Follow us on <a href="https://wikis.world/@wdscholia">Mastodon</a>.
    <hr>
  </div>


    

    <script src="/static/jquery.min.js"></script>
    <script src="/static/js/popper.min.js"></script>
    <script src="/static/js/bootstrap.min.js"></script>

<script type="text/javascript" src="/static/d3.v5.min.js"></script>
<script type="text/javascript" src="/static/d3-scale-chromatic.v1.min.js"></script>
<script type="text/javascript" src="/static/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="/static/scholia.js"></script>

<script type="text/javascript" src="/static/bootstrap-autocomplete.min.js"></script>

<script type="text/javascript">
    
    var url = 'https://www.wikidata.org/w/api.php?action=wbgetentities&ids=' +
	       'Q26876' + 
	       '&format=json&callback=?';
    
    const currentAspect = window.location.pathname.split("/")[1];
     
    $.getJSON(url, function (data) {
	 var item = data.entities["Q26876"];
	 if ('en' in item.labels) {
	     var title = item.labels.en.value
	     $("#h1").text(title);
	     $(".self").text(title);
       $("title").text(title + " - Scholia");

	     
	 }
	 $("#h1").append(' (<a href="https://www.wikidata.org/wiki/Q26876">Q26876</a>)');

    

	if ("P18" in item.claims) {
        // Find P18 claim which is not deprecated
        const p18Claim = item.claims.P18.find(function (claim) {
            return claim.rank !== "deprecated";
        });

        if (undefined !== p18Claim) {
            var imageName = p18Claim.mainsnak.datavalue.value;
            // spaces must be replaced by underscores in the file name
            imageName = imageName.replaceAll(" ", "_")
            var imageNameMd5 = md5(imageName);
            var imageURL = "https://upload.wikimedia.org/wikipedia/commons/thumb/"
            imageURL += imageNameMd5[0] + "/" + imageNameMd5.slice(0,2) + "/"
            var filetype = imageName.match(/\.(\w+)$/);
            var extension = filetype[1].toLowerCase()
            if (extension === "tif" || extension === "tiff") {
              imageURL += encodeURIComponent(imageName) + "/lossy-page1-500px-" + encodeURIComponent(imageName) + ".jpg";
            } else if (extension === "svg") {
              imageURL += encodeURIComponent(imageName) + "/500px-" + encodeURIComponent(imageName) + ".png";
            } else {
              imageURL += encodeURIComponent(imageName) + "/500px-" + encodeURIComponent(imageName);
            }
            var itemImage = document.getElementById("item-image");
            if (itemImage) {
              itemImage.src = imageURL;
              itemImage.title = imageName.slice(0, imageName.lastIndexOf('.'));
              itemImage.setAttribute('alt', imageName);

              var link = document.createElement('a');
              link.href = "https://commons.wikimedia.org/wiki/File:" + encodeURIComponent(imageName);
              link.style = "max-width: 50%"
              var parent = itemImage.parentNode;
              parent.replaceChild(link, itemImage);
              link.appendChild(itemImage);
            }
        }
	}

	if ("P10286" in item.claims) {
	    var imageURL = item.claims.P10286[0].mainsnak.datavalue.value;
	    var itemImage = document.getElementById("item-image");
	    if (itemImage) {
            itemImage.src = imageURL;
        }
    }

	function socialMediaLink(detailsList, user, site, logo = '') {
	     var html = '';
	     if (logo) {
	        html += '<a href="' + site.url + '"><img alt="' + site.name + ' logo" src="';
	        html += logo.src + '" width="16" height="16" hspace="4" /></a> ';
	     }
	     html += '<a href="' + site.url + encodeURI(user.name) + '">';
	     html += user.prefix + escapeHTML(user.name) + '</a>';
	     detailsList.push(html);
	 }

	 function sortRank(a, b) {
	  const aRank = a["rank"];
	  const bRank = b["rank"];
	  if (aRank == bRank) {
	    return 0;
	  }
	  if (aRank == "preferred" || bRank == "deprecated") {
	    return -1;
	  }
	  if (bRank == "preferred" || aRank == "deprecated") {
	    return 1;
	  }
    return 0;
	}

	 var detailsList = Array();
	 if ("P496" in item.claims) {
	     var user = {name: item.claims.P496[0].mainsnak.datavalue.value, prefix: 'https://orcid.org/'};
		   var site = {name: "ORCID", url: "https://orcid.org/"};
		   var logo = {src: "/static/images/orcid.svg"};
		   socialMediaLink(detailsList, user, site, logo);
	 }

	 if ("P4033" in item.claims) {
	      var mastodonAccount = item.claims.P4033[0].mainsnak.datavalue.value;
	      var mastodonComponents = mastodonAccount.split("@");
	      if (mastodonComponents.length == 2) {
	        // Mastodon user URLs start with @
	        var user = { name: '@' + mastodonComponents[0], prefix: '' };
	        var site = { name: "Mastodon", url: 'https://' + mastodonComponents[1] + '/' };
	        var logo = { src: "/static/images/mastodon.svg" };
	        socialMediaLink(detailsList, user, site, logo);
	     }
	 }

	 if ("P2037" in item.claims) {
	     var user = {name: item.claims.P2037[0].mainsnak.datavalue.value, prefix: "@"};
	     var site = { name: "GitHub", url: "https://github.com/" };
	     var logo = { src: "/static/images/github.svg" };
	     socialMediaLink(detailsList, user, site, logo);
	 }

	 if ("P6782" in item.claims) {
	     var user = { name: item.claims.P6782[0].mainsnak.datavalue.value, prefix: 'https://ror.org/' };
	     var site = { name: "Research Organization Registry", url: 'https://ror.org/' };
	     var logo = { src: "/static/images/ror.svg" };
	     socialMediaLink(detailsList, user, site, logo);
	 }

	 if ("P2572" in item.claims) {
	     var user = { name: item.claims.P2572[0].mainsnak.datavalue.value, prefix: '#' };
	     var site = { name: "Hashtag hub", url: 'https://hashtags-hub.toolforge.org/' };
	     socialMediaLink(detailsList, user, site);
	 }

	 /* Official homepage */
	 if ("P856" in item.claims) {
	     var homepage = item.claims.P856.sort(sortRank)[0]
       var homepageURL = homepage.mainsnak.datavalue.value
	     detailsList.push('&nbsp;<a href="' + homepageURL + '">' + homepageURL + '</a>');
	 }

	 if (detailsList.length > 0) {
	     $('#details').append(detailsList.join(" | "));
	 }

	 try {
	     var doi = item.claims.P356[0].mainsnak.datavalue.value;
	     $("head").append( '<meta name="citation_doi" content="' + doi + '"/>' );
	 }
	 catch(e) {}
	 
	 /* BioSchemas annotation */
	 if (item.claims.P31 &&
	     ((item.claims.P31[0].mainsnak.datavalue.value.id == 'Q5'))) {
	   try { /* Person */
	       bioschemasAnnotation = {
	          "@context" : "https://schema.org",
	          "@type" : "Person" ,
	          "http://purl.org/dc/terms/conformsTo": { "@type": "CreativeWork", "@id": "https://bioschemas.org/profiles/Person/0.2-DRAFT-2019_07_19/" },
	          "description" : "A person" ,
	          "identifier" : "Q26876" ,
	          "mainEntityOfPage" : "http://www.wikidata.org/entity/Q26876"
	       }
	       if ('en' in item.labels) {
	         bioschemasAnnotation.name = item.labels.en.value;
	       }
	       $( '#bioschemas' ).append( JSON.stringify(bioschemasAnnotation) );
	    } catch(e) {}
	 } else if (item.claims.P31 &&
	     ((item.claims.P31[0].mainsnak.datavalue.value.id == 'Q47461491') ||
	      (item.claims.P31[0].mainsnak.datavalue.value.id == 'Q967847'))) {
	   try { /* ChemicalSubstance */
	       bioschemasAnnotation = {
	          "@context" : "https://schema.org",
	          "@type" : "ChemicalSubstance" ,
	          "http://purl.org/dc/terms/conformsTo": { "@type": "CreativeWork", "@id": "https://bioschemas.org/profiles/ChemicalSubstance/0.4-RELEASE/" },
	          "identifier" : "Q26876" ,
	          "url" : "http://www.wikidata.org/entity/Q26876"
	       }
	       if ('en' in item.labels) {
	         bioschemasAnnotation.name = item.labels.en.value;
	       }
	       $( '#bioschemas' ).append( JSON.stringify(bioschemasAnnotation) );
	    } catch(e) {}
	 } else if (item.claims.P225) {
             try { /* Taxon */
		 var taxonName = item.claims.P225[0].mainsnak.datavalue.value;
		 bioschemasAnnotation = {
	             "@context" : "https://schema.org",
	             "@type" : "Taxon" ,
	             "http://purl.org/dc/terms/conformsTo": { "@type": "CreativeWork", "@id": "https://bioschemas.org/profiles/Taxon/0.6-RELEASE/" },
	             "name" : taxonName ,
	             "url" : "http://www.wikidata.org/entity/Q26876"
		 }
		 if (item.claims.P105) {
	             var taxonRank = item.claims.P105[0].mainsnak.datavalue.value.id;
	             bioschemasAnnotation.taxonRank = "http://www.wikidata.org/entity/" + taxonRank ;
		 }
		 if (item.claims.P171) {
	             var parent = item.claims.P171[0].mainsnak.datavalue.value.id;
	             bioschemasAnnotation.parentTaxon = "http://www.wikidata.org/entity/" + parent ;
		 }
		 $( '#bioschemas' ).append( JSON.stringify(bioschemasAnnotation) );
		 // console.log(JSON.stringify(bioschemasAnnotation, "", 2))
	     } catch(e) {}
	 } else if (item.claims.P235) {
	     try { /* Chemical Compound */
		 var inchiKey = item.claims.P235[0].mainsnak.datavalue.value;
		 bioschemasAnnotation = {
	             "@context" : "https://schema.org",
	             "@type" : "MolecularEntity" ,
	             "http://purl.org/dc/terms/conformsTo": { "@type": "CreativeWork", "@id": "https://bioschemas.org/profiles/MolecularEntity/0.5-RELEASE/" },
	             "identifier" : "Q26876" ,
	             "inChIKey" : inchiKey ,
	             "url" : "http://www.wikidata.org/entity/Q26876"
		 }
		 if ('en' in item.labels) {
	         bioschemasAnnotation.name = item.labels.en.value;
         }
		 if (item.claims.P234 && item.claims.P234[0].mainsnak.datavalue) {
	             var inchi = item.claims.P234[0].mainsnak.datavalue.value;
	             bioschemasAnnotation.inChI = inchi ;
		 }
		 if (item.claims.P274 && item.claims.P274[0].mainsnak.datavalue) {
	             var chemformula = item.claims.P274[0].mainsnak.datavalue.value;
	             bioschemasAnnotation.molecularFormula = chemformula ;
		 }
		 if (item.claims.P2017 && item.claims.P2017[0].mainsnak.datavalue) {
	             var smiles = item.claims.P2017[0].mainsnak.datavalue.value;
	             bioschemasAnnotation.molecularFormula = smiles.replace("\"", "\'\'") ;
		 } else if (item.claims.P233 && item.claims.P233[0].mainsnak.datavalue) {
	             var smiles = item.claims.P233[0].mainsnak.datavalue.value;
	             bioschemasAnnotation.smiles = smiles.replace("\"", "\'\'") ;
		 }
		 $( '#bioschemas' ).append( JSON.stringify(bioschemasAnnotation) );
	     } catch(e) { console.error("Exception: " + e)
	     }
	 } else if (item.claims.P352) { // UniProt ID
	     try { /* Protein */
		 var uniprot = item.claims.P352[0].mainsnak.datavalue.value;
		 bioschemasAnnotation = {
	             "@context" : "https://schema.org",
	             "@type" : "Protein" ,
	             "http://purl.org/dc/terms/conformsTo": { "@type": "CreativeWork", "@id": "https://bioschemas.org/profiles/Protein/0.11-RELEASE/" },
	             "identifier" : "Q26876" ,
	             "url" : "http://www.wikidata.org/entity/Q26876" ,
	             "sameAs": "https://www.uniprot.org/uniprot/" + uniprot
		 }
		 if ('en' in item.labels) {
	       bioschemasAnnotation.name = item.labels.en.value;
         }
		 $( '#bioschemas' ).append( JSON.stringify(bioschemasAnnotation) );
	     } catch(e) { console.error("Exception: " + e)
	     }
	 } else if (item.claims.P351 || item.claims.P594) { // NCBI Gene or Ensembl
	     try { /* Gene */
		 bioschemasAnnotation = {
	             "@context" : "https://schema.org",
	             "@type" : "Gene" ,
	             "http://purl.org/dc/terms/conformsTo": { "@type": "CreativeWork", "@id": "https://bioschemas.org/profiles/Gene/0.7-RELEASE/" },
	             "identifier" : "Q26876" ,
	             "url" : "http://www.wikidata.org/entity/Q26876"
		 }
		 if ('en' in item.labels) {
	       bioschemasAnnotation.name = item.labels.en.value;
         }
		 counter = 0
		 bioschemasAnnotation.sameAs = []
		 if (item.claims.P351 && item.claims.P351[0].mainsnak.datavalue) {
	             var ncbi = item.claims.P351[0].mainsnak.datavalue.value;
	             bioschemasAnnotation.sameAs[counter] = "https://www.ncbi.nlm.nih.gov/gene/" + ncbi;
	             counter++
		 }
		 if (item.claims.P594 && item.claims.P594[0].mainsnak.datavalue) {
	             var ensembl = item.claims.P594[0].mainsnak.datavalue.value;
	             bioschemasAnnotation.sameAs[counter] = "http://identifiers.org/ensembl/" + ensembl;
		 }
		 $( '#bioschemas' ).append( JSON.stringify(bioschemasAnnotation) );
	     } catch(e) { console.error("Exception: " + e)
	     }
	 }
	 
	 /* English Wikipedia */
	 if ('enwiki' in item.sitelinks) {
	     var title = item.sitelinks.enwiki.title;
	     var wikipediaApiUrl = 'https://en.wikipedia.org/api/rest_v1/page/summary/' +
				   encodeURIComponent(title);
	     var wikipediaUrl = 'https://en.wikipedia.org/wiki/' + encodeURIComponent(title)

	     var headers = new Headers({"Api-User-Agent": "https://github.com/WDscholia/scholia"});

	     fetch(wikipediaApiUrl, {method: 'GET', headers: headers})
	     .then(response => response.json())
	     .then(data => {
	       var html = " (<a href=\"" + wikipediaUrl + "\">Read more on English Wikipedia</a>)";
		 $("#intro").text(data.extract).append(html);
	     }).catch(error => {
		 var html = "<a href=\"" + wikipediaUrl + "\">View on English Wikipedia</a>";
         $("#intro").append(html);
		 console.error('Could not get summary from enwiki: ', error);
	     });
	 }

	 
	 /* English Wikiversity */
	 if ('enwikiversity' in item.sitelinks) {
	     var enwikiversityTitle = item.sitelinks.enwikiversity.title;
	     var wikiversityApiUrl = 'https://en.wikiversity.org/w/api.php?' +
				     'action=query&prop=extracts&exsentences=3&exlimit=1&exintro=1&' + 
				     'explaintext=1&callback=?&format=json&titles=' +
				     encodeURIComponent(enwikiversityTitle);
	     var wikiversityUrl = 'https://en.wikiversity.org/wiki/' + encodeURIComponent(enwikiversityTitle)

	     $.getJSON(wikiversityApiUrl, function(data) {
		 var pages = data.query.pages;
		 var text = pages[Object.keys(pages)[0]].extract; 
		 if (text) {
		     var html = "... (from the <a href=\"" + wikiversityUrl + "\">English Wikiversity</a>)";
		 }
		 else {
		     var html = "Read on the <a href=\"" + wikiversityUrl + "\">English Wikiversity</a>";
		 }
		 $("#wikiversity-extract").text(text).append(html);
	     }).fail(function(d, textStatus, error) {
		 var html = "Read on the <a href=\"" + wikiversityUrl + "\">English Wikiversity</a>";
		 $("#wikiversity-extract").append(html);
		 console.error("getJSON failed, status: " + textStatus + ", error: "+error)
	     });
	 }

     });

    var curationElement = document.getElementById("curation-link");

    
      curationElement.href = "/" + currentAspect + "/Q26876/curation";
    
    curationElement.classList.remove("d-none");

     // this query opens the Wikidata item as a different aspect
     var endpointUrl = 'https://query.wikidata.org/sparql';
    if ("".length) {
        var query = `
    SELECT DISTINCT ?aspect 
    WHERE {
    { [] wdt:P17 wd:Q26876 . BIND("country" AS ?aspect) }
    UNION
    { wd:Q26876 wdt:P159? / wdt:P625 [] . BIND("location" AS ?aspect) } 
    UNION 
    { [] wdt:P1416 | wdt:P108 wd:Q26876 . BIND("organization" AS ?aspect) }
    }
    `;
    } else {
     var query = `
    SELECT DISTINCT ?aspect 
    WHERE {
    { [] wdt:P50 wd:Q26876 . BIND("author" AS ?aspect) }
    UNION 
    { [] wdt:P166 wd:Q26876 . BIND("award" AS ?aspect) }
    UNION
    { wd:Q26876 wdt:P31 / wdt:P279?  wd:Q22325163 . BIND("complex" AS ?aspect) }
    UNION 
    { [] wdt:P17 wd:Q26876 . BIND("country" AS ?aspect) }
    UNION
    { [] wdt:P972 wd:Q26876 . BIND("catalogue" AS ?aspect) }
    UNION
    { wd:Q26876 wdt:P235 [] . BIND("chemical" AS ?aspect) }
    UNION
    { wd:Q26876 ^wdt:P31/wdt:P235 [] . BIND("chemical-class" AS ?aspect) }
    UNION
    { wd:Q26876 wdt:P644 [] . BIND("gene" AS ?aspect) }
    UNION
    { wd:Q26876 wdt:P159? / wdt:P625 [] . BIND("location" AS ?aspect) } 
    UNION 
    { [] wdt:P1416 | wdt:P108 wd:Q26876 . BIND("organization" AS ?aspect) }
    UNION
    { wd:Q26876 wdt:P31 wd:Q2996394 . BIND("pathway" AS ?aspect) }
    UNION
    { wd:Q26876 wdt:P31 wd:Q4915012 . BIND("pathway" AS ?aspect) }
    UNION 
    { [] wdt:P872 wd:Q26876 . BIND("printer" AS ?aspect) }
    UNION
    { wd:Q26876 wdt:P31 wd:Q8054 . BIND("protein" AS ?aspect) }
    UNION
    { [] wdt:P123 wd:Q26876 . BIND("publisher" AS ?aspect) }
    UNION 
    { [] wdt:P179 wd:Q26876 . BIND("series" AS ?aspect) }
    UNION 
    { wd:Q26876 wdt:P31 / wdt:P279* wd:Q7397 . BIND("software" AS ?aspect) }
    UNION 
    { [] wdt:P859 wd:Q26876 . BIND("sponsor" AS ?aspect) }
    UNION
    { wd:Q26876 wdt:P225 [] . BIND("taxon" AS ?aspect) }
    UNION
    { [] wdt:P921 wd:Q26876 . BIND("topic" AS ?aspect) }
    UNION
    { [] wdt:P4510 wd:Q26876 . BIND("use" AS ?aspect) } 
    UNION
    { [] wdt:P1433 wd:Q26876 . BIND("venue" AS ?aspect) } 
    UNION
    { wd:Q26876 wdt:P50 | wdt:P2093 [] . BIND("work" AS ?aspect) }
    }
    `;
  }
     settings = {
	 headers: { Accept: 'application/sparql-results+json' },
	 data: { query: query }
     };
     
      $.ajax(endpointUrl, settings).then(function (data) {
        createDropdownButton("aspect-chooser", 'aspectMenuButton', currentAspect, data, "Q26876")

        if (data.results.bindings.length > 1) {
          addDropdownList("aspect-chooser", 'aspectMenuList', currentAspect, data)
        }
      }).then(function () {
        if ("".length) {
          var endpointUrl = 'https://query.wikidata.org/sparql';
          var query = "SELECT DISTINCT ?aspect WHERE {"
          query += '{ [] wdt:P921 wd:Q26876 . BIND("topic" AS ?aspect) }    }';

          settings = {
            headers: { Accept: 'application/sparql-results+json' },
            data: { query: query }
          };

          $.ajax(endpointUrl, settings).then(function (data) {
            var aspectLabel = " / <a href='/" + currentAspect + "/Q26876'>Q26876</a> / "   
            document.getElementById("aspect-chooser-label").innerHTML = aspectLabel;

            var currentSubAspect = window.location.pathname.split("/")[3];
            document.querySelectorAll("#aspectMenuList a").forEach((link) => link.href += "/" + currentSubAspect + "/")

            createDropdownButton("aspect-chooser", 'aspectMenuButton', currentSubAspect, data, "")

            if (data.results.bindings.length > 1) {
              addDropdownList("aspect-chooser", 'aspectMenuList', currentSubAspect, data)
            }
          }).fail(function (jqXHR, textStatus, errorThrown) {
            console.error("Subaspect chooser failed to generate. " + textStatus + " " + errorThrown)
          });
        }
      }).fail(function (jqXHR, textStatus, errorThrown) {
        console.error("Aspect chooser failed to generate. " + textStatus + " " + errorThrown)
      });

      function createDropdownButton(parent, id, currentAspect, data, q) {        
        var aspectDropdown = document.createElement('button');
        aspectDropdown.type = 'button';
        aspectDropdown.id = id;
        aspectDropdown.classList = 'btn btn-outline-secondary';

        // only show aspects which have a curation page with author-disambig or wikidata links
        var validCurationPages = ["author", "award", "organization", "topic", "venue"]
        

        if (data.results.bindings.length > 1) {
          aspectDropdown.classList.add('dropdown-toggle');
          aspectDropdown.setAttribute('data-toggle', 'dropdown');
          aspectDropdown.setAttribute('aria-haspopup', 'true');
          aspectDropdown.setAttribute('aria-expanded', 'false');
        }
        aspectDropdown.innerText = currentAspect;
        document.getElementById(parent).append(aspectDropdown);

        aspectDropdown.insertAdjacentHTML("afterend",
          '<span id="aspect-chooser-label" style="color: #6C757D; vertical-align: middle;margin: 2px;"> / '+ q + '</span>')
      }

      function addDropdownList(parent, id, currentAspect, data) {        
        var aspectDropdownMenu = document.createElement('div');
        aspectDropdownMenu.classList = 'dropdown-menu';
        aspectDropdownMenu.setAttribute('aria-labelledby', 'aspectMenuButton');
        aspectDropdownMenu.id = id

        data.results.bindings.forEach(function (entry) {
          var aspect = entry.aspect.value;
          if (aspect != currentAspect) {
            var dropdownItem = document.createElement('a');
            dropdownItem.classList = 'dropdown-item';
            dropdownItem.href = "/" + aspect + '/Q26876';
            
            dropdownItem.innerText = aspect;
            aspectDropdownMenu.append(dropdownItem);
          }
        });

        document.getElementById(parent).append(aspectDropdownMenu);
      }


     /* Wembedder */
     var wembedderUrl = "https://wembedder.toolforge.org/api/most-similar/Q26876";
     $.ajax({
	 url: wembedderUrl,
	 success: function (data) {
	     var html = `<hr><span data-toogle="tooltip" title="Related items from Wembedder knowledge graph embedding.">Related:</span> `; 
	     $( '#wembedder' ).append(html);

	     // Make list with results
	     data.most_similar.forEach(function(entry, idx, array) {
		 var listed_q = entry.item;
		 var language = 'en';

		 if (idx !== 0) {
		     $( '#wembedder' ).append( ' &middot; ');
		 }

		 var html = '<a href="../' + listed_q + '"><span id="wembedder-result-' + listed_q + '">' + listed_q + '</span></a> '
		 $( '#wembedder' ).append( html );

		 // Convert Q identifier to labels
                 $.getJSON("https://www.wikidata.org/w/api.php?callback=?", {
                     action: "wbgetentities",
                     ids: listed_q,
                     language: language,
                     uselang: language,
                     format: "json",
                     strictlanguage: true,
                 }, function (data) {
                     if (listed_q in data.entities) {
                         label = entityToLabel(data.entities[listed_q],
                                               language=language);
                         $('#wembedder-result-' + listed_q).empty();
                         $('#wembedder-result-' + listed_q).text(label);
                     }
		 });
	     });
	     $( '#wembedder' ).append( '<hr>' );
	 },
	 error: function (jqXHR, textStatus, errorThrown) {
         console.error("Wembedder failed. " + textStatus + " " + errorThrown)
	 },
     });
  

  

  $(document).ready(function () {
    $('#searchterm').autoComplete({
      minLength: 2,
      resolver: 'custom',
      events: {
        search: debounce((searchTerm, callback) => {
          var url = "https://www.wikidata.org/w/api.php?callback=?";
          var settings = {
            dataType: 'jsonp',
            data: {
              search: searchTerm,
              action: "wbsearchentities",
              language: "en",
              uselang: "en",
              format: "json",
              strictlanguage: true
            }
          };

          $.ajax(url, settings).then(function (data) {
            if (data.search.length) {
              let results = ['Show all results for "' + searchTerm + '"']
              for (let item of data.search) {
                results.push(item.label + " - " + item.description + " (" + item.title + ")");
              }
              callback(results)
            } else {
              callback([])
            }
          }).fail(function (jqXHR, textStatus, errorThrown) {
            callback(["Search failed"])
            console.error("Search failed. " + textStatus + " " + errorThrown)
          });
        }, 200)
      }
    });

    $("#searchterm").on("autocomplete.select", (event, item) => { handleSearch(item) });

    $("#searchterm").on("keydown", function (event) {
      switch (event.key) {
        case "Enter":
          handleSearch(this.value);
          break;
        default:
      }
    });

    $("#searchbutton").on("click", () => { handleSearch(document.getElementById("searchterm").value) })

    function handleSearch(item) {
      // headerSearch and authorIndexAutocomplete reference where the two formats come from
      let headerSearch =  item.match(/ \((Q\d+)\)$/);
      if (headerSearch) {
        window.location.href = "/" + headerSearch[1];
      } else {
        let authorIndexAutocomplete = item.match(/\/\w+\/Q\d+$/);
        if (authorIndexAutocomplete) {
          window.location.href = item;
        } else {
          let search_text = item.match(/Show all results for "(.+)"$/)
          if (search_text) {
            window.location.href = "/search?q=" + search_text[1];
          } else {
            window.location.href = "/search?q=" + item;
          }
        }
      }
    }

    function debounce(callback, wait) {
      let timeout;
      return (...args) => {
        clearTimeout(timeout);
        timeout = setTimeout(function () {
          callback.apply(this, args);
        }, wait);
      };
    }

     // Add table of content
  var headings = document.querySelectorAll("h2,h3");
  if (headings.length >= 3) {
    var tocParent = document.createElement("div");
    tocParent.className = "table-of-contents"

    var toc = document.createElement("div");

    tocTitle = document.createElement("b");
    tocTitle.innerText = "Table of Contents"
    toc.appendChild(tocTitle)

    var tocList = document.createElement("ul");
    var sublist = "";
    for (let i = 0; i < headings.length; i++) {
      const element = headings[i];
      if (!element.id) {
        element.id = element.innerText.replaceAll(" ", "-");
      }
      if (element.tagName === "H3" && !sublist) {
        var sublist = document.createElement("ul");
      }
      tocListItem = document.createElement("li");

      tocEntry = document.createElement("a");
      tocEntry.setAttribute("href", "#" + element.id);
      tocEntry.innerText = headings[i].innerText;

      tocListItem.appendChild(tocEntry);

      if (element.tagName === "H3") {
        sublist.appendChild(tocListItem);
        if (i == headings.length - 1) {
          tocList.appendChild(sublist);
        }
      } else {
        if (sublist) {
          tocList.appendChild(sublist);
          sublist = "";
        }
        tocList.appendChild(tocListItem);
      }
    }

    toc.appendChild(tocList)

    var itemImage = document.createElement("img");
    itemImage.id = "item-image";
    itemImage.alt = "";
    itemImage.href = "";
    itemImage.onclick = function () {
            window.location.href = itemImage.href;
    };	  

    tocParent.appendChild(toc);
    tocParent.appendChild(itemImage);
    document.querySelector("h2").insertAdjacentElement("beforebegin", tocParent)
    
    itemImage.height = toc.clientHeight
  }

    // Add anchor links to all headings
    var headers = document.querySelectorAll('h2[id], h3[id]')
    if (headers) {
      headers.forEach(element => {
        var title = element.innerText;
        element.removeChild(element.childNodes[0])
        element.insertAdjacentHTML('afterbegin', `<a href="#${element.id}" class="hlink"  ariaLabel="Anchor">${title}</a>`)
      })
    }

     

// list-of-publications table
sparqlToDataTable(`# tool: scholia
#defaultView:Table
PREFIX target: <http://www.wikidata.org/entity/Q26876>

SELECT
  (MIN(?dates) AS ?date)
  ?work ?workLabel
  (GROUP_CONCAT(DISTINCT ?type_label; separator=", ") AS ?type)
  (SAMPLE(?pages_) AS ?pages)
  ?venue ?venueLabel
  (GROUP_CONCAT(DISTINCT ?author_label; separator=", ") AS ?authors)
  (CONCAT("../authors/", GROUP_CONCAT(DISTINCT SUBSTR(STR(?author), 32); separator=",")) AS ?authorsUrl)
WHERE {
  ?work wdt:P50 target: .
  ?work wdt:P50 ?author .
  OPTIONAL {
    ?author rdfs:label ?author_label_ . FILTER (LANG(?author_label_) = 'en')
  }
  BIND(COALESCE(?author_label_, SUBSTR(STR(?author), 32)) AS ?author_label)
  OPTIONAL { ?work wdt:P31 ?type_ . ?type_ rdfs:label ?type_label . FILTER (LANG(?type_label) = 'en') }
  ?work wdt:P577 ?datetimes .
  BIND(xsd:date(?datetimes) AS ?dates)
  OPTIONAL { ?work wdt:P1104 ?pages_ }
  OPTIONAL { ?work wdt:P1433 ?venue }
  SERVICE wikibase:label { bd:serviceParam wikibase:language "en,da,de,es,fr,jp,no,ru,sv,zh". }  
}
GROUP BY ?work ?workLabel ?venue ?venueLabel
ORDER BY DESC(?date)  
`,
"#list-of-publications-table", "author_list-of-publications.sparql",
options={});
// venue-statistics table
sparqlToDataTable(`# tool: scholia
PREFIX target: <http://www.wikidata.org/entity/Q26876>

# Venue statistics for a specific author
SELECT
  ?count (SAMPLE(?short_name_) AS ?short_name)
  ?venue ?venueLabel (CONCAT("/venue/", SUBSTR(STR(?venue), 32)) AS ?venueUrl)
  ?topics ?topicsUrl
WITH {
  SELECT
    (COUNT(DISTINCT ?work) as ?count)
    ?venue
    (GROUP_CONCAT(DISTINCT ?topic_label; separator=", ") AS ?topics)
    (CONCAT("../topics/", GROUP_CONCAT(DISTINCT SUBSTR(STR(?topic), 32); separator=",")) AS ?topicsUrl)
  WHERE {
    ?work wdt:P50 target: .
    ?work wdt:P1433 ?venue .
    OPTIONAL {
      ?venue wdt:P921 ?topic .
      ?topic rdfs:label ?topic_label . FILTER(LANG(?topic_label) = 'en') }
  }
  GROUP BY ?venue
} AS %result
WHERE {
  INCLUDE %result
  OPTIONAL { ?venue wdt:P1813 ?short_name_ . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language "en,da,de,es,fr,jp,nl,no,ru,sv,zh". }  
} 
GROUP BY ?count ?venue ?venueLabel ?topics ?topicsUrl
ORDER BY DESC(?count)
`,
"#venue-statistics-table", "author_venue-statistics.sparql",
options={});
// review-statistics table
sparqlToDataTable(`# tool: scholia
# Venue statistics for a specific reviewer
PREFIX target: <http://www.wikidata.org/entity/Q26876>

SELECT
  ?count (SAMPLE(?short_name_) AS ?short_name)
  ?venue ?venueLabel
  ?topics ?topicsUrl
WITH {
  SELECT
    (COUNT(DISTINCT ?work) as ?count)
    ?venue
    (GROUP_CONCAT(DISTINCT ?topic_label; separator=", ") AS ?topics)
    (CONCAT("../topics/", GROUP_CONCAT(DISTINCT SUBSTR(STR(?topic), 32); separator=",")) AS ?topicsUrl)
  WHERE {
    ?work wdt:P4032 target: .
    ?work wdt:P1433 ?venue .
    OPTIONAL {
      ?venue wdt:P921 ?topic .
      ?topic rdfs:label ?topic_label . FILTER(LANG(?topic_label) = 'en') }
  }
  GROUP BY ?venue
} AS %result
WHERE {
  INCLUDE %result
  OPTIONAL { ?venue wdt:P1813 ?short_name_ . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language "en,da,de,es,fr,jp,nl,no,ru,sv,zh". }  
} 
GROUP BY ?count ?venue ?venueLabel ?topics ?topicsUrl
ORDER BY DESC(?count)
`,
"#review-statistics-table", "author_review-statistics.sparql",
options={});
// topics table
sparqlToDataTable(`# tool: scholia
#defaultView:Table
PREFIX target: <http://www.wikidata.org/entity/Q26876>

SELECT ?count ?theme ?themeLabel ?example_work ?example_workLabel
WITH {
  SELECT (COUNT(?work) AS ?count) ?theme (SAMPLE(?work) AS ?example_work)
  WHERE {
    ?work wdt:P50 target: .
    ?work wdt:P921 ?theme .
  }
  GROUP BY ?theme
} AS %result
WHERE {
  INCLUDE %result
  SERVICE wikibase:label { bd:serviceParam wikibase:language "en,da,de,es,fr,jp,nl,no,ru,sv,zh" . } 
}
ORDER BY DESC(?count) 
`,
"#topics-table", "author_topics.sparql",
options={});
// use table
sparqlToDataTable(`# tool: scholia
PREFIX target: <http://www.wikidata.org/entity/Q26876>

SELECT
  ?count
  ?use ?useLabel (CONCAT("/use/", SUBSTR(STR(?use), 32)) AS ?useUrl)
  ("🔎" AS ?zoom)
  (CONCAT("Q26876/use/", SUBSTR(STR(?use), 32)) AS ?zoomUrl)
  ?useDescription

  ?example_work ?example_workLabel
WITH {
  SELECT
    (COUNT(?work) AS ?count)
    ?use
    (SAMPLE(?work) AS ?example_work)
  {
    ?work wdt:P50 target: ;
          wdt:P4510 ?use .
  }
  GROUP BY ?use
} AS %result
WHERE {
  INCLUDE %result
  SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }
}
ORDER BY DESC(?count)
`,
"#use-table", "author_use.sparql",
options={});
// most-cited-works table
sparqlToDataTable(`# tool: scholia
#defaultView:Table
PREFIX target: <http://www.wikidata.org/entity/Q26876>

# Author's most cited works
SELECT ?count ?work ?workLabel 
WITH {
  SELECT (count(?citing_work) as ?count) ?work WHERE {
    ?work wdt:P50 target: .
    OPTIONAL { ?citing_work wdt:P2860 ?work . }
  }
  GROUP BY ?work
} AS %result
WHERE {
  INCLUDE %result
  SERVICE wikibase:label { bd:serviceParam wikibase:language "en,da,de,es,fr,jp,nl,no,ru,sv,jp". }        
}  
ORDER BY DESC(?count)
LIMIT 500
`,
"#most-cited-works-table", "author_most-cited-works.sparql",
options={});
// most-citing-authors table
sparqlToDataTable(`# tool: scholia
#defaultView:Table
PREFIX target: <http://www.wikidata.org/entity/Q26876>

SELECT
  ?count
  ?citing_author ?citing_authorLabel

  # Either show the ORCID iD or construct part of a URL to search on the ORCID homepage
  (COALESCE(?orcid_, CONCAT("orcid-search/search/?searchQuery=", ENCODE_FOR_URI(?citing_authorLabel))) AS ?orcid)
WITH {
  SELECT (COUNT(?citing_work) AS ?count) ?citing_author WHERE {
    ?work wdt:P50 target: .
    ?citing_work wdt:P2860 ?work . 
    MINUS { ?citing_work wdt:P50 target: }
    ?citing_work wdt:P50 ?citing_author .
  }
  GROUP BY ?citing_author 
  ORDER BY DESC(?count)
  LIMIT 500
} AS %counts
WITH {
  # An author might have multiple ORCID iDs
  SELECT
    ?count
    ?citing_author
    (SAMPLE(?orcids) AS ?orcid_)
  WHERE {
    INCLUDE %counts
    OPTIONAL { ?citing_author wdt:P496 ?orcids }
  }
  GROUP BY ?count ?citing_author
} AS %result
WHERE {
  INCLUDE %result
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language "en,da,de,es,fr,jp,nl,no,ru,sv,zh". }
} 
ORDER BY DESC(?count)
`,
"#most-citing-authors-table", "author_most-citing-authors.sparql",
options={});
// events table
sparqlToDataTable(`# tool: scholia
PREFIX target: <http://www.wikidata.org/entity/Q26876>

SELECT
  (xsd:date(MIN(?start)) AS ?date)  
  ?event ?eventLabel
  (CONCAT("/event/", SUBSTR(STR(?event), 32)) AS ?eventUrl)
  (GROUP_CONCAT(DISTINCT ?role; separator=", ") AS ?roles)
  (GROUP_CONCAT(DISTINCT ?location_label; separator=", ") AS ?locations)
WHERE {
    BIND(target: AS ?person)
    {  # speaker
      ?event wdt:P823 ?person .
      BIND("speaker" AS ?role)
    } UNION {  # organizer
      ?event wdt:P664 ?person .
      BIND("organizer" AS ?role)
    } UNION {  # participant
      ?person wdt:P1344 | ^wdt:P710 ?event  .
      BIND("participant" AS ?role)
    } UNION {  # editor
      ?person ^wdt:P98 / wdt:P4745 ?event  .
      BIND("editor of proceedings" AS ?role)
    } UNION {  # author
      ?person ^wdt:P50 / wdt:P1433 / wdt:P4745 ?event  .
      BIND("author" AS ?role)
    } UNION {  # program committee member
      ?event wdt:P5804 ?person .
      BIND("program committee member" AS ?role)
    }
    OPTIONAL { ?event wdt:P276 ?location . ?location rdfs:label ?location_label . FILTER (LANG(?location_label) = 'en')}
    OPTIONAL { ?event wdt:P580 | wdt:P585 ?start }
 
    SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en,da,de,es,fr,jp,no,ru,sv,zh". }
}
GROUP BY ?event ?eventLabel
ORDER BY DESC(?date) 
`,
"#events-table", "author_events.sparql",
options={});
// publications-per-year iframe
sparqlToIframe(`# tool: scholia
#defaultView:BarChart
PREFIX target: <http://www.wikidata.org/entity/Q26876>

# Inspired from LEGOLAS - http://abel.lis.illinois.edu/legolas/
# Shubhanshu Mishra, Vetle Torvik
select ?year (count(?work) as ?number_of_publications) ?role where {
  {
    select (str(?year_) as ?year) (0 as ?pages) ("_" as ?role) where {
      # default values = 0
      ?year_item wdt:P31 wd:Q577 . 
      ?year_item wdt:P585 ?date .
      bind(year(?date) as ?year_)
      {
        select (min(?year_) as ?earliest_year)  (max(?year_) as ?latest_year) where {
          ?work wdt:P50 target: .
          ?work wdt:P577 ?publication_date . 
          bind(year(?publication_date) as ?year_)
        }
      }
      bind(year(now())+1 as ?next_year)
      filter (?year_ >= ?earliest_year && ?year_ <= ?latest_year)
    }
  }
  union {
  {
    select ?work (min(?years) as ?year) (count(?coauthors) as ?number_of_authors) ?author_number where {
      ?work (p:P50|p:P2093) ?author_statement . 
      ?author_statement ps:P50 target: .
      optional { ?author_statement pq:P1545 ?author_number . }
      ?work (wdt:P50|wdt:P2093) ?coauthors . 
      ?work wdt:P577 ?dates .
      bind(str(year(?dates)) as ?years) .
    }
    group by ?work ?author_number
  }
  bind(coalesce(if(?number_of_authors = 1,
            'Solo author',
            if(xsd:integer(?author_number) = 1,
               'First author',
               if(xsd:integer(?author_number) = ?number_of_authors,
                  'Last author',
                  'Middle author'))), 'Unknown')
       as ?role)
   }
}
group by ?year ?role
order by ?year`,
"#publications-per-year-iframe", "author_publications-per-year.sparql");
// pages-per-year iframe
sparqlToIframe(`# tool: scholia
#defaultView:BarChart
PREFIX target: <http://www.wikidata.org/entity/Q26876>

select ?year ?number_of_pages ?work_label where {
  {
    select ?year (sample(?pages) as ?number_of_pages) ?work_label where {
      {
        select (str(?year_) as ?year) (0 as ?pages) ("_" as ?work_label) where {
          ?year_item wdt:P31 wd:Q577 . 
          ?year_item wdt:P585 ?date .
          bind(year(?date) as ?year_)
          {
            select (min(?year_) as ?earliest_year) (max(?year_) as ?latest_year) where {
              ?work wdt:P50 target: .
              ?work wdt:P577 ?publication_date . 
              bind(year(?publication_date) as ?year_)
            }
          }
          filter (?year_ >= ?earliest_year && ?year_ <= ?latest_year)
        }
      }
      union {
        ?work wdt:P50 target: .
        ?work wdt:P1104 ?pages .
        ?work wdt:P577 ?date . 
        ?work rdfs:label ?long_work_label . filter(lang(?long_work_label) = 'en')
        bind(substr(?long_work_label, 1, 20) as ?work_label)
        bind(str(year(?date)) as ?year) 
      }
	} 
	group by ?year ?work ?work_label
	order by ?year 
  }
}`,
"#pages-per-year-iframe", "author_pages-per-year.sparql");
// topic-scores iframe
sparqlToIframe(`# tool: scholia
#defaultView:BubbleChart
PREFIX target: <http://www.wikidata.org/entity/Q26876>

SELECT ?score ?topic ?topicLabel
WITH {
  SELECT
    (SUM(?score_) AS ?score)
    ?topic
  WHERE {
    { 
      target: wdt:P101 ?topic .
      BIND(20 AS ?score_)
    }
    UNION
    {
      SELECT (3 AS ?score_) ?topic WHERE {
        ?work wdt:P50 target: ;
              wdt:P921 ?topic . 
      }
    }
    UNION
    {
      SELECT (1 AS ?score_) ?topic WHERE {
        ?work wdt:P50 target: .
        ?citing_work wdt:P2860 ?work .
        ?citing_work wdt:P921 ?topic . 
      }
    }
  }
  GROUP BY ?topic
} AS %results 
WHERE {
  INCLUDE %results
  SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en,da,de,es,jp,no,ru,sv,zh". }
}
ORDER BY DESC(?score)
LIMIT 200`,
"#topic-scores-iframe", "author_topic-scores.sparql");
// venue-statistics-chart iframe
sparqlToIframe(`# tool: scholia
#defaultView:BubbleChart
PREFIX target: <http://www.wikidata.org/entity/Q26876>

SELECT ?count ?venue (SAMPLE(?venue_label_) AS ?venue_label) 
WITH {
  SELECT (COUNT(?work) as ?count) ?venue WHERE {
    ?work wdt:P50 target: .
    ?work wdt:P1433 ?venue .
  }
  GROUP BY ?venue
} AS %counts
WHERE {
  INCLUDE %counts
  ?venue rdfs:label ?long_venue_label FILTER(LANG(?long_venue_label) = 'en')
  OPTIONAL { ?venue wdt:P1813 ?short_name . }
  BIND(COALESCE(?short_name, ?long_venue_label) AS ?venue_label_)
}
GROUP BY ?venue ?count
ORDER BY DESC(?count)  `,
"#venue-statistics-chart-iframe", "author_venue-statistics-chart.sparql");
// coauthors iframe
sparqlToIframe(`# tool: scholia
#defaultView:Graph
PREFIX target: <http://www.wikidata.org/entity/Q26876>

# Egocentric co-author graph for an author
SELECT ?author1 ?author1Label ?rgb ?author2 ?author2Label
WITH {
  SELECT (COUNT(?work) AS ?count) ?author1 ?author2 WHERE {
    # Find co-authors
    ?work wdt:P50 target:, ?author1, ?author2 .

    # Filtering 
    # Only journal and conference articles, books, not (yet?) software
    # VALUES ?publication_type { wd:Q13442814 wd:Q571 wd:Q26973022}  
    # ?work wdt:P31 ?publication_type .
  }
  GROUP BY ?author1 ?author2
  ORDER BY DESC(?count)
                    
  # Limit the size of the graph, to avoid overburdening the browser
  LIMIT 1000
} AS %authors
WITH {
  SELECT ?author1 ?author2 ?rgb WHERE {
    INCLUDE %authors
    
    # Exclude self-links
    FILTER (?author1 != ?author2)
    
    # Color according to gender
    OPTIONAL {
      ?author1 wdt:P21 ?gender1 . 
      BIND( IF(?gender1 = wd:Q6581097, "3182BD", "E6550D") AS ?rgb)
    }
  }
} AS %result
WHERE {
  INCLUDE %result
  # Label the results 
  SERVICE wikibase:label { bd:serviceParam wikibase:language "en,fr,de,ru,es,zh,jp". }
}`,
"#coauthors-iframe", "author_coauthors.sparql");
// coauthor-map iframe
sparqlToIframe(`# tool: scholia
PREFIX target: <http://www.wikidata.org/entity/Q26876>

#defaultView:Map
SELECT ?organization ?organizationLabel ?geo ?count ?layer
WITH {
  SELECT DISTINCT ?organization ?geo (COUNT(DISTINCT ?work) AS ?count) WHERE {
    ?work wdt:P50 target: ;
          wdt:P50 ?author .
    FILTER (?author != target: )
    ?author ( wdt:P108 | wdt:P463 | wdt:P1416 ) / wdt:P361* ?organization . 
    ?organization (wdt:P625 | ((wdt:P276|wdt:P159)/wdt:P625)) ?geo .
  }
  GROUP BY ?organization ?geo ?count
  ORDER BY DESC (?count)
  LIMIT 2000
} AS %organizations
WHERE {
  INCLUDE %organizations
  BIND(IF( (?count < 1), "No results", IF((?count < 2), "1 result", IF((?count < 11), "1 < results ≤ 10", IF((?count < 101), "10 < results ≤ 100", IF((?count < 1001), "100 < results ≤ 1000", IF((?count < 10001), "1000 < results ≤ 10000", "over 10000 results") ) ) ) )) AS ?layer )
  SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }        
 }
ORDER BY DESC (?count)
`,
"#coauthor-map-iframe", "author_coauthor-map.sparql");
// other-locations iframe
sparqlToIframe(`# tool: scholia
#defaultView:Map
PREFIX target: <http://www.wikidata.org/entity/Q26876>

SELECT DISTINCT ?image ?item ?itemLabel ?geo (?property_item_label AS ?layer)
WHERE {
  target: ?property ?item .
  ?item p:P159/pq:P625 | wdt:P276*/wdt:P625 ?geo .
  ?property_item wikibase:directClaim ?property .
  OPTIONAL { ?item wdt:P18 ?image . } 
  SERVICE wikibase:label { bd:serviceParam wikibase:language "en,da,de,es,fr,jp,nl,no,ru,sv,zh". }
  
  # No automatic labeling on the property, - for some reason.
  ?property_item rdfs:label ?property_item_label . FILTER(LANG(?property_item_label) = 'en')
}`,
"#other-locations-iframe", "author_other-locations.sparql");
// timeline iframe
sparqlToIframe(`# tool: scholia
#defaultView:Timeline
PREFIX target: <http://www.wikidata.org/entity/Q26876>

# Timeline for an author
SELECT ?label ?beginning ?ending ?education_degree_label
WITH {
  SELECT ?work (MIN(?publication_date) AS ?beginning) WHERE {
    ?work wdt:P50 target: .
    ?work wdt:P577 ?publication_date . 
  }
  GROUP BY ?work
} AS %works_with_publication_date
WITH {
  
  SELECT ?work ?beginning (COUNT(?citing_article) AS ?number_of_citations) WHERE {
    INCLUDE %works_with_publication_date
    OPTIONAL { ?citing_article wdt:P2860 ?work . }
  }
  GROUP BY ?work ?beginning 
} AS %works
WHERE {
  # { Birth target: wdt:P569 ?beginning . BIND("Birth" AS ?label) } UNION
  {
    { 
      SELECT ?work ?beginning WHERE {
        INCLUDE %works
      }
      ORDER BY DESC(?number_of_citations)
      LIMIT 1        
    }
    BIND("📖 publication of most cited article" AS ?label)
  }
  UNION
  {
    { 
      SELECT ?work ?beginning WHERE {
        INCLUDE %works
      }
      ORDER BY ?beginning
      LIMIT 1        
    }
    BIND("📖 first publication" AS ?label)
  }
  UNION
  {
    { 
      SELECT ?work ?beginning WHERE {
        INCLUDE %works
      }
      ORDER BY DESC(?beginning)
      LIMIT 1        
    }
    BIND("📖 latest publication" AS ?label)
  }
  UNION
  {
    # Education
    target: p:P69 ?education_statement .
    ?education_statement ps:P69 ?education .
    ?education rdfs:label ?education_label . 
    FILTER (lang(?education_label) = 'en')
    BIND(CONCAT("🦉 ", ?education_label) AS ?label)
    OPTIONAL { ?education_statement pq:P580 ?beginning . }
    OPTIONAL { ?education_statement pq:P582 ?ending . }
    OPTIONAL {
      ?education_statement pq:P512 ?education_degree . 
      ?education_degree rdfs:label ?education_degree_label .
      FILTER (lang(?education_degree_label) = 'en')
    }
  }
  UNION
  {
    # Affiliation
    target: p:P1416 | p:P108 ?affiliation_statement .
    ?affiliation_statement ps:P1416 | ps:P108 ?affiliation .
    ?affiliation rdfs:label ?affiliation_label .
    FILTER (lang(?affiliation_label) = 'en')
    BIND(CONCAT("🏠 ",?affiliation_label) AS ?label)
    # OPTIONAL { ?affiliation wdt:P18 ?image }
    OPTIONAL { ?affiliation_statement pq:P580 ?beginning . }
    OPTIONAL { ?affiliation_statement pq:P582 ?ending . }
    OPTIONAL {
      ?affiliation_statement pq:P512 ?affiliation_degree . 
      ?affiliation_degree rdfs:label ?affiliation_degree_label .
      FILTER (lang(?affiliation_degree_label) = 'en')
    }
  }
  UNION
  {
    target: p:P166 ?award_statement .
    ?award_statement ps:P166 ?award .
    ?award rdfs:label ?award_label .
    FILTER (lang(?award_label) = 'en')
    BIND(CONCAT("🏆 ",?award_label) AS ?label)
    ?award_statement pq:P585 ?beginning .
  }

} `,
"#timeline-iframe", "author_timeline.sparql");
// academic-tree iframe
sparqlToIframe(`# tool: scholia
#defaultView:Graph
PREFIX target: <http://www.wikidata.org/entity/Q26876>

# Doctoral student/advisor network with a source from a spectific researcher
PREFIX gas: <http://www.bigdata.com/rdf/gas#>

SELECT DISTINCT ?student1 ?student1Label ?rgb ?supervisor1 ?supervisor1Label
WHERE {
  { 
    SELECT ?student1 ?supervisor1 (MIN(?depth1) as ?depth)
    WHERE {
      SERVICE gas:service {
        gas:program gas:gasClass "com.bigdata.rdf.graph.analytics.BFS" ;
                gas:in target: ;
                gas:traversalDirection "Forward" ;
                gas:out ?student1 ;
                gas:out1 ?depth1 ;
                gas:out2 ?supervisor1 ;
                gas:linkType wdt:P185 ;
      }
    }
    GROUP BY ?student1 ?supervisor1
  }
  UNION
  { 
    SELECT ?student1 ?supervisor1 (MIN(?depth1) as ?depth)
    WHERE {
      service gas:service {
        gas:program gas:gasClass "com.bigdata.rdf.graph.analytics.BFS" ;
                gas:in target: ;
                gas:traversalDirection "Forward" ;
                gas:out ?supervisor1 ;
                gas:out1 ?depth1 ;
                gas:out2 ?student1 ;
                gas:linkType wdt:P184 ;
      }
    }
    GROUP BY ?student1 ?supervisor1
  }
  UNION
  { 
    SELECT ?student1 ?supervisor1 (MIN(?depth1) as ?depth)
    WHERE {
      SERVICE gas:service {
        gas:program gas:gasClass "com.bigdata.rdf.graph.analytics.BFS" ;
                gas:in target: ;
                gas:traversalDirection "Reverse" ;
                gas:out ?student1 ;
                gas:out1 ?depth1 ;
                gas:out2 ?supervisor1 ;
                gas:linkType wdt:P184 ;
      }
    }
    GROUP BY ?student1 ?supervisor1
  }
  UNION
  { 
    SELECT ?student1 ?supervisor1 (MIN(?depth1) as ?depth)
    WHERE {
      SERVICE gas:service {
        gas:program gas:gasClass "com.bigdata.rdf.graph.analytics.BFS" ;
                gas:in target: ;
                gas:traversalDirection "Reverse" ;
                gas:out ?supervisor1 ;
                gas:out1 ?depth1 ;
                gas:out2 ?student1 ;
                gas:linkType wdt:P185 ;
      }
    }
    GROUP BY ?student1 ?supervisor1
  }
  
  BIND( IF( ?student1 = target:, "3080BB", "ffffff") AS ?rgb)

  SERVICE wikibase:label { bd:serviceParam wikibase:language "en,da,sv,jp,zh,ru,fr,de" .  } 
}
`,
"#academic-tree-iframe", "author_academic-tree.sparql");
// citations-by-year iframe
sparqlToIframe(`# tool: scholia
#defaultView:BarChart
PREFIX target: <http://www.wikidata.org/entity/Q26876>

SELECT ?year (count(distinct ?citing_work) as ?count) ?kind  WHERE {
  ?work wdt:P50 target: .
  ?citing_work wdt:P2860 ?work .
  bind(if (exists { ?citing_work wdt:P50 target: }, "self-citations", "citations from others") as ?kind)
  ?citing_work wdt:P577 ?date .
  BIND(str(YEAR(?date)) AS ?year)
} group by ?year ?kind
order by desc(?year)`,
"#citations-by-year-iframe", "author_citations-by-year.sparql");
// associated-images iframe
sparqlToIframe(`# tool: scholia
#defaultView:ImageGrid
PREFIX target: <http://www.wikidata.org/entity/Q26876>

SELECT DISTINCT ?image WHERE {
  {
    # Images of the person
    target: wdt:P18 ?image .
  }
  UNION {
    # Images from whatever property value is linked.
    
    # Excluded "different from" property and take all other properties
    target: !wdt:P1889 ?item .

    ?item wdt:P18 ?image . 
    
    # All people are humans, so these images are excluded.
    FILTER (?item != wd:Q5)
  }
  UNION {
    # Images associated with works of the author, both direct images,
    # images of topics of the works and images of coauthors.
    target: ^wdt:P50 / (wdt:P921* | wdt:P50) / wdt:P18 ?image .
  }
}   `,
"#associated-images-iframe", "author_associated-images.sparql");

// topics-works-matrix matrix
sparqlToMatrix(`# tool: scholia
PREFIX target: <http://www.wikidata.org/entity/Q26876>

SELECT ?work ?workLabel ?topic ?topicLabel WHERE {
?work wdt:P50 target: .
?work wdt:P921 ?topic .
OPTIONAL { ?work wdt:P577 ?publication_date }
SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en,cz,da,de,es,fr,hi,jp,nl,nn,ru,sv,zh". }
}
ORDER BY ?publication_date`,
"#topics-works-matrix", "author_topics-works-matrix.sparql");



 });

</script>


  </body>
</html>
 contentType 9 text/html url 47 https://scholia.toolforge.org:443/author/Q26876 responseCode 3 200 